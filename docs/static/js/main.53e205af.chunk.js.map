{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F8","g","h","A2","A3","A4","A5","A6","A8","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_JsArray_unsafeGet","index","array","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_map2","_Basics_add","_Basics_pow","Math","pow","_Basics_cos","cos","_Basics_sin","sin","_Basics_tan","tan","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_sqrt","sqrt","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_decodeInt","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_decodeField","field","_Json_mapMany","decoders","_Json_map1","d1","_Json_map2","d2","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_VirtualDom_divertHrefToApp","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","t","s","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_passiveSupported","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNode","_VirtualDom_keyedNodeNS","_VirtualDom_style","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","handler","message","as","stopPropagation","cP","currentEventNode","cG","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","initPair","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","eI","e3","e0","initialModel","view","e6","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","_Browser_cancelAnimationFrame","cancelAnimationFrame","id","clearTimeout","requestAnimationFrame","setTimeout","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","_MJS_v2","Float64Array","_MJS_v3","_MJS_v3scale","_MJS_v4","_WebGL_guid","_WebGL_listEach","fn","_WebGL_listLength","_WebGL_rAF","cb","_WebGL_entity","settings","vert","mesh","uniforms","_WebGL_enableBlend","cache","setting","blend","toggle","enabled","gl","enable","BLEND","blendEquationSeparate","blendFuncSeparate","blendColor","_WebGL_enableDepthTest","depthTest","DEPTH_TEST","depthFunc","depthMask","depthRange","_WebGL_enableStencilTest","stencilTest","STENCIL_TEST","stencilFuncSeparate","FRONT","stencilOpSeparate","stencilMask","BACK","_WebGL_enableScissor","scissor","SCISSOR_TEST","_WebGL_enableColorMask","colorMask","_WebGL_enableCullFace","cullFace","CULL_FACE","_WebGL_enablePolygonOffset","polygonOffset","POLYGON_OFFSET_FILL","_WebGL_enableSampleCoverage","sampleCoverage","SAMPLE_COVERAGE","_WebGL_disableScissor","disable","_WebGL_disableColorMask","_WebGL_settings","_WebGL_disableFunctions","SAMPLE_ALPHA_TO_COVERAGE","_WebGL_doCompile","src","shader","createShader","shaderSource","compileShader","_WebGL_getAttributeInfo","FLOAT","arraySize","Float32Array","baseType","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FLOAT_MAT4","INT","Int32Array","_WebGL_doBindAttribute","attribute","elemSize","c1","idxKeys","fromCharCode","attributeInfo","dataIdx","dataOffset","elem","cnt","fillOffset","forEach","idx","dataFill","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","_WebGL_getProgID","vertID","fragID","_WebGL_drawGL","viewport","drawingBufferWidth","drawingBufferHeight","STENCIL_WRITEMASK","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","entity","progid","program","setters","values","programs","vshader","fshader","shaders","VERTEX_SHADER","FRAGMENT_SHADER","glProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getShaderInfoLog","_WebGL_doLink","assign","currentUniforms","activeAttributes","activeAttributeLocations","uniformSetters","uniformsMap","textureCounter","createUniformSetter","uniform","uniformName","uniformLocation","getUniformLocation","uniform1i","uniform1f","uniform2f","uniform3f","uniform4f","uniformMatrix4fv","SAMPLER_2D","currentTexture","texture","activeTexture","TEXTURE0","tex","textures","el","set","bindTexture","TEXTURE_2D","BOOL","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","_WebGL_createUniformSetters","numActiveAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","attribLocation","getAttribLocation","lastProgId","useProgram","keys","setter","buffers","c9","indexBuffer","indices","indicesList","indexSize","Uint32Array","_WebGL_makeIndexedBuffer","ELEMENT_ARRAY_BUFFER","numIndices","_WebGL_doBindSetup","enableVertexAttribArray","vertexAttribPointer","stride","$elm_explorations$webgl$WebGL$Internal$enableSetting","drawElements","dH","UNSIGNED_INT","drawArrays","_WebGL_toHtml","options","entities","render","_VirtualDom_custom","_WebGL_render","_WebGL_diff","_WebGL_enableAlpha","option","contextAttributes","alpha","premultipliedAlpha","_WebGL_enableDepth","sceneSettings","clearDepth","_WebGL_enableStencil","stencil","clearStencil","_WebGL_enableAntialias","antialias","_WebGL_enableClearColor","clearColor","_WebGL_enablePreserveDrawingBuffer","preserveDrawingBuffer","$elm_explorations$webgl$WebGL$Internal$enableOption","canvas","getContext","WeakMap","sceneSetting","getExtension","sampleAlphaToCoverage","getParameter","innerHTML","oldModel","newModel","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$author$project$Main$Resize","$elm$core$Basics$always","$elm$core$Basics$add","$elm$core$String$fromInt","$elm$core$String$join","chunks","_List_toArray","$elm$core$List$foldl","$elm$core$List$length","_v0","$elm$core$List$map2","$elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","$elm$core$List$range","$elm$core$List$indexedMap","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Array$Leaf","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fromIndex","tail","leaf","tailLen","$elm$core$Platform$Sub$batch","$elm$json$Json$Decode$map","$elm$json$Json$Decode$map2","$elm$core$Basics$identity","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Task$sequence","tasks","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","commands","doStuff","$elm$core$Task$command","$elm$browser$Browser$element","$elm$core$Basics$round","$author$project$Main$init","bk","bl","toMessage","e8","fa","eE","dX","body","documentElement","scrollWidth","offsetWidth","clientWidth","scrollHeight","offsetHeight","clientHeight","d6","pageXOffset","d7","pageYOffset","$elm$browser$Browser$AnimationManager$Delta","$elm$browser$Browser$AnimationManager$State","subs","request","oldTime","cv","dU","d_","$elm$browser$Browser$AnimationManager$init","$elm$core$Process$kill","$elm$browser$Browser$AnimationManager$now","Date","now","$elm$browser$Browser$AnimationManager$rAF","$elm$core$Platform$sendToSelf","$elm$core$Process$spawn","$elm$browser$Browser$AnimationManager$onEffects","_v1","pid","time","$elm$time$Time$millisToPosix","$elm$browser$Browser$AnimationManager$onSelfMsg","newTime","send","sub","$elm$core$Basics$composeL","$elm$browser$Browser$AnimationManager$subscription","$elm$json$Json$Decode$field","$elm$json$Json$Decode$int","$elm$browser$Browser$Events$MySub","$elm$browser$Browser$Events$State","pids","dM","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$empty","$elm$browser$Browser$Events$init","$elm$browser$Browser$Events$addKey","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","right","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Basics$compare","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$elm$core$Dict$fromList","assocs","$elm$core$Dict$foldl","$elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_v3","rKey","rValue","stepState","_v2","lKey","lValue","rest","leftovers","intermediateResult","_v4","$elm$browser$Browser$Events$Event","c4","db","$elm$browser$Browser$Events$spawn","$elm$core$Dict$union","t1","t2","$elm$browser$Browser$Events$onEffects","stepRight","news","stepLeft","_v5","lives","stepBoth","newSubs","livePids","makeNewPids","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","messages","minZ","minY","minX","p0","maxZ","p4","maxY","p3","p7","maxX","p1","p2","p5","p6","exports","$elm$browser$Browser$Events$subscription","$elm$browser$Browser$Events$on","$elm$core$Platform$Cmd$none","$author$project$Main$update","$elm$random$Random$andThen","genA","seed","newSeed","genB","$ianmackenzie$elm_3d_scene$Scene3d$Types$Facets","$ianmackenzie$elm_3d_scene$Scene3d$Types$Indexed","$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormals","$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormalsAndUvs","$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithTangents","$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithUvs","$ianmackenzie$elm_3d_scene$Scene3d$Types$Triangles","$ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyMesh","$ianmackenzie$elm_geometry$BoundingBox3d$extrema","$ianmackenzie$elm_units$Quantity$max","$elm$core$Basics$min","$ianmackenzie$elm_units$Quantity$min","$ianmackenzie$elm_geometry$BoundingBox3d$aggregateOfHelp","currentMinX","currentMaxX","currentMinY","currentMaxY","currentMinZ","currentMaxZ","getBoundingBox","items","dA","dB","dC","dD","dE","dF","$ianmackenzie$elm_geometry$BoundingBox3d$aggregateOf","first","b1","$ianmackenzie$elm_units$Quantity$lessThanOrEqualTo","$ianmackenzie$elm_geometry$Triangle3d$vertices","$ianmackenzie$elm_geometry$Point3d$xCoordinate","$ianmackenzie$elm_geometry$Point3d$yCoordinate","$ianmackenzie$elm_geometry$Point3d$zCoordinate","b5","$ianmackenzie$elm_geometry$Triangle3d$boundingBox","triangle","given","x1","y1","z1","x2","y2","z2","x3","y3","z3","$elm_explorations$linear_algebra$Math$Vector3$fromRecord","$ianmackenzie$elm_geometry$Point3d$unwrap","$ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3","point","$ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Vector3d$toVec3","vector","$ianmackenzie$elm_geometry$Vector3d$cross","$ianmackenzie$elm_geometry$Vector3d$from","$ianmackenzie$elm_units$Quantity$float","$elm$core$Basics$abs","$elm$core$Basics$sqrt","$ianmackenzie$elm_geometry$Vector3d$zero","$ianmackenzie$elm_geometry$Vector3d$normalize","largestComponent","scaledZ","scaledY","scaledX","scaledLength","$ianmackenzie$elm_geometry$Vector3d$scaleTo","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$triangleNormal","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$facetAttributes","normal","bZ","$elm_explorations$webgl$WebGL$triangles","$elm_explorations$webgl$WebGL$Mesh3","$ianmackenzie$elm_geometry$Triangle3d$from","$ianmackenzie$elm_units$Length$meters","numMeters","$ianmackenzie$elm_units$Quantity$multiplyBy","scale","$ianmackenzie$elm_geometry$Point3d$xyz","$ianmackenzie$elm_3d_scene$Scene3d$Primitives$block","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$cullBackFaces","givenTriangles","webGLMesh","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$facets","$ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow","$ianmackenzie$elm_3d_scene$Scene3d$Types$Shadow","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$collectShadowVertices","getPosition","accumulated","mv1","mv2","faceNormal","sv1","sv2","sv3","$elm$core$Maybe$map3","ma","mb","mc","$elm$core$Array$bitMask","$elm$core$Elm$JsArray$unsafeGet","$elm$core$Array$getHelp","$elm$core$Array$get","startShift","$elm$core$Array$tailIndex","$ianmackenzie$elm_triangular_mesh$TriangularMesh$vertex","am","$elm$core$Array$fromListHelp","jsArray","remainingItems","$elm$core$Array$fromList","$elm$core$List$any","isOkay","$elm$core$Basics$not","bool","$elm$core$List$all","$elm$core$List$filter","isGood","$ianmackenzie$elm_triangular_mesh$TriangularMesh$indexed","vertices_","faceIndices_","numVertices","validIndices","E","$elm_explorations$webgl$WebGL$indexedTriangles","$elm_explorations$webgl$WebGL$MeshIndexed3","$ianmackenzie$elm_geometry$Point3d$toMeters","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey","firstPoint","secondPoint","$elm$core$Dict$get","targetKey","$elm_explorations$linear_algebra$Math$Vector3$vec3","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$zeroVec3","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdge","start","end","neighborDict","shadowFaceIndices","extraShadowVertices","nextShadowVertexIndex","v2","v1","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdges","meshFaceVertices","remainingMeshFaceVertices","$temp$getPosition","$temp$neighborDict","$temp$meshFaceVertices","$temp$nextShadowVertexIndex","$temp$state","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$visitFaces","updatedNeighborDict","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl","meshBounds","triangularMesh","firstVertex","secondVertex","thirdVertex","initialShadowVertices","allShadowFaceIndices","allShadowVertices","$elm$core$List$append","$elm$core$List$concat","lists","$ianmackenzie$elm_3d_scene$Scene3d$Primitives$blockShadow","faceVertices_","$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadow","$ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyNode","$ianmackenzie$elm_3d_scene$Scene3d$Entity$empty","$ianmackenzie$elm_3d_scene$Scene3d$Types$Group","$ianmackenzie$elm_3d_scene$Scene3d$Entity$collectNodes","drawables","$ianmackenzie$elm_3d_scene$Scene3d$Entity$group","$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$colorTextureFragment","colorTexture","ctx","_WebGL_enableSampleAlphaToCoverage","$elm_explorations$webgl$WebGL$entityWith","$elm_explorations$webgl$WebGL$Settings$cullFace","$ianmackenzie$elm_3d_scene$Scene3d$Entity$cullBackFaceSetting","$ianmackenzie$elm_3d_scene$Scene3d$Entity$cullFrontFaceSetting","$ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings","isRightHanded","backFaceSetting","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$unlitVertex","position","uv","modelMatrix","modelScale","projectionMatrix","sceneProperties","viewMatrix","$ianmackenzie$elm_3d_scene$Scene3d$Entity$colorTextureMesh","bounds","lights","bH","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantFragment","constantColor","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$plainVertex","$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh","aD","$ianmackenzie$elm_3d_scene$Scene3d$Types$PointNode","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantPointFragment","pointRadius","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$pointVertex","$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantPointMesh","radius","bY","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveFragment","emissiveColor","$ianmackenzie$elm_units$Luminance$inNits","$elm_explorations$linear_algebra$Math$Vector3$scale","$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh","backlight","aO","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissivePointFragment","$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissivePointMesh","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianFragment","enabledLights","lights12","lights34","lights56","lights78","materialColor","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$uniformVertex","$ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh","T","bd","bP","bQ","bR","co","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianTextureFragment","materialColorTexture","normalMapTexture","useNormalMap","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$normalMappedVertex","tangent","$ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedLambertianMesh","materialColorData","normalMapData","cp","aV","a_","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalTexturesFragment","baseColorTexture","constantBaseColor","constantMetallic","constantRoughness","metallicTexture","roughnessTexture","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalFragment","baseColor","metallic","roughness","$ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh","ee","cr","eX","$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedLambertianMaterial","$ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple","fallbackData","channel","D","$elm_explorations$linear_algebra$Math$Vector3$getX","$elm_explorations$linear_algebra$Math$Vector3$getY","$elm_explorations$linear_algebra$Math$Vector3$getZ","$elm_explorations$linear_algebra$Math$Vector4$vec4","$ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec4","$ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple","$ianmackenzie$elm_3d_scene$Scene3d$Entity$resolveLambertian","$ianmackenzie$elm_3d_scene$Scene3d$Entity$ConstantPbrMaterial","$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial","$ianmackenzie$elm_3d_scene$Scene3d$Entity$Tuple4","$elm_explorations$linear_algebra$Math$Vector2$vec2","$ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec2","$ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple","$ianmackenzie$elm_3d_scene$Scene3d$Entity$resolvePbr","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveTextureFragment","$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedEmissiveMesh","colorData","b6","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$texturedVertex","$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedLambertianMesh","$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedPhysicalMesh","baseColorData","roughnessData","metallicData","b8","ca","cc","cs","cM","$ianmackenzie$elm_units$Quantity$interpolateFrom","parameter","$ianmackenzie$elm_geometry$BoundingBox3d$maxZ","$ianmackenzie$elm_geometry$BoundingBox3d$minZ","$ianmackenzie$elm_units$Quantity$minus","$ianmackenzie$elm_geometry$BoundingBox3d$dimensions","boundingBox","$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds","xDimension","yDimension","zDimension","ei","$ianmackenzie$elm_geometry$BoundingBox3d$centerPoint","eB","eC","eD","$ianmackenzie$elm_3d_scene$Scene3d$Entity$mesh","givenMaterial","givenMesh","_v8","_v11","cullBackFaces","_v14","_v16","_v17","_v18","_v19","$ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedPhysicalMesh","$ianmackenzie$elm_geometry$Direction3d$xComponent","$ianmackenzie$elm_geometry$Direction3d$yComponent","$ianmackenzie$elm_geometry$Direction3d$zComponent","$ianmackenzie$elm_geometry$Frame3d$originPoint","cw","$ianmackenzie$elm_geometry$Direction3d$unwrap","$ianmackenzie$elm_geometry$Frame3d$xDirection","cV","$ianmackenzie$elm_geometry$Frame3d$yDirection","cW","$ianmackenzie$elm_geometry$Frame3d$zDirection","cX","$ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$compose","da","I","J","K","b2","$ianmackenzie$elm_3d_scene$Scene3d$Entity$transformBy","transformation","underlyingNode","$ianmackenzie$elm_3d_scene$Scene3d$Entity$placeIn","frame","givenDrawable","$ianmackenzie$elm_geometry$Frame3d$isRightHanded","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$placeIn","$ianmackenzie$elm_3d_scene$Scene3d$Types$ShadowNode","$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleBounds","scaleX","scaleY","scaleZ","originalCenterPoint","$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleDrawFunction","originalDrawFunction","d5","updatedModelScale","$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleNode","scalingFactors","drawFunction","$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScale","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowFragment","$elm_explorations$webgl$WebGL$Internal$StencilTest","$elm$core$Basics$composeR","$elm_explorations$webgl$WebGL$Settings$StencilTest$testSeparate","options1","options2","ref","cJ","mask","cn","writeMask","cU","expandTest","expandOp","expand","bp","a8","by","bz","$ianmackenzie$elm_3d_scene$Scene3d$Entity$leftHandedStencilTest","$ianmackenzie$elm_3d_scene$Scene3d$Entity$rightHandedStencilTest","$ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowSettings","$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowVertex","shadowLight","$ianmackenzie$elm_3d_scene$Scene3d$Entity$shadow","givenShadow","b3","$ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowDrawFunction","$ianmackenzie$elm_3d_scene$Scene3d$Entity$block","renderObject","renderShadow","givenBlock","baseEntity","untransformedEntity","en","$ianmackenzie$elm_geometry$Frame3d$copy","ec","$ianmackenzie$elm_3d_scene$Scene3d$block","$ianmackenzie$elm_units$Angle$degrees","numDegrees","$elm$random$Random$Seed","$elm$random$Random$next","incr","$elm$random$Random$peel","word","$elm$random$Random$float","seed0","seed1","range","n1","$ianmackenzie$elm_3d_scene$Scene3d$Types$Constant","$ianmackenzie$elm_3d_scene$Scene3d$Types$PbrMaterial","$elm$core$Basics$clamp","$elm$core$Basics$pow","$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$inverseGamma","$avh4$elm_color$Color$RgbaSpace","$avh4$elm_color$Color$scaleFrom255","$avh4$elm_color$Color$rgb255","$elm$core$Basics$cos","$elm$core$Basics$sin","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$rotateAround","axis","angle","halfAngle","qw","sinHalfAngle","eo","qx","wx","xx","qy","wy","xy","yy","a22","qz","wz","a01","a10","xz","a02","a20","yz","a12","a21","zz","a00","a11","$ianmackenzie$elm_3d_scene$Scene3d$Entity$rotateAround","$ianmackenzie$elm_3d_scene$Scene3d$rotateAround","$elm$random$Random$step","$ianmackenzie$elm_geometry$Axis3d$through","givenPoint","givenDirection","$elm$random$Random$addOne","$elm$random$Random$getByWeight","others","countdown","weight","second","otherOthers","$elm$random$Random$map","$elm$random$Random$weighted","normalize","total","$elm$random$Random$uniform","valueList","$ianmackenzie$elm_units$Quantity$abs","$ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo","$ianmackenzie$elm_units$Quantity$midpoint","$ianmackenzie$elm_geometry$Direction3d$unsafe","givenComponents","$ianmackenzie$elm_geometry$Direction3d$negativeX","$ianmackenzie$elm_geometry$Direction3d$negativeY","$ianmackenzie$elm_geometry$Direction3d$negativeZ","$ianmackenzie$elm_geometry$Direction3d$positiveX","$ianmackenzie$elm_geometry$Direction3d$positiveY","$ianmackenzie$elm_geometry$Direction3d$positiveZ","$ianmackenzie$elm_geometry$Frame3d$unsafe","properties","$ianmackenzie$elm_geometry$Block3d$axisAligned","computedZDirection","computedYDirection","computedXDirection","computedDimensions","$author$project$Main$blockAtIndex","xyPositionOffset","angleOffset","xi","yi","axisOffset","rotateDirection","theta","$ianmackenzie$elm_geometry$Direction3d$yz","$ianmackenzie$elm_geometry$Direction3d$zy","$elm$random$Random$initialSeed","aL","b9","cd","cI","green","blue","$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$colorToLinearRgb","$ianmackenzie$elm_3d_scene$Scene3d$Material$pbr","$ianmackenzie$elm_3d_scene$Scene3d$Material$nonmetal","fc","ff","fi","fd","fg","fj","$ianmackenzie$elm_geometry$Block3d$with","$elm$core$List$concatMap","$elm$html$Html$div","$ianmackenzie$elm_units$Pixels$int","numPixels","$ianmackenzie$elm_geometry$Vector3d$direction","$elm$core$Maybe$andThen","maybeValue","$ianmackenzie$elm_geometry$Vector3d$dot","$ianmackenzie$elm_units$Quantity$greaterThan","$ianmackenzie$elm_units$Quantity$lessThan","$elm$core$Maybe$map","maybe","$ianmackenzie$elm_geometry$Vector3d$minus","$ianmackenzie$elm_geometry$Vector3d$projectionIn","projectedLength","$ianmackenzie$elm_geometry$Direction3d$orthonormalize","xVector","xyVector","xyzVector","xDirection","yDirection","rightHandedZVector","tripleProduct","zVector","zDirection","$ianmackenzie$elm_geometry$Direction3d$perpendicularBasis","direction","absZ","absY","absX","$ianmackenzie$elm_geometry$Direction3d$perpendicularTo","$ianmackenzie$elm_geometry$Frame3d$withZDirection","givenZDirection","givenOrigin","$ianmackenzie$elm_geometry$Point3d$meters","$ianmackenzie$elm_units$Quantity$half","$elm$core$Basics$tan","$elm$html$Html$Attributes$style","$elm_explorations$webgl$WebGL$antialias","$elm_explorations$webgl$WebGL$clearColor","$elm$html$Html$Keyed$node","_VirtualDom_noScript","$elm$core$String$fromFloat","$elm_explorations$webgl$WebGL$toHtmlWith","$ianmackenzie$elm_units$Pixels$toInt","$ianmackenzie$elm_3d_scene$Scene3d$allLightsEnabled","$ianmackenzie$elm_3d_scene$Scene3d$call","renderPasses","renderPass","$ianmackenzie$elm_3d_scene$Scene3d$Types$CieXyz","$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToCieXyz","$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToLinearRgb","intensity","chromaticity","bigX","bigY","bigZ","$elm_explorations$linear_algebra$Math$Matrix4$fromRecord","dj","dn","dr","dv","dk","$7","ds","dw","dl","dp","dt","dx","dm","dq","du","dy","$ianmackenzie$elm_3d_scene$Scene3d$createRenderPass","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$modelMatrix","$ianmackenzie$elm_3d_scene$Scene3d$collectRenderPasses","currentTransformation","collectRenderPasses","childNode","O","Z","eY","$elm_explorations$webgl$WebGL$Settings$colorMask","$elm_explorations$webgl$WebGL$Internal$DepthTest","$elm_explorations$webgl$WebGL$Settings$polygonOffset","$ianmackenzie$elm_3d_scene$Scene3d$createShadowStencil","_","aa","ad","$ianmackenzie$elm_3d_scene$Scene3d$dummyFragmentShader","$ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadMesh","$elm_explorations$webgl$WebGL$Mesh1","$elm_explorations$webgl$WebGL$triangleStrip","$ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadVertexShader","$elm_explorations$webgl$WebGL$Settings$StencilTest$test","$ianmackenzie$elm_3d_scene$Scene3d$updateStencil","test","$ianmackenzie$elm_3d_scene$Scene3d$resetStencil","$ianmackenzie$elm_3d_scene$Scene3d$storeStencilValue","lightIndex","$ianmackenzie$elm_3d_scene$Scene3d$createShadow","shadowRenderPasses","lightMatrix","$ianmackenzie$elm_3d_scene$Scene3d$createShadows","shadowCasters","$elm_explorations$webgl$WebGL$Settings$DepthTest$default","$elm_explorations$webgl$WebGL$Settings$Blend$Blender","$elm_explorations$webgl$WebGL$Settings$Blend$customAdd","$ianmackenzie$elm_3d_scene$Scene3d$defaultBlend","b$","bK","bD","bA","bG","f11","f12","eq2","f21","f22","$elm_explorations$webgl$WebGL$Internal$Blend","$elm_explorations$webgl$WebGL$Settings$Blend$custom","$ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault","$ianmackenzie$elm_3d_camera$Viewpoint3d$eyePoint","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$placementFrame","givenCoordinates","$ianmackenzie$elm_geometry$Direction3d$relativeTo","$ianmackenzie$elm_geometry$Point3d$relativeTo","deltaX","deltaY","deltaZ","$ianmackenzie$elm_geometry$Frame3d$relativeTo","otherFrame","$ianmackenzie$elm_geometry$BoundingBox3d$union","firstBox","secondBox","$ianmackenzie$elm_units$Quantity$plus","$ianmackenzie$elm_geometry$BoundingBox3d$withDimensions","givenCenterPoint","givenLength","givenHeight","halfWidth","halfLength","halfHeight","x0","y0","z0","$ianmackenzie$elm_3d_scene$Scene3d$updateViewBounds","viewFrame","modelBounds","current","originalCenter","modelZDimension","modelYDimension","modelXDimension","modelCenterZ","modelCenterY","modelCenterX","nodeBounds","$ianmackenzie$elm_3d_scene$Scene3d$getViewBounds","getViewBounds","$temp$viewFrame","$temp$scale","$temp$current","updated","localViewFrame","localScale","$ianmackenzie$elm_3d_scene$Scene3d$Transformation$identity","$ianmackenzie$elm_3d_scene$Scene3d$initStencil","$ianmackenzie$elm_3d_scene$Scene3d$Light$disabled","eh","cF","cR","$ianmackenzie$elm_3d_scene$Scene3d$lightPair","$ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled","$ianmackenzie$elm_units$Quantity$negate","$elm_explorations$webgl$WebGL$Settings$DepthTest$lessOrEqual","$ianmackenzie$elm_3d_scene$Scene3d$outsideStencil","$elm$core$Basics$isInfinite","Infinity","$ianmackenzie$elm_3d_camera$WebGL$Matrices$projectionMatrix","camera","farClipDepth","ez","aspectRatio","eb","eP","cH","viewportHeight","frustumSlope","$ianmackenzie$elm_3d_scene$Scene3d$enabledFlag","lightMask","$ianmackenzie$elm_3d_scene$Scene3d$renderWithinShadows","meshRenderPasses","lightMatrices","numShadowingLights","$ianmackenzie$elm_3d_scene$Scene3d$insideStencil","$ianmackenzie$elm_geometry$Direction3d$reverse","$ianmackenzie$elm_3d_camera$Viewpoint3d$viewDirection","$ianmackenzie$elm_geometry$Frame3d$atOrigin","$ianmackenzie$elm_3d_camera$WebGL$Matrices$modelViewMatrix","modelFrame","$ianmackenzie$elm_geometry$Vector3d$xyz","$ianmackenzie$elm_3d_scene$Scene3d$composite","_arguments","scenes","commonWebGLOptions","$elm_explorations$webgl$WebGL$stencil","$elm_explorations$webgl$WebGL$alpha","aM","webGLOptions","scalingFactor","width","heightInPixels","heightCss","widthInPixels","webGLEntities","scene","viewpoint","eg","e7","rootNode","et","viewBounds","nearClipDepth","ek","sceneDiameter","$ianmackenzie$elm_geometry$Vector3d$length","projectionType","eyePointOrDirectionToCamera","aw","toneMapType","toneMapParam","referenceWhite","ap","az","d$","_v7","ar","allLightMatrices","$ianmackenzie$elm_3d_scene$Scene3d$toWebGLEntities","widthCss","backgroundColorString","strings","pct","$avh4$elm_color$Color$toCssString","ed","$elm$html$Html$Attributes$height","$ianmackenzie$elm_3d_scene$Scene3d$Light$chromaticity","$ianmackenzie$elm_3d_scene$Scene3d$Light$daylight","$ianmackenzie$elm_3d_scene$Scene3d$Light$directional","light","shadowFlag","rgb","ce","bF","$ianmackenzie$elm_units$Illuminance$lux","numLux","$ianmackenzie$elm_3d_scene$Scene3d$multisampling","$ianmackenzie$elm_3d_scene$Scene3d$noToneMapping","$ianmackenzie$elm_units$Illuminance$inLux","$ianmackenzie$elm_3d_scene$Scene3d$Light$overhead","eJ","eK","nitsBelow","nitsAbove","d4","$ianmackenzie$elm_3d_scene$Scene3d$Light$soft","$ianmackenzie$elm_3d_scene$Scene3d$Light$colorTemperature","temperature","$ianmackenzie$elm_units$Temperature$kelvins","numKelvins","$ianmackenzie$elm_3d_scene$Scene3d$Light$skylight","$ianmackenzie$elm_3d_scene$Scene3d$Light$sunlight","$ianmackenzie$elm_3d_scene$Scene3d$MultiplePasses","$ianmackenzie$elm_3d_scene$Scene3d$SingleUnshadowedPass","$ianmackenzie$elm_3d_scene$Scene3d$eraseLight","$ianmackenzie$elm_3d_scene$Scene3d$lightCastsShadows","$ianmackenzie$elm_3d_scene$Scene3d$noLights","$elm$core$List$partition","pred","trues","falses","$ianmackenzie$elm_3d_scene$Scene3d$singleLight","$ianmackenzie$elm_3d_scene$Scene3d$eightLights","third","fourth","fifth","sixth","seventh","eigth","enabledShadowCasters","sortedLights","light0","light1","light2","light3","$ianmackenzie$elm_3d_scene$Scene3d$threeLights","$ianmackenzie$elm_3d_scene$Scene3d$transparentBackground","Main","halfFieldOfView","e5","eA","ex","yVector","$ianmackenzie$elm_3d_camera$Viewpoint3d$lookAt","sun","e1","sky","environment","$ianmackenzie$elm_3d_scene$Scene3d$custom","$ianmackenzie$elm_3d_scene$Scene3d$sunny","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","Elm","navigator","registration"],"mappings":"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","file":"static/js/main.53e205af.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.cO.be === region.c2.be)\n\t{\n\t\treturn 'on line ' + region.cO.be;\n\t}\n\treturn 'on lines ' + region.cO.be + ' through ' + region.c2.be;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.eI,\n\t\timpl.e3,\n\t\timpl.e0,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tvar initPair = init(result.a);\n\tvar model = initPair.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tvar pair = A2(update, msg, model);\n\t\tstepper(model = pair.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, pair.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tas: func(record.as),\n\t\tcP: record.cP,\n\t\tcG: record.cG\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.as;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.cP;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.cG) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.eI,\n\t\timpl.e3,\n\t\timpl.e0,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.e6;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.eI,\n\t\timpl.e3,\n\t\timpl.e0,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.cN && impl.cN(sendToApp)\n\t\t\tvar view = impl.e6;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.ef);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.e2) && (_VirtualDom_doc.title = title = doc.e2);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.eR;\n\tvar onUrlRequest = impl.eS;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tcN: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.dR === next.dR\n\t\t\t\t\t\t\t&& curr.c7 === next.c7\n\t\t\t\t\t\t\t&& curr.dO.a === next.dO.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\teI: function(flags)\n\t\t{\n\t\t\treturn A3(impl.eI, flags, _Browser_getUrl(), key);\n\t\t},\n\t\te6: impl.e6,\n\t\te3: impl.e3,\n\t\te0: impl.e0\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { eG: 'hidden', ej: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { eG: 'mozHidden', ej: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { eG: 'msHidden', ej: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { eG: 'webkitHidden', ej: 'webkitvisibilitychange' }\n\t\t: { eG: 'hidden', ej: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tdX: _Browser_getScene(),\n\t\te8: {\n\t\t\td6: _Browser_window.pageXOffset,\n\t\t\td7: _Browser_window.pageYOffset,\n\t\t\tfa: _Browser_doc.documentElement.clientWidth,\n\t\t\teE: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tfa: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\teE: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tdX: {\n\t\t\t\tfa: node.scrollWidth,\n\t\t\t\teE: node.scrollHeight\n\t\t\t},\n\t\t\te8: {\n\t\t\t\td6: node.scrollLeft,\n\t\t\t\td7: node.scrollTop,\n\t\t\t\tfa: node.clientWidth,\n\t\t\t\teE: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tdX: _Browser_getScene(),\n\t\t\te8: {\n\t\t\t\td6: x,\n\t\t\t\td7: y,\n\t\t\t\tfa: _Browser_doc.documentElement.clientWidth,\n\t\t\t\teE: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\ter: {\n\t\t\t\td6: x + rect.left,\n\t\t\t\td7: y + rect.top,\n\t\t\t\tfa: rect.width,\n\t\t\t\teE: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n/*\n * Copyright (c) 2010 Mozilla Corporation\n * Copyright (c) 2010 Vladimir Vukicevic\n * Copyright (c) 2013 John Mayer\n * Copyright (c) 2018 Andrey Kuzmin\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// Vector2\n\nvar _MJS_v2 = F2(function(x, y) {\n    return new Float64Array([x, y]);\n});\n\nvar _MJS_v2getX = function(a) {\n    return a[0];\n};\n\nvar _MJS_v2getY = function(a) {\n    return a[1];\n};\n\nvar _MJS_v2setX = F2(function(x, a) {\n    return new Float64Array([x, a[1]]);\n});\n\nvar _MJS_v2setY = F2(function(y, a) {\n    return new Float64Array([a[0], y]);\n});\n\nvar _MJS_v2toRecord = function(a) {\n    return { d6: a[0], d7: a[1] };\n};\n\nvar _MJS_v2fromRecord = function(r) {\n    return new Float64Array([r.d6, r.d7]);\n};\n\nvar _MJS_v2add = F2(function(a, b) {\n    var r = new Float64Array(2);\n    r[0] = a[0] + b[0];\n    r[1] = a[1] + b[1];\n    return r;\n});\n\nvar _MJS_v2sub = F2(function(a, b) {\n    var r = new Float64Array(2);\n    r[0] = a[0] - b[0];\n    r[1] = a[1] - b[1];\n    return r;\n});\n\nvar _MJS_v2negate = function(a) {\n    var r = new Float64Array(2);\n    r[0] = -a[0];\n    r[1] = -a[1];\n    return r;\n};\n\nvar _MJS_v2direction = F2(function(a, b) {\n    var r = new Float64Array(2);\n    r[0] = a[0] - b[0];\n    r[1] = a[1] - b[1];\n    var im = 1.0 / _MJS_v2lengthLocal(r);\n    r[0] = r[0] * im;\n    r[1] = r[1] * im;\n    return r;\n});\n\nfunction _MJS_v2lengthLocal(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n}\nvar _MJS_v2length = _MJS_v2lengthLocal;\n\nvar _MJS_v2lengthSquared = function(a) {\n    return a[0] * a[0] + a[1] * a[1];\n};\n\nvar _MJS_v2distance = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    return Math.sqrt(dx * dx + dy * dy);\n});\n\nvar _MJS_v2distanceSquared = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    return dx * dx + dy * dy;\n});\n\nvar _MJS_v2normalize = function(a) {\n    var r = new Float64Array(2);\n    var im = 1.0 / _MJS_v2lengthLocal(a);\n    r[0] = a[0] * im;\n    r[1] = a[1] * im;\n    return r;\n};\n\nvar _MJS_v2scale = F2(function(k, a) {\n    var r = new Float64Array(2);\n    r[0] = a[0] * k;\n    r[1] = a[1] * k;\n    return r;\n});\n\nvar _MJS_v2dot = F2(function(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n});\n\n// Vector3\n\nvar _MJS_v3temp1Local = new Float64Array(3);\nvar _MJS_v3temp2Local = new Float64Array(3);\nvar _MJS_v3temp3Local = new Float64Array(3);\n\nvar _MJS_v3 = F3(function(x, y, z) {\n    return new Float64Array([x, y, z]);\n});\n\nvar _MJS_v3getX = function(a) {\n    return a[0];\n};\n\nvar _MJS_v3getY = function(a) {\n    return a[1];\n};\n\nvar _MJS_v3getZ = function(a) {\n    return a[2];\n};\n\nvar _MJS_v3setX = F2(function(x, a) {\n    return new Float64Array([x, a[1], a[2]]);\n});\n\nvar _MJS_v3setY = F2(function(y, a) {\n    return new Float64Array([a[0], y, a[2]]);\n});\n\nvar _MJS_v3setZ = F2(function(z, a) {\n    return new Float64Array([a[0], a[1], z]);\n});\n\nvar _MJS_v3toRecord = function(a) {\n    return { d6: a[0], d7: a[1], b5: a[2] };\n};\n\nvar _MJS_v3fromRecord = function(r) {\n    return new Float64Array([r.d6, r.d7, r.b5]);\n};\n\nvar _MJS_v3add = F2(function(a, b) {\n    var r = new Float64Array(3);\n    r[0] = a[0] + b[0];\n    r[1] = a[1] + b[1];\n    r[2] = a[2] + b[2];\n    return r;\n});\n\nfunction _MJS_v3subLocal(a, b, r) {\n    if (r === undefined) {\n        r = new Float64Array(3);\n    }\n    r[0] = a[0] - b[0];\n    r[1] = a[1] - b[1];\n    r[2] = a[2] - b[2];\n    return r;\n}\nvar _MJS_v3sub = F2(_MJS_v3subLocal);\n\nvar _MJS_v3negate = function(a) {\n    var r = new Float64Array(3);\n    r[0] = -a[0];\n    r[1] = -a[1];\n    r[2] = -a[2];\n    return r;\n};\n\nfunction _MJS_v3directionLocal(a, b, r) {\n    if (r === undefined) {\n        r = new Float64Array(3);\n    }\n    return _MJS_v3normalizeLocal(_MJS_v3subLocal(a, b, r), r);\n}\nvar _MJS_v3direction = F2(_MJS_v3directionLocal);\n\nfunction _MJS_v3lengthLocal(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n}\nvar _MJS_v3length = _MJS_v3lengthLocal;\n\nvar _MJS_v3lengthSquared = function(a) {\n    return a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n};\n\nvar _MJS_v3distance = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    var dz = a[2] - b[2];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n});\n\nvar _MJS_v3distanceSquared = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    var dz = a[2] - b[2];\n    return dx * dx + dy * dy + dz * dz;\n});\n\nfunction _MJS_v3normalizeLocal(a, r) {\n    if (r === undefined) {\n        r = new Float64Array(3);\n    }\n    var im = 1.0 / _MJS_v3lengthLocal(a);\n    r[0] = a[0] * im;\n    r[1] = a[1] * im;\n    r[2] = a[2] * im;\n    return r;\n}\nvar _MJS_v3normalize = _MJS_v3normalizeLocal;\n\nvar _MJS_v3scale = F2(function(k, a) {\n    return new Float64Array([a[0] * k, a[1] * k, a[2] * k]);\n});\n\nvar _MJS_v3dotLocal = function(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\nvar _MJS_v3dot = F2(_MJS_v3dotLocal);\n\nfunction _MJS_v3crossLocal(a, b, r) {\n    if (r === undefined) {\n        r = new Float64Array(3);\n    }\n    r[0] = a[1] * b[2] - a[2] * b[1];\n    r[1] = a[2] * b[0] - a[0] * b[2];\n    r[2] = a[0] * b[1] - a[1] * b[0];\n    return r;\n}\nvar _MJS_v3cross = F2(_MJS_v3crossLocal);\n\nvar _MJS_v3mul4x4 = F2(function(m, v) {\n    var w;\n    var tmp = _MJS_v3temp1Local;\n    var r = new Float64Array(3);\n\n    tmp[0] = m[3];\n    tmp[1] = m[7];\n    tmp[2] = m[11];\n    w = _MJS_v3dotLocal(v, tmp) + m[15];\n    tmp[0] = m[0];\n    tmp[1] = m[4];\n    tmp[2] = m[8];\n    r[0] = (_MJS_v3dotLocal(v, tmp) + m[12]) / w;\n    tmp[0] = m[1];\n    tmp[1] = m[5];\n    tmp[2] = m[9];\n    r[1] = (_MJS_v3dotLocal(v, tmp) + m[13]) / w;\n    tmp[0] = m[2];\n    tmp[1] = m[6];\n    tmp[2] = m[10];\n    r[2] = (_MJS_v3dotLocal(v, tmp) + m[14]) / w;\n    return r;\n});\n\n// Vector4\n\nvar _MJS_v4 = F4(function(x, y, z, w) {\n    return new Float64Array([x, y, z, w]);\n});\n\nvar _MJS_v4getX = function(a) {\n    return a[0];\n};\n\nvar _MJS_v4getY = function(a) {\n    return a[1];\n};\n\nvar _MJS_v4getZ = function(a) {\n    return a[2];\n};\n\nvar _MJS_v4getW = function(a) {\n    return a[3];\n};\n\nvar _MJS_v4setX = F2(function(x, a) {\n    return new Float64Array([x, a[1], a[2], a[3]]);\n});\n\nvar _MJS_v4setY = F2(function(y, a) {\n    return new Float64Array([a[0], y, a[2], a[3]]);\n});\n\nvar _MJS_v4setZ = F2(function(z, a) {\n    return new Float64Array([a[0], a[1], z, a[3]]);\n});\n\nvar _MJS_v4setW = F2(function(w, a) {\n    return new Float64Array([a[0], a[1], a[2], w]);\n});\n\nvar _MJS_v4toRecord = function(a) {\n    return { d6: a[0], d7: a[1], b5: a[2], d5: a[3] };\n};\n\nvar _MJS_v4fromRecord = function(r) {\n    return new Float64Array([r.d6, r.d7, r.b5, r.d5]);\n};\n\nvar _MJS_v4add = F2(function(a, b) {\n    var r = new Float64Array(4);\n    r[0] = a[0] + b[0];\n    r[1] = a[1] + b[1];\n    r[2] = a[2] + b[2];\n    r[3] = a[3] + b[3];\n    return r;\n});\n\nvar _MJS_v4sub = F2(function(a, b) {\n    var r = new Float64Array(4);\n    r[0] = a[0] - b[0];\n    r[1] = a[1] - b[1];\n    r[2] = a[2] - b[2];\n    r[3] = a[3] - b[3];\n    return r;\n});\n\nvar _MJS_v4negate = function(a) {\n    var r = new Float64Array(4);\n    r[0] = -a[0];\n    r[1] = -a[1];\n    r[2] = -a[2];\n    r[3] = -a[3];\n    return r;\n};\n\nvar _MJS_v4direction = F2(function(a, b) {\n    var r = new Float64Array(4);\n    r[0] = a[0] - b[0];\n    r[1] = a[1] - b[1];\n    r[2] = a[2] - b[2];\n    r[3] = a[3] - b[3];\n    var im = 1.0 / _MJS_v4lengthLocal(r);\n    r[0] = r[0] * im;\n    r[1] = r[1] * im;\n    r[2] = r[2] * im;\n    r[3] = r[3] * im;\n    return r;\n});\n\nfunction _MJS_v4lengthLocal(a) {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n}\nvar _MJS_v4length = _MJS_v4lengthLocal;\n\nvar _MJS_v4lengthSquared = function(a) {\n    return a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3];\n};\n\nvar _MJS_v4distance = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    var dz = a[2] - b[2];\n    var dw = a[3] - b[3];\n    return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);\n});\n\nvar _MJS_v4distanceSquared = F2(function(a, b) {\n    var dx = a[0] - b[0];\n    var dy = a[1] - b[1];\n    var dz = a[2] - b[2];\n    var dw = a[3] - b[3];\n    return dx * dx + dy * dy + dz * dz + dw * dw;\n});\n\nvar _MJS_v4normalize = function(a) {\n    var r = new Float64Array(4);\n    var im = 1.0 / _MJS_v4lengthLocal(a);\n    r[0] = a[0] * im;\n    r[1] = a[1] * im;\n    r[2] = a[2] * im;\n    r[3] = a[3] * im;\n    return r;\n};\n\nvar _MJS_v4scale = F2(function(k, a) {\n    var r = new Float64Array(4);\n    r[0] = a[0] * k;\n    r[1] = a[1] * k;\n    r[2] = a[2] * k;\n    r[3] = a[3] * k;\n    return r;\n});\n\nvar _MJS_v4dot = F2(function(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n});\n\n// Matrix4\n\nvar _MJS_m4x4temp1Local = new Float64Array(16);\nvar _MJS_m4x4temp2Local = new Float64Array(16);\n\nvar _MJS_m4x4identity = new Float64Array([\n    1.0, 0.0, 0.0, 0.0,\n    0.0, 1.0, 0.0, 0.0,\n    0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 1.0\n]);\n\nvar _MJS_m4x4fromRecord = function(r) {\n    var m = new Float64Array(16);\n    m[0] = r.dj;\n    m[1] = r.dn;\n    m[2] = r.dr;\n    m[3] = r.dv;\n    m[4] = r.dk;\n    m[5] = r.$7;\n    m[6] = r.ds;\n    m[7] = r.dw;\n    m[8] = r.dl;\n    m[9] = r.dp;\n    m[10] = r.dt;\n    m[11] = r.dx;\n    m[12] = r.dm;\n    m[13] = r.dq;\n    m[14] = r.du;\n    m[15] = r.dy;\n    return m;\n};\n\nvar _MJS_m4x4toRecord = function(m) {\n    return {\n        dj: m[0], dn: m[1], dr: m[2], dv: m[3],\n        dk: m[4], $7: m[5], ds: m[6], dw: m[7],\n        dl: m[8], dp: m[9], dt: m[10], dx: m[11],\n        dm: m[12], dq: m[13], du: m[14], dy: m[15]\n    };\n};\n\nvar _MJS_m4x4inverse = function(m) {\n    var r = new Float64Array(16);\n\n    r[0] = m[5] * m[10] * m[15] - m[5] * m[11] * m[14] - m[9] * m[6] * m[15] +\n        m[9] * m[7] * m[14] + m[13] * m[6] * m[11] - m[13] * m[7] * m[10];\n    r[4] = -m[4] * m[10] * m[15] + m[4] * m[11] * m[14] + m[8] * m[6] * m[15] -\n        m[8] * m[7] * m[14] - m[12] * m[6] * m[11] + m[12] * m[7] * m[10];\n    r[8] = m[4] * m[9] * m[15] - m[4] * m[11] * m[13] - m[8] * m[5] * m[15] +\n        m[8] * m[7] * m[13] + m[12] * m[5] * m[11] - m[12] * m[7] * m[9];\n    r[12] = -m[4] * m[9] * m[14] + m[4] * m[10] * m[13] + m[8] * m[5] * m[14] -\n        m[8] * m[6] * m[13] - m[12] * m[5] * m[10] + m[12] * m[6] * m[9];\n    r[1] = -m[1] * m[10] * m[15] + m[1] * m[11] * m[14] + m[9] * m[2] * m[15] -\n        m[9] * m[3] * m[14] - m[13] * m[2] * m[11] + m[13] * m[3] * m[10];\n    r[5] = m[0] * m[10] * m[15] - m[0] * m[11] * m[14] - m[8] * m[2] * m[15] +\n        m[8] * m[3] * m[14] + m[12] * m[2] * m[11] - m[12] * m[3] * m[10];\n    r[9] = -m[0] * m[9] * m[15] + m[0] * m[11] * m[13] + m[8] * m[1] * m[15] -\n        m[8] * m[3] * m[13] - m[12] * m[1] * m[11] + m[12] * m[3] * m[9];\n    r[13] = m[0] * m[9] * m[14] - m[0] * m[10] * m[13] - m[8] * m[1] * m[14] +\n        m[8] * m[2] * m[13] + m[12] * m[1] * m[10] - m[12] * m[2] * m[9];\n    r[2] = m[1] * m[6] * m[15] - m[1] * m[7] * m[14] - m[5] * m[2] * m[15] +\n        m[5] * m[3] * m[14] + m[13] * m[2] * m[7] - m[13] * m[3] * m[6];\n    r[6] = -m[0] * m[6] * m[15] + m[0] * m[7] * m[14] + m[4] * m[2] * m[15] -\n        m[4] * m[3] * m[14] - m[12] * m[2] * m[7] + m[12] * m[3] * m[6];\n    r[10] = m[0] * m[5] * m[15] - m[0] * m[7] * m[13] - m[4] * m[1] * m[15] +\n        m[4] * m[3] * m[13] + m[12] * m[1] * m[7] - m[12] * m[3] * m[5];\n    r[14] = -m[0] * m[5] * m[14] + m[0] * m[6] * m[13] + m[4] * m[1] * m[14] -\n        m[4] * m[2] * m[13] - m[12] * m[1] * m[6] + m[12] * m[2] * m[5];\n    r[3] = -m[1] * m[6] * m[11] + m[1] * m[7] * m[10] + m[5] * m[2] * m[11] -\n        m[5] * m[3] * m[10] - m[9] * m[2] * m[7] + m[9] * m[3] * m[6];\n    r[7] = m[0] * m[6] * m[11] - m[0] * m[7] * m[10] - m[4] * m[2] * m[11] +\n        m[4] * m[3] * m[10] + m[8] * m[2] * m[7] - m[8] * m[3] * m[6];\n    r[11] = -m[0] * m[5] * m[11] + m[0] * m[7] * m[9] + m[4] * m[1] * m[11] -\n        m[4] * m[3] * m[9] - m[8] * m[1] * m[7] + m[8] * m[3] * m[5];\n    r[15] = m[0] * m[5] * m[10] - m[0] * m[6] * m[9] - m[4] * m[1] * m[10] +\n        m[4] * m[2] * m[9] + m[8] * m[1] * m[6] - m[8] * m[2] * m[5];\n\n    var det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12];\n\n    if (det === 0) {\n        return $elm$core$Maybe$Nothing;\n    }\n\n    det = 1.0 / det;\n\n    for (var i = 0; i < 16; i = i + 1) {\n        r[i] = r[i] * det;\n    }\n\n    return $elm$core$Maybe$Just(r);\n};\n\nvar _MJS_m4x4inverseOrthonormal = function(m) {\n    var r = _MJS_m4x4transposeLocal(m);\n    var t = [m[12], m[13], m[14]];\n    r[3] = r[7] = r[11] = 0;\n    r[12] = -_MJS_v3dotLocal([r[0], r[4], r[8]], t);\n    r[13] = -_MJS_v3dotLocal([r[1], r[5], r[9]], t);\n    r[14] = -_MJS_v3dotLocal([r[2], r[6], r[10]], t);\n    return r;\n};\n\nfunction _MJS_m4x4makeFrustumLocal(left, right, bottom, top, znear, zfar) {\n    var r = new Float64Array(16);\n\n    r[0] = 2 * znear / (right - left);\n    r[1] = 0;\n    r[2] = 0;\n    r[3] = 0;\n    r[4] = 0;\n    r[5] = 2 * znear / (top - bottom);\n    r[6] = 0;\n    r[7] = 0;\n    r[8] = (right + left) / (right - left);\n    r[9] = (top + bottom) / (top - bottom);\n    r[10] = -(zfar + znear) / (zfar - znear);\n    r[11] = -1;\n    r[12] = 0;\n    r[13] = 0;\n    r[14] = -2 * zfar * znear / (zfar - znear);\n    r[15] = 0;\n\n    return r;\n}\nvar _MJS_m4x4makeFrustum = F6(_MJS_m4x4makeFrustumLocal);\n\nvar _MJS_m4x4makePerspective = F4(function(fovy, aspect, znear, zfar) {\n    var ymax = znear * Math.tan(fovy * Math.PI / 360.0);\n    var ymin = -ymax;\n    var xmin = ymin * aspect;\n    var xmax = ymax * aspect;\n\n    return _MJS_m4x4makeFrustumLocal(xmin, xmax, ymin, ymax, znear, zfar);\n});\n\nfunction _MJS_m4x4makeOrthoLocal(left, right, bottom, top, znear, zfar) {\n    var r = new Float64Array(16);\n\n    r[0] = 2 / (right - left);\n    r[1] = 0;\n    r[2] = 0;\n    r[3] = 0;\n    r[4] = 0;\n    r[5] = 2 / (top - bottom);\n    r[6] = 0;\n    r[7] = 0;\n    r[8] = 0;\n    r[9] = 0;\n    r[10] = -2 / (zfar - znear);\n    r[11] = 0;\n    r[12] = -(right + left) / (right - left);\n    r[13] = -(top + bottom) / (top - bottom);\n    r[14] = -(zfar + znear) / (zfar - znear);\n    r[15] = 1;\n\n    return r;\n}\nvar _MJS_m4x4makeOrtho = F6(_MJS_m4x4makeOrthoLocal);\n\nvar _MJS_m4x4makeOrtho2D = F4(function(left, right, bottom, top) {\n    return _MJS_m4x4makeOrthoLocal(left, right, bottom, top, -1, 1);\n});\n\nfunction _MJS_m4x4mulLocal(a, b) {\n    var r = new Float64Array(16);\n    var a11 = a[0];\n    var a21 = a[1];\n    var a31 = a[2];\n    var a41 = a[3];\n    var a12 = a[4];\n    var a22 = a[5];\n    var a32 = a[6];\n    var a42 = a[7];\n    var a13 = a[8];\n    var a23 = a[9];\n    var a33 = a[10];\n    var a43 = a[11];\n    var a14 = a[12];\n    var a24 = a[13];\n    var a34 = a[14];\n    var a44 = a[15];\n    var b11 = b[0];\n    var b21 = b[1];\n    var b31 = b[2];\n    var b41 = b[3];\n    var b12 = b[4];\n    var b22 = b[5];\n    var b32 = b[6];\n    var b42 = b[7];\n    var b13 = b[8];\n    var b23 = b[9];\n    var b33 = b[10];\n    var b43 = b[11];\n    var b14 = b[12];\n    var b24 = b[13];\n    var b34 = b[14];\n    var b44 = b[15];\n\n    r[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    r[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    r[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    r[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    r[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    r[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    r[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    r[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    r[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    r[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    r[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    r[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    r[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n    return r;\n}\nvar _MJS_m4x4mul = F2(_MJS_m4x4mulLocal);\n\nvar _MJS_m4x4mulAffine = F2(function(a, b) {\n    var r = new Float64Array(16);\n    var a11 = a[0];\n    var a21 = a[1];\n    var a31 = a[2];\n    var a12 = a[4];\n    var a22 = a[5];\n    var a32 = a[6];\n    var a13 = a[8];\n    var a23 = a[9];\n    var a33 = a[10];\n    var a14 = a[12];\n    var a24 = a[13];\n    var a34 = a[14];\n\n    var b11 = b[0];\n    var b21 = b[1];\n    var b31 = b[2];\n    var b12 = b[4];\n    var b22 = b[5];\n    var b32 = b[6];\n    var b13 = b[8];\n    var b23 = b[9];\n    var b33 = b[10];\n    var b14 = b[12];\n    var b24 = b[13];\n    var b34 = b[14];\n\n    r[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    r[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    r[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    r[3] = 0;\n    r[4] = a11 * b12 + a12 * b22 + a13 * b32;\n    r[5] = a21 * b12 + a22 * b22 + a23 * b32;\n    r[6] = a31 * b12 + a32 * b22 + a33 * b32;\n    r[7] = 0;\n    r[8] = a11 * b13 + a12 * b23 + a13 * b33;\n    r[9] = a21 * b13 + a22 * b23 + a23 * b33;\n    r[10] = a31 * b13 + a32 * b23 + a33 * b33;\n    r[11] = 0;\n    r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14;\n    r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24;\n    r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34;\n    r[15] = 1;\n\n    return r;\n});\n\nvar _MJS_m4x4makeRotate = F2(function(angle, axis) {\n    var r = new Float64Array(16);\n    axis = _MJS_v3normalizeLocal(axis, _MJS_v3temp1Local);\n    var x = axis[0];\n    var y = axis[1];\n    var z = axis[2];\n    var c = Math.cos(angle);\n    var c1 = 1 - c;\n    var s = Math.sin(angle);\n\n    r[0] = x * x * c1 + c;\n    r[1] = y * x * c1 + z * s;\n    r[2] = z * x * c1 - y * s;\n    r[3] = 0;\n    r[4] = x * y * c1 - z * s;\n    r[5] = y * y * c1 + c;\n    r[6] = y * z * c1 + x * s;\n    r[7] = 0;\n    r[8] = x * z * c1 + y * s;\n    r[9] = y * z * c1 - x * s;\n    r[10] = z * z * c1 + c;\n    r[11] = 0;\n    r[12] = 0;\n    r[13] = 0;\n    r[14] = 0;\n    r[15] = 1;\n\n    return r;\n});\n\nvar _MJS_m4x4rotate = F3(function(angle, axis, m) {\n    var r = new Float64Array(16);\n    var im = 1.0 / _MJS_v3lengthLocal(axis);\n    var x = axis[0] * im;\n    var y = axis[1] * im;\n    var z = axis[2] * im;\n    var c = Math.cos(angle);\n    var c1 = 1 - c;\n    var s = Math.sin(angle);\n    var xs = x * s;\n    var ys = y * s;\n    var zs = z * s;\n    var xyc1 = x * y * c1;\n    var xzc1 = x * z * c1;\n    var yzc1 = y * z * c1;\n    var t11 = x * x * c1 + c;\n    var t21 = xyc1 + zs;\n    var t31 = xzc1 - ys;\n    var t12 = xyc1 - zs;\n    var t22 = y * y * c1 + c;\n    var t32 = yzc1 + xs;\n    var t13 = xzc1 + ys;\n    var t23 = yzc1 - xs;\n    var t33 = z * z * c1 + c;\n    var m11 = m[0], m21 = m[1], m31 = m[2], m41 = m[3];\n    var m12 = m[4], m22 = m[5], m32 = m[6], m42 = m[7];\n    var m13 = m[8], m23 = m[9], m33 = m[10], m43 = m[11];\n    var m14 = m[12], m24 = m[13], m34 = m[14], m44 = m[15];\n\n    r[0] = m11 * t11 + m12 * t21 + m13 * t31;\n    r[1] = m21 * t11 + m22 * t21 + m23 * t31;\n    r[2] = m31 * t11 + m32 * t21 + m33 * t31;\n    r[3] = m41 * t11 + m42 * t21 + m43 * t31;\n    r[4] = m11 * t12 + m12 * t22 + m13 * t32;\n    r[5] = m21 * t12 + m22 * t22 + m23 * t32;\n    r[6] = m31 * t12 + m32 * t22 + m33 * t32;\n    r[7] = m41 * t12 + m42 * t22 + m43 * t32;\n    r[8] = m11 * t13 + m12 * t23 + m13 * t33;\n    r[9] = m21 * t13 + m22 * t23 + m23 * t33;\n    r[10] = m31 * t13 + m32 * t23 + m33 * t33;\n    r[11] = m41 * t13 + m42 * t23 + m43 * t33;\n    r[12] = m14,\n    r[13] = m24;\n    r[14] = m34;\n    r[15] = m44;\n\n    return r;\n});\n\nfunction _MJS_m4x4makeScale3Local(x, y, z) {\n    var r = new Float64Array(16);\n\n    r[0] = x;\n    r[1] = 0;\n    r[2] = 0;\n    r[3] = 0;\n    r[4] = 0;\n    r[5] = y;\n    r[6] = 0;\n    r[7] = 0;\n    r[8] = 0;\n    r[9] = 0;\n    r[10] = z;\n    r[11] = 0;\n    r[12] = 0;\n    r[13] = 0;\n    r[14] = 0;\n    r[15] = 1;\n\n    return r;\n}\nvar _MJS_m4x4makeScale3 = F3(_MJS_m4x4makeScale3Local);\n\nvar _MJS_m4x4makeScale = function(v) {\n    return _MJS_m4x4makeScale3Local(v[0], v[1], v[2]);\n};\n\nvar _MJS_m4x4scale3 = F4(function(x, y, z, m) {\n    var r = new Float64Array(16);\n\n    r[0] = m[0] * x;\n    r[1] = m[1] * x;\n    r[2] = m[2] * x;\n    r[3] = m[3] * x;\n    r[4] = m[4] * y;\n    r[5] = m[5] * y;\n    r[6] = m[6] * y;\n    r[7] = m[7] * y;\n    r[8] = m[8] * z;\n    r[9] = m[9] * z;\n    r[10] = m[10] * z;\n    r[11] = m[11] * z;\n    r[12] = m[12];\n    r[13] = m[13];\n    r[14] = m[14];\n    r[15] = m[15];\n\n    return r;\n});\n\nvar _MJS_m4x4scale = F2(function(v, m) {\n    var r = new Float64Array(16);\n    var x = v[0];\n    var y = v[1];\n    var z = v[2];\n\n    r[0] = m[0] * x;\n    r[1] = m[1] * x;\n    r[2] = m[2] * x;\n    r[3] = m[3] * x;\n    r[4] = m[4] * y;\n    r[5] = m[5] * y;\n    r[6] = m[6] * y;\n    r[7] = m[7] * y;\n    r[8] = m[8] * z;\n    r[9] = m[9] * z;\n    r[10] = m[10] * z;\n    r[11] = m[11] * z;\n    r[12] = m[12];\n    r[13] = m[13];\n    r[14] = m[14];\n    r[15] = m[15];\n\n    return r;\n});\n\nfunction _MJS_m4x4makeTranslate3Local(x, y, z) {\n    var r = new Float64Array(16);\n\n    r[0] = 1;\n    r[1] = 0;\n    r[2] = 0;\n    r[3] = 0;\n    r[4] = 0;\n    r[5] = 1;\n    r[6] = 0;\n    r[7] = 0;\n    r[8] = 0;\n    r[9] = 0;\n    r[10] = 1;\n    r[11] = 0;\n    r[12] = x;\n    r[13] = y;\n    r[14] = z;\n    r[15] = 1;\n\n    return r;\n}\nvar _MJS_m4x4makeTranslate3 = F3(_MJS_m4x4makeTranslate3Local);\n\nvar _MJS_m4x4makeTranslate = function(v) {\n    return _MJS_m4x4makeTranslate3Local(v[0], v[1], v[2]);\n};\n\nvar _MJS_m4x4translate3 = F4(function(x, y, z, m) {\n    var r = new Float64Array(16);\n    var m11 = m[0];\n    var m21 = m[1];\n    var m31 = m[2];\n    var m41 = m[3];\n    var m12 = m[4];\n    var m22 = m[5];\n    var m32 = m[6];\n    var m42 = m[7];\n    var m13 = m[8];\n    var m23 = m[9];\n    var m33 = m[10];\n    var m43 = m[11];\n\n    r[0] = m11;\n    r[1] = m21;\n    r[2] = m31;\n    r[3] = m41;\n    r[4] = m12;\n    r[5] = m22;\n    r[6] = m32;\n    r[7] = m42;\n    r[8] = m13;\n    r[9] = m23;\n    r[10] = m33;\n    r[11] = m43;\n    r[12] = m11 * x + m12 * y + m13 * z + m[12];\n    r[13] = m21 * x + m22 * y + m23 * z + m[13];\n    r[14] = m31 * x + m32 * y + m33 * z + m[14];\n    r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n    return r;\n});\n\nvar _MJS_m4x4translate = F2(function(v, m) {\n    var r = new Float64Array(16);\n    var x = v[0];\n    var y = v[1];\n    var z = v[2];\n    var m11 = m[0];\n    var m21 = m[1];\n    var m31 = m[2];\n    var m41 = m[3];\n    var m12 = m[4];\n    var m22 = m[5];\n    var m32 = m[6];\n    var m42 = m[7];\n    var m13 = m[8];\n    var m23 = m[9];\n    var m33 = m[10];\n    var m43 = m[11];\n\n    r[0] = m11;\n    r[1] = m21;\n    r[2] = m31;\n    r[3] = m41;\n    r[4] = m12;\n    r[5] = m22;\n    r[6] = m32;\n    r[7] = m42;\n    r[8] = m13;\n    r[9] = m23;\n    r[10] = m33;\n    r[11] = m43;\n    r[12] = m11 * x + m12 * y + m13 * z + m[12];\n    r[13] = m21 * x + m22 * y + m23 * z + m[13];\n    r[14] = m31 * x + m32 * y + m33 * z + m[14];\n    r[15] = m41 * x + m42 * y + m43 * z + m[15];\n\n    return r;\n});\n\nvar _MJS_m4x4makeLookAt = F3(function(eye, center, up) {\n    var z = _MJS_v3directionLocal(eye, center, _MJS_v3temp1Local);\n    var x = _MJS_v3normalizeLocal(_MJS_v3crossLocal(up, z, _MJS_v3temp2Local), _MJS_v3temp2Local);\n    var y = _MJS_v3normalizeLocal(_MJS_v3crossLocal(z, x, _MJS_v3temp3Local), _MJS_v3temp3Local);\n    var tm1 = _MJS_m4x4temp1Local;\n    var tm2 = _MJS_m4x4temp2Local;\n\n    tm1[0] = x[0];\n    tm1[1] = y[0];\n    tm1[2] = z[0];\n    tm1[3] = 0;\n    tm1[4] = x[1];\n    tm1[5] = y[1];\n    tm1[6] = z[1];\n    tm1[7] = 0;\n    tm1[8] = x[2];\n    tm1[9] = y[2];\n    tm1[10] = z[2];\n    tm1[11] = 0;\n    tm1[12] = 0;\n    tm1[13] = 0;\n    tm1[14] = 0;\n    tm1[15] = 1;\n\n    tm2[0] = 1; tm2[1] = 0; tm2[2] = 0; tm2[3] = 0;\n    tm2[4] = 0; tm2[5] = 1; tm2[6] = 0; tm2[7] = 0;\n    tm2[8] = 0; tm2[9] = 0; tm2[10] = 1; tm2[11] = 0;\n    tm2[12] = -eye[0]; tm2[13] = -eye[1]; tm2[14] = -eye[2]; tm2[15] = 1;\n\n    return _MJS_m4x4mulLocal(tm1, tm2);\n});\n\n\nfunction _MJS_m4x4transposeLocal(m) {\n    var r = new Float64Array(16);\n\n    r[0] = m[0]; r[1] = m[4]; r[2] = m[8]; r[3] = m[12];\n    r[4] = m[1]; r[5] = m[5]; r[6] = m[9]; r[7] = m[13];\n    r[8] = m[2]; r[9] = m[6]; r[10] = m[10]; r[11] = m[14];\n    r[12] = m[3]; r[13] = m[7]; r[14] = m[11]; r[15] = m[15];\n\n    return r;\n}\nvar _MJS_m4x4transpose = _MJS_m4x4transposeLocal;\n\nvar _MJS_m4x4makeBasis = F3(function(vx, vy, vz) {\n    var r = new Float64Array(16);\n\n    r[0] = vx[0];\n    r[1] = vx[1];\n    r[2] = vx[2];\n    r[3] = 0;\n    r[4] = vy[0];\n    r[5] = vy[1];\n    r[6] = vy[2];\n    r[7] = 0;\n    r[8] = vz[0];\n    r[9] = vz[1];\n    r[10] = vz[2];\n    r[11] = 0;\n    r[12] = 0;\n    r[13] = 0;\n    r[14] = 0;\n    r[15] = 1;\n\n    return r;\n});\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\nvar _WebGL_guid = 0;\n\nfunction _WebGL_listEach(fn, list) {\n  for (; list.b; list = list.b) {\n    fn(list.a);\n  }\n}\n\nfunction _WebGL_listLength(list) {\n  var length = 0;\n  for (; list.b; list = list.b) {\n    length++;\n  }\n  return length;\n}\n\nvar _WebGL_rAF = typeof requestAnimationFrame !== 'undefined' ?\n  requestAnimationFrame :\n  function (cb) { setTimeout(cb, 1000 / 60); };\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_entity = F5(function (settings, vert, frag, mesh, uniforms) {\n  return {\n    $: 0,\n    a: settings,\n    b: vert,\n    c: frag,\n    d: mesh,\n    e: uniforms\n  };\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableBlend = F2(function (cache, setting) {\n  var blend = cache.blend;\n  blend.toggle = cache.toggle;\n\n  if (!blend.enabled) {\n    cache.gl.enable(cache.gl.BLEND);\n    blend.enabled = true;\n  }\n\n  // a   b   c   d   e   f   g h i j\n  // eq1 f11 f12 eq2 f21 f22 r g b a\n  if (blend.a !== setting.a || blend.d !== setting.d) {\n    cache.gl.blendEquationSeparate(setting.a, setting.d);\n    blend.a = setting.a;\n    blend.d = setting.d;\n  }\n  if (blend.b !== setting.b || blend.c !== setting.c || blend.e !== setting.e || blend.f !== setting.f) {\n    cache.gl.blendFuncSeparate(setting.b, setting.c, setting.e, setting.f);\n    blend.b = setting.b;\n    blend.c = setting.c;\n    blend.e = setting.e;\n    blend.f = setting.f;\n  }\n  if (blend.g !== setting.g || blend.h !== setting.h || blend.i !== setting.i || blend.j !== setting.j) {\n    cache.gl.blendColor(setting.g, setting.h, setting.i, setting.j);\n    blend.g = setting.g;\n    blend.h = setting.h;\n    blend.i = setting.i;\n    blend.j = setting.j;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableDepthTest = F2(function (cache, setting) {\n  var depthTest = cache.depthTest;\n  depthTest.toggle = cache.toggle;\n\n  if (!depthTest.enabled) {\n    cache.gl.enable(cache.gl.DEPTH_TEST);\n    depthTest.enabled = true;\n  }\n\n  // a    b    c    d\n  // func mask near far\n  if (depthTest.a !== setting.a) {\n    cache.gl.depthFunc(setting.a);\n    depthTest.a = setting.a;\n  }\n  if (depthTest.b !== setting.b) {\n    cache.gl.depthMask(setting.b);\n    depthTest.b = setting.b;\n  }\n  if (depthTest.c !== setting.c || depthTest.d !== setting.d) {\n    cache.gl.depthRange(setting.c, setting.d);\n    depthTest.c = setting.c;\n    depthTest.d = setting.d;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableStencilTest = F2(function (cache, setting) {\n  var stencilTest = cache.stencilTest;\n  stencilTest.toggle = cache.toggle;\n\n  if (!stencilTest.enabled) {\n    cache.gl.enable(cache.gl.STENCIL_TEST);\n    stencilTest.enabled = true;\n  }\n\n  // a   b    c         d     e     f      g      h     i     j      k\n  // ref mask writeMask test1 fail1 zfail1 zpass1 test2 fail2 zfail2 zpass2\n  if (stencilTest.d !== setting.d || stencilTest.a !== setting.a || stencilTest.b !== setting.b) {\n    cache.gl.stencilFuncSeparate(cache.gl.FRONT, setting.d, setting.a, setting.b);\n    stencilTest.d = setting.d;\n    // a and b are set in the cache.gl.BACK diffing because they should be the same\n  }\n  if (stencilTest.e !== setting.e || stencilTest.f !== setting.f || stencilTest.g !== setting.g) {\n    cache.gl.stencilOpSeparate(cache.gl.FRONT, setting.e, setting.f, setting.g);\n    stencilTest.e = setting.e;\n    stencilTest.f = setting.f;\n    stencilTest.g = setting.g;\n  }\n  if (stencilTest.c !== setting.c) {\n    cache.gl.stencilMask(setting.c);\n    stencilTest.c = setting.c;\n  }\n  if (stencilTest.h !== setting.h || stencilTest.a !== setting.a || stencilTest.b !== setting.b) {\n    cache.gl.stencilFuncSeparate(cache.gl.BACK, setting.h, setting.a, setting.b);\n    stencilTest.h = setting.h;\n    stencilTest.a = setting.a;\n    stencilTest.b = setting.b;\n  }\n  if (stencilTest.i !== setting.i || stencilTest.j !== setting.j || stencilTest.k !== setting.k) {\n    cache.gl.stencilOpSeparate(cache.gl.BACK, setting.i, setting.j, setting.k);\n    stencilTest.i = setting.i;\n    stencilTest.j = setting.j;\n    stencilTest.k = setting.k;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableScissor = F2(function (cache, setting) {\n  var scissor = cache.scissor;\n  scissor.toggle = cache.toggle;\n\n  if (!scissor.enabled) {\n    cache.gl.enable(cache.gl.SCISSOR_TEST);\n    scissor.enabled = true;\n  }\n\n  if (scissor.a !== setting.a || scissor.b !== setting.b || scissor.c !== setting.c || scissor.d !== setting.d) {\n    cache.gl.scissor(setting.a, setting.b, setting.c, setting.d);\n    scissor.a = setting.a;\n    scissor.b = setting.b;\n    scissor.c = setting.c;\n    scissor.d = setting.d;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableColorMask = F2(function (cache, setting) {\n  var colorMask = cache.colorMask;\n  colorMask.toggle = cache.toggle;\n  colorMask.enabled = true;\n\n  if (colorMask.a !== setting.a || colorMask.b !== setting.b || colorMask.c !== setting.c || colorMask.d !== setting.d) {\n    cache.gl.colorMask(setting.a, setting.b, setting.c, setting.d);\n    colorMask.a = setting.a;\n    colorMask.b = setting.b;\n    colorMask.c = setting.c;\n    colorMask.d = setting.d;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableCullFace = F2(function (cache, setting) {\n  var cullFace = cache.cullFace;\n  cullFace.toggle = cache.toggle;\n\n  if (!cullFace.enabled) {\n    cache.gl.enable(cache.gl.CULL_FACE);\n    cullFace.enabled = true;\n  }\n\n  if (cullFace.a !== setting.a) {\n    cache.gl.cullFace(setting.a);\n    cullFace.a = setting.a;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enablePolygonOffset = F2(function (cache, setting) {\n  var polygonOffset = cache.polygonOffset;\n  polygonOffset.toggle = cache.toggle;\n\n  if (!polygonOffset.enabled) {\n    cache.gl.enable(cache.gl.POLYGON_OFFSET_FILL);\n    polygonOffset.enabled = true;\n  }\n\n  if (polygonOffset.a !== setting.a || polygonOffset.b !== setting.b) {\n    cache.gl.polygonOffset(setting.a, setting.b);\n    polygonOffset.a = setting.a;\n    polygonOffset.b = setting.b;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableSampleCoverage = F2(function (cache, setting) {\n  var sampleCoverage = cache.sampleCoverage;\n  sampleCoverage.toggle = cache.toggle;\n\n  if (!sampleCoverage.enabled) {\n    cache.gl.enable(cache.gl.SAMPLE_COVERAGE);\n    sampleCoverage.enabled = true;\n  }\n\n  if (sampleCoverage.a !== setting.a || sampleCoverage.b !== setting.b) {\n    cache.gl.sampleCoverage(setting.a, setting.b);\n    sampleCoverage.a = setting.a;\n    sampleCoverage.b = setting.b;\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableSampleAlphaToCoverage = function (cache) {\n  var sampleAlphaToCoverage = cache.sampleAlphaToCoverage;\n  sampleAlphaToCoverage.toggle = cache.toggle;\n\n  if (!sampleAlphaToCoverage.enabled) {\n    cache.gl.enable(cache.gl.SAMPLE_ALPHA_TO_COVERAGE);\n    sampleAlphaToCoverage.enabled = true;\n  }\n};\n\nvar _WebGL_disableBlend = function (cache) {\n  if (cache.blend.enabled) {\n    cache.gl.disable(cache.gl.BLEND);\n    cache.blend.enabled = false;\n  }\n};\n\nvar _WebGL_disableDepthTest = function (cache) {\n  if (cache.depthTest.enabled) {\n    cache.gl.disable(cache.gl.DEPTH_TEST);\n    cache.depthTest.enabled = false;\n  }\n};\n\nvar _WebGL_disableStencilTest = function (cache) {\n  if (cache.stencilTest.enabled) {\n    cache.gl.disable(cache.gl.STENCIL_TEST);\n    cache.stencilTest.enabled = false;\n  }\n};\n\nvar _WebGL_disableScissor = function (cache) {\n  if (cache.scissor.enabled) {\n    cache.gl.disable(cache.gl.SCISSOR_TEST);\n    cache.scissor.enabled = false;\n  }\n};\n\nvar _WebGL_disableColorMask = function (cache) {\n  var colorMask = cache.colorMask;\n  if (!colorMask.a || !colorMask.b || !colorMask.c || !colorMask.d) {\n    cache.gl.colorMask(true, true, true, true);\n    colorMask.a = true;\n    colorMask.b = true;\n    colorMask.c = true;\n    colorMask.d = true;\n  }\n};\n\nvar _WebGL_disableCullFace = function (cache) {\n  cache.gl.disable(cache.gl.CULL_FACE);\n};\n\nvar _WebGL_disablePolygonOffset = function (cache) {\n  cache.gl.disable(cache.gl.POLYGON_OFFSET_FILL);\n};\n\nvar _WebGL_disableSampleCoverage = function (cache) {\n  cache.gl.disable(cache.gl.SAMPLE_COVERAGE);\n};\n\nvar _WebGL_disableSampleAlphaToCoverage = function (cache) {\n  cache.gl.disable(cache.gl.SAMPLE_ALPHA_TO_COVERAGE);\n};\n\nvar _WebGL_settings = ['blend', 'depthTest', 'stencilTest', 'scissor', 'colorMask', 'cullFace', 'polygonOffset', 'sampleCoverage', 'sampleAlphaToCoverage'];\nvar _WebGL_disableFunctions = [_WebGL_disableBlend, _WebGL_disableDepthTest, _WebGL_disableStencilTest, _WebGL_disableScissor, _WebGL_disableColorMask, _WebGL_disableCullFace, _WebGL_disablePolygonOffset, _WebGL_disableSampleCoverage, _WebGL_disableSampleAlphaToCoverage];\n\nfunction _WebGL_doCompile(gl, src, type) {\n  var shader = gl.createShader(type);\n  // Enable OES_standard_derivatives extension\n  gl.shaderSource(shader, '#extension GL_OES_standard_derivatives : enable\\n' + src);\n  gl.compileShader(shader);\n  return shader;\n}\n\nfunction _WebGL_doLink(gl, vshader, fshader) {\n  var program = gl.createProgram();\n\n  gl.attachShader(program, vshader);\n  gl.attachShader(program, fshader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw ('Link failed: ' + gl.getProgramInfoLog(program) +\n      '\\nvs info-log: ' + gl.getShaderInfoLog(vshader) +\n      '\\nfs info-log: ' + gl.getShaderInfoLog(fshader));\n  }\n\n  return program;\n}\n\nfunction _WebGL_getAttributeInfo(gl, type) {\n  switch (type) {\n    case gl.FLOAT:\n      return { size: 1, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };\n    case gl.FLOAT_VEC2:\n      return { size: 2, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };\n    case gl.FLOAT_VEC3:\n      return { size: 3, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };\n    case gl.FLOAT_VEC4:\n      return { size: 4, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };\n    case gl.FLOAT_MAT4:\n      return { size: 4, arraySize: 4, type: Float32Array, baseType: gl.FLOAT };\n    case gl.INT:\n      return { size: 1, arraySize: 1, type: Int32Array, baseType: gl.INT };\n  }\n}\n\n/**\n *  Form the buffer for a given attribute.\n *\n *  @param {WebGLRenderingContext} gl context\n *  @param {WebGLActiveInfo} attribute the attribute to bind to.\n *         We use its name to grab the record by name and also to know\n *         how many elements we need to grab.\n *  @param {Mesh} mesh The mesh coming in from Elm.\n *  @param {Object} attributes The mapping between the attribute names and Elm fields\n *  @return {WebGLBuffer}\n */\nfunction _WebGL_doBindAttribute(gl, attribute, mesh, attributes) {\n  // The length of the number of vertices that\n  // complete one 'thing' based on the drawing mode.\n  // ie, 2 for Lines, 3 for Triangles, etc.\n  var elemSize = mesh.a.c1;\n\n  var idxKeys = [];\n  for (var i = 0; i < elemSize; i++) {\n    idxKeys.push(String.fromCharCode(97 + i));\n  }\n\n  function dataFill(data, cnt, fillOffset, elem, key) {\n    var i;\n    if (elemSize === 1) {\n      for (i = 0; i < cnt; i++) {\n        data[fillOffset++] = cnt === 1 ? elem[key] : elem[key][i];\n      }\n    } else {\n      idxKeys.forEach(function (idx) {\n        for (i = 0; i < cnt; i++) {\n          data[fillOffset++] = cnt === 1 ? elem[idx][key] : elem[idx][key][i];\n        }\n      });\n    }\n  }\n\n  var attributeInfo = _WebGL_getAttributeInfo(gl, attribute.type);\n\n  if (attributeInfo === undefined) {\n    throw new Error('No info available for: ' + attribute.type);\n  }\n\n  var dataIdx = 0;\n  var dataOffset = attributeInfo.size * attributeInfo.arraySize * elemSize;\n  var array = new attributeInfo.type(_WebGL_listLength(mesh.b) * dataOffset);\n\n  _WebGL_listEach(function (elem) {\n    dataFill(array, attributeInfo.size * attributeInfo.arraySize, dataIdx, elem, attributes[attribute.name] || attribute.name);\n    dataIdx += dataOffset;\n  }, mesh.b);\n\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);\n  return buffer;\n}\n\n/**\n *  This sets up the binding caching buffers.\n *\n *  We don't actually bind any buffers now except for the indices buffer.\n *  The problem with filling the buffers here is that it is possible to\n *  have a buffer shared between two webgl shaders;\n *  which could have different active attributes. If we bind it here against\n *  a particular program, we might not bind them all. That final bind is now\n *  done right before drawing.\n *\n *  @param {WebGLRenderingContext} gl context\n *  @param {Mesh} mesh a mesh object from Elm\n *  @return {Object} buffer - an object with the following properties\n *  @return {Number} buffer.numIndices\n *  @return {WebGLBuffer|null} buffer.indexBuffer - optional index buffer\n *  @return {Object} buffer.buffers - will be used to buffer attributes\n */\nfunction _WebGL_doBindSetup(gl, mesh) {\n  if (mesh.a.c9 > 0) {\n    var indexBuffer = gl.createBuffer();\n    var indices = _WebGL_makeIndexedBuffer(mesh.c, mesh.a.c9);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n    return {\n      numIndices: indices.length,\n      indexBuffer: indexBuffer,\n      buffers: {}\n    };\n  } else {\n    return {\n      numIndices: mesh.a.c1 * _WebGL_listLength(mesh.b),\n      indexBuffer: null,\n      buffers: {}\n    };\n  }\n}\n\n/**\n *  Create an indices array and fill it from indices\n *  based on the size of the index\n *\n *  @param {List} indicesList the list of indices\n *  @param {Number} indexSize the size of the index\n *  @return {Uint32Array} indices\n */\nfunction _WebGL_makeIndexedBuffer(indicesList, indexSize) {\n  var indices = new Uint32Array(_WebGL_listLength(indicesList) * indexSize);\n  var fillOffset = 0;\n  var i;\n  _WebGL_listEach(function (elem) {\n    if (indexSize === 1) {\n      indices[fillOffset++] = elem;\n    } else {\n      for (i = 0; i < indexSize; i++) {\n        indices[fillOffset++] = elem[String.fromCharCode(97 + i)];\n      }\n    }\n  }, indicesList);\n  return indices;\n}\n\nfunction _WebGL_getProgID(vertID, fragID) {\n  return vertID + '#' + fragID;\n}\n\nvar _WebGL_drawGL = F2(function (model, domNode) {\n  var cache = model.f;\n  var gl = cache.gl;\n\n  if (!gl) {\n    return domNode;\n  }\n\n  gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n  if (!cache.depthTest.b) {\n    gl.depthMask(true);\n    cache.depthTest.b = true;\n  }\n  if (cache.stencilTest.c !== cache.STENCIL_WRITEMASK) {\n    gl.stencilMask(cache.STENCIL_WRITEMASK);\n    cache.stencilTest.c = cache.STENCIL_WRITEMASK;\n  }\n  _WebGL_disableScissor(cache);\n  _WebGL_disableColorMask(cache);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\n  function drawEntity(entity) {\n    if (!entity.d.b.b) {\n      return; // Empty list\n    }\n\n    var progid;\n    var program;\n    var i;\n\n    if (entity.b.id && entity.c.id) {\n      progid = _WebGL_getProgID(entity.b.id, entity.c.id);\n      program = cache.programs[progid];\n    }\n\n    if (!program) {\n\n      var vshader;\n      if (entity.b.id) {\n        vshader = cache.shaders[entity.b.id];\n      } else {\n        entity.b.id = _WebGL_guid++;\n      }\n\n      if (!vshader) {\n        vshader = _WebGL_doCompile(gl, entity.b.src, gl.VERTEX_SHADER);\n        cache.shaders[entity.b.id] = vshader;\n      }\n\n      var fshader;\n      if (entity.c.id) {\n        fshader = cache.shaders[entity.c.id];\n      } else {\n        entity.c.id = _WebGL_guid++;\n      }\n\n      if (!fshader) {\n        fshader = _WebGL_doCompile(gl, entity.c.src, gl.FRAGMENT_SHADER);\n        cache.shaders[entity.c.id] = fshader;\n      }\n\n      var glProgram = _WebGL_doLink(gl, vshader, fshader);\n\n      program = {\n        glProgram: glProgram,\n        attributes: Object.assign({}, entity.b.attributes, entity.c.attributes),\n        currentUniforms: {},\n        activeAttributes: [],\n        activeAttributeLocations: []\n      };\n\n      program.uniformSetters = _WebGL_createUniformSetters(\n        gl,\n        model,\n        program,\n        Object.assign({}, entity.b.uniforms, entity.c.uniforms)\n      );\n\n      var numActiveAttributes = gl.getProgramParameter(glProgram, gl.ACTIVE_ATTRIBUTES);\n      for (i = 0; i < numActiveAttributes; i++) {\n        var attribute = gl.getActiveAttrib(glProgram, i);\n        var attribLocation = gl.getAttribLocation(glProgram, attribute.name);\n        program.activeAttributes.push(attribute);\n        program.activeAttributeLocations.push(attribLocation);\n      }\n\n      progid = _WebGL_getProgID(entity.b.id, entity.c.id);\n      cache.programs[progid] = program;\n    }\n\n    if (cache.lastProgId !== progid) {\n      gl.useProgram(program.glProgram);\n      cache.lastProgId = progid;\n    }\n\n    _WebGL_setUniforms(program.uniformSetters, entity.e);\n\n    var buffer = cache.buffers.get(entity.d);\n\n    if (!buffer) {\n      buffer = _WebGL_doBindSetup(gl, entity.d);\n      cache.buffers.set(entity.d, buffer);\n    }\n\n    for (i = 0; i < program.activeAttributes.length; i++) {\n      attribute = program.activeAttributes[i];\n      attribLocation = program.activeAttributeLocations[i];\n\n      if (buffer.buffers[attribute.name] === undefined) {\n        buffer.buffers[attribute.name] = _WebGL_doBindAttribute(gl, attribute, entity.d, program.attributes);\n      }\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.buffers[attribute.name]);\n\n      var attributeInfo = _WebGL_getAttributeInfo(gl, attribute.type);\n      if (attributeInfo.arraySize === 1) {\n        gl.enableVertexAttribArray(attribLocation);\n        gl.vertexAttribPointer(attribLocation, attributeInfo.size, attributeInfo.baseType, false, 0, 0);\n      } else {\n        // Point to four vec4 in case of mat4\n        var offset = attributeInfo.size * 4; // float32 takes 4 bytes\n        var stride = offset * attributeInfo.arraySize;\n        for (var m = 0; m < attributeInfo.arraySize; m++) {\n          gl.enableVertexAttribArray(attribLocation + m);\n          gl.vertexAttribPointer(attribLocation + m, attributeInfo.size, attributeInfo.baseType, false, stride, offset * m);\n        }\n      }\n    }\n\n    // Apply all the new settings\n    cache.toggle = !cache.toggle;\n    _WebGL_listEach($elm_explorations$webgl$WebGL$Internal$enableSetting(cache), entity.a);\n    // Disable the settings that were applied in the previous draw call\n    for (i = 0; i < _WebGL_settings.length; i++) {\n      var setting = cache[_WebGL_settings[i]];\n      if (setting.toggle !== cache.toggle && setting.enabled) {\n        _WebGL_disableFunctions[i](cache);\n        setting.enabled = false;\n        setting.toggle = cache.toggle;\n      }\n    }\n\n    if (buffer.indexBuffer) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indexBuffer);\n      gl.drawElements(entity.d.a.dH, buffer.numIndices, gl.UNSIGNED_INT, 0);\n    } else {\n      gl.drawArrays(entity.d.a.dH, 0, buffer.numIndices);\n    }\n  }\n\n  _WebGL_listEach(drawEntity, model.g);\n  return domNode;\n});\n\nfunction _WebGL_createUniformSetters(gl, model, program, uniformsMap) {\n  var glProgram = program.glProgram;\n  var currentUniforms = program.currentUniforms;\n  var textureCounter = 0;\n  var cache = model.f;\n  function createUniformSetter(glProgram, uniform) {\n    var uniformName = uniform.name;\n    var uniformLocation = gl.getUniformLocation(glProgram, uniformName);\n    switch (uniform.type) {\n      case gl.INT:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform1i(uniformLocation, value);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.FLOAT:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform1f(uniformLocation, value);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.FLOAT_VEC2:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform2f(uniformLocation, value[0], value[1]);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.FLOAT_VEC3:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform3f(uniformLocation, value[0], value[1], value[2]);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.FLOAT_VEC4:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform4f(uniformLocation, value[0], value[1], value[2], value[3]);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.FLOAT_MAT4:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniformMatrix4fv(uniformLocation, false, new Float32Array(value));\n            currentUniforms[uniformName] = value;\n          }\n        };\n      case gl.SAMPLER_2D:\n        var currentTexture = textureCounter++;\n        return function (texture) {\n          gl.activeTexture(gl.TEXTURE0 + currentTexture);\n          var tex = cache.textures.get(texture);\n          if (!tex) {\n            tex = texture.el(gl);\n            cache.textures.set(texture, tex);\n          }\n          gl.bindTexture(gl.TEXTURE_2D, tex);\n          if (currentUniforms[uniformName] !== texture) {\n            gl.uniform1i(uniformLocation, currentTexture);\n            currentUniforms[uniformName] = texture;\n          }\n        };\n      case gl.BOOL:\n        return function (value) {\n          if (currentUniforms[uniformName] !== value) {\n            gl.uniform1i(uniformLocation, value);\n            currentUniforms[uniformName] = value;\n          }\n        };\n      default:\n        return function () { };\n    }\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(glProgram, gl.ACTIVE_UNIFORMS);\n  for (var i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(glProgram, i);\n    uniformSetters[uniformsMap[uniform.name] || uniform.name] = createUniformSetter(glProgram, uniform);\n  }\n\n  return uniformSetters;\n}\n\nfunction _WebGL_setUniforms(setters, values) {\n  Object.keys(values).forEach(function (name) {\n    var setter = setters[name];\n    if (setter) {\n      setter(values[name]);\n    }\n  });\n}\n\n// VIRTUAL-DOM WIDGET\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_toHtml = F3(function (options, factList, entities) {\n  return _VirtualDom_custom(\n    factList,\n    {\n      g: entities,\n      f: {},\n      h: options\n    },\n    _WebGL_render,\n    _WebGL_diff\n  );\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableAlpha = F2(function (options, option) {\n  options.contextAttributes.alpha = true;\n  options.contextAttributes.premultipliedAlpha = option.a;\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableDepth = F2(function (options, option) {\n  options.contextAttributes.depth = true;\n  options.sceneSettings.push(function (gl) {\n    gl.clearDepth(option.a);\n  });\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableStencil = F2(function (options, option) {\n  options.contextAttributes.stencil = true;\n  options.sceneSettings.push(function (gl) {\n    gl.clearStencil(option.a);\n  });\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableAntialias = F2(function (options, option) {\n  options.contextAttributes.antialias = true;\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enableClearColor = F2(function (options, option) {\n  options.sceneSettings.push(function (gl) {\n    gl.clearColor(option.a, option.b, option.c, option.d);\n  });\n});\n\n// eslint-disable-next-line no-unused-vars\nvar _WebGL_enablePreserveDrawingBuffer = F2(function (options, option) {\n  options.contextAttributes.preserveDrawingBuffer = true;\n});\n\n/**\n *  Creates canvas and schedules initial _WebGL_drawGL\n *  @param {Object} model\n *  @param {Object} model.f that may contain the following properties:\n           gl, shaders, programs, buffers, textures\n *  @param {List<Option>} model.h list of options coming from Elm\n *  @param {List<Entity>} model.g list of entities coming from Elm\n *  @return {HTMLElement} <canvas> if WebGL is supported, otherwise a <div>\n */\nfunction _WebGL_render(model) {\n  var options = {\n    contextAttributes: {\n      alpha: false,\n      depth: false,\n      stencil: false,\n      antialias: false,\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: false\n    },\n    sceneSettings: []\n  };\n\n  _WebGL_listEach(function (option) {\n    return A2($elm_explorations$webgl$WebGL$Internal$enableOption, options, option);\n  }, model.h);\n\n  var canvas = _VirtualDom_doc.createElement('canvas');\n  var gl = canvas.getContext && (\n    canvas.getContext('webgl', options.contextAttributes) ||\n    canvas.getContext('experimental-webgl', options.contextAttributes)\n  );\n\n  if (gl && typeof WeakMap !== 'undefined') {\n    options.sceneSettings.forEach(function (sceneSetting) {\n      sceneSetting(gl);\n    });\n\n    // Activate extensions\n    gl.getExtension('OES_standard_derivatives');\n    gl.getExtension('OES_element_index_uint');\n\n    model.f.gl = gl;\n\n    // Cache the current settings in order to diff them to avoid redundant calls\n    // https://emscripten.org/docs/optimizing/Optimizing-WebGL.html#avoid-redundant-calls\n    model.f.toggle = false; // used to diff the settings from the previous and current draw calls\n    model.f.blend = { enabled: false, toggle: false };\n    model.f.depthTest = { enabled: false, toggle: false };\n    model.f.stencilTest = { enabled: false, toggle: false };\n    model.f.scissor = { enabled: false, toggle: false };\n    model.f.colorMask = { enabled: false, toggle: false };\n    model.f.cullFace = { enabled: false, toggle: false };\n    model.f.polygonOffset = { enabled: false, toggle: false };\n    model.f.sampleCoverage = { enabled: false, toggle: false };\n    model.f.sampleAlphaToCoverage = { enabled: false, toggle: false };\n\n    model.f.shaders = [];\n    model.f.programs = {};\n    model.f.lastProgId = null;\n    model.f.buffers = new WeakMap();\n    model.f.textures = new WeakMap();\n    // Memorize the initial stencil write mask, because\n    // browsers may have different number of stencil bits\n    model.f.STENCIL_WRITEMASK = gl.getParameter(gl.STENCIL_WRITEMASK);\n\n    // Render for the first time.\n    // This has to be done in animation frame,\n    // because the canvas is not in the DOM yet\n    _WebGL_rAF(function () {\n      return A2(_WebGL_drawGL, model, canvas);\n    });\n\n  } else {\n    canvas = _VirtualDom_doc.createElement('div');\n    canvas.innerHTML = '<a href=\"https://get.webgl.org/\">Enable WebGL</a> to see this content!';\n  }\n\n  return canvas;\n}\n\nfunction _WebGL_diff(oldModel, newModel) {\n  newModel.f = oldModel.f;\n  return _WebGL_drawGL(newModel);\n}\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $author$project$Main$Resize = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $author$project$Main$Tick = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.m) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.q),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.q);\n\t\t} else {\n\t\t\tvar treeLen = builder.m * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.A) : builder.A;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.m);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.q) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.q);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{A: nodeList, m: (len / $elm$core$Array$branchFactor) | 0, q: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {c5: fragment, c7: host, dL: path, dO: port_, dR: protocol, dS: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $elm$browser$Browser$Dom$getViewport = _Browser_withWindow(_Browser_getViewport);\nvar $elm$core$Basics$round = _Basics_round;\nvar $author$project$Main$init = _Utils_Tuple2(\n\t{bk: 500, bl: 500, bs: 0},\n\tA2(\n\t\t$elm$core$Task$perform,\n\t\tfunction (_v0) {\n\t\t\tvar viewport = _v0.e8;\n\t\t\treturn A2(\n\t\t\t\t$author$project$Main$Resize,\n\t\t\t\t$elm$core$Basics$round(viewport.fa),\n\t\t\t\t$elm$core$Basics$round(viewport.eE));\n\t\t},\n\t\t$elm$browser$Browser$Dom$getViewport));\nvar $elm$browser$Browser$AnimationManager$Delta = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$AnimationManager$State = F3(\n\tfunction (subs, request, oldTime) {\n\t\treturn {cv: oldTime, dU: request, d_: subs};\n\t});\nvar $elm$browser$Browser$AnimationManager$init = $elm$core$Task$succeed(\n\tA3($elm$browser$Browser$AnimationManager$State, _List_Nil, $elm$core$Maybe$Nothing, 0));\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$browser$Browser$AnimationManager$now = _Browser_now(0);\nvar $elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(0);\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$browser$Browser$AnimationManager$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar request = _v0.dU;\n\t\tvar oldTime = _v0.cv;\n\t\tvar _v1 = _Utils_Tuple2(request, subs);\n\t\tif (_v1.a.$ === 1) {\n\t\t\tif (!_v1.b.b) {\n\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\treturn $elm$browser$Browser$AnimationManager$init;\n\t\t\t} else {\n\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t$elm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$elm$browser$Browser$AnimationManager$now);\n\t\t\t\t\t},\n\t\t\t\t\t$elm$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\t\t$elm$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\t$elm$browser$Browser$AnimationManager$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_v1.b.b) {\n\t\t\t\tvar pid = _v1.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (_v3) {\n\t\t\t\t\t\treturn $elm$browser$Browser$AnimationManager$init;\n\t\t\t\t\t},\n\t\t\t\t\t$elm$core$Process$kill(pid));\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA3($elm$browser$Browser$AnimationManager$State, subs, request, oldTime));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$time$Time$Posix = $elm$core$Basics$identity;\nvar $elm$time$Time$millisToPosix = $elm$core$Basics$identity;\nvar $elm$browser$Browser$AnimationManager$onSelfMsg = F3(\n\tfunction (router, newTime, _v0) {\n\t\tvar subs = _v0.d_;\n\t\tvar oldTime = _v0.cv;\n\t\tvar send = function (sub) {\n\t\t\tif (!sub.$) {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(\n\t\t\t\t\t\t$elm$time$Time$millisToPosix(newTime)));\n\t\t\t} else {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(newTime - oldTime));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (_v1) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t$elm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\t\tA2($elm$core$List$map, send, subs)));\n\t\t\t},\n\t\t\t$elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t$elm$core$Platform$sendToSelf(router),\n\t\t\t\t\t$elm$browser$Browser$AnimationManager$rAF)));\n\t});\nvar $elm$browser$Browser$AnimationManager$Time = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$browser$Browser$AnimationManager$subMap = F2(\n\tfunction (func, sub) {\n\t\tif (!sub.$) {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn $elm$browser$Browser$AnimationManager$Time(\n\t\t\t\tA2($elm$core$Basics$composeL, func, tagger));\n\t\t} else {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn $elm$browser$Browser$AnimationManager$Delta(\n\t\t\t\tA2($elm$core$Basics$composeL, func, tagger));\n\t\t}\n\t});\n_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager($elm$browser$Browser$AnimationManager$init, $elm$browser$Browser$AnimationManager$onEffects, $elm$browser$Browser$AnimationManager$onSelfMsg, 0, $elm$browser$Browser$AnimationManager$subMap);\nvar $elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');\nvar $elm$browser$Browser$AnimationManager$onAnimationFrameDelta = function (tagger) {\n\treturn $elm$browser$Browser$AnimationManager$subscription(\n\t\t$elm$browser$Browser$AnimationManager$Delta(tagger));\n};\nvar $elm$browser$Browser$Events$onAnimationFrameDelta = $elm$browser$Browser$AnimationManager$onAnimationFrameDelta;\nvar $elm$browser$Browser$Events$Window = 1;\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$int = _Json_decodeInt;\nvar $elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {dM: pids, d_: subs};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$browser$Browser$Events$init = $elm$core$Task$succeed(\n\tA2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));\nvar $elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar $elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\t$elm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {c4: event, db: key};\n\t});\nvar $elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2($elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);\n\t});\nvar $elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _v6) {\n\t\t\t\tvar deads = _v6.a;\n\t\t\t\tvar lives = _v6.b;\n\t\t\t\tvar news = _v6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3($elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_v4, pid, _v5) {\n\t\t\t\tvar deads = _v5.a;\n\t\t\t\tvar lives = _v5.b;\n\t\t\t\tvar news = _v5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _v2, _v3) {\n\t\t\t\tvar deads = _v3.a;\n\t\t\t\tvar lives = _v3.b;\n\t\t\t\tvar news = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);\n\t\tvar _v0 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.dM,\n\t\t\t$elm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _v0.a;\n\t\tvar livePids = _v0.b;\n\t\tvar makeNewPids = _v0.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\t$elm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Process$kill, deadPids))));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar key = _v0.db;\n\t\tvar event = _v0.c4;\n\t\tvar toMessage = function (_v2) {\n\t\t\tvar subKey = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar node = _v3.a;\n\t\t\tvar name = _v3.b;\n\t\t\tvar decoder = _v3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2($elm$core$List$filterMap, toMessage, state.d_);\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar $elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar decoder = _v0.c;\n\t\treturn A3(\n\t\t\t$elm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2($elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);\nvar $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar $elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn $elm$browser$Browser$Events$subscription(\n\t\t\tA3($elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar $elm$browser$Browser$Events$onResize = function (func) {\n\treturn A3(\n\t\t$elm$browser$Browser$Events$on,\n\t\t1,\n\t\t'resize',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'target',\n\t\t\tA3(\n\t\t\t\t$elm$json$Json$Decode$map2,\n\t\t\t\tfunc,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar x = msg.a;\n\t\t\t\tvar y = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{bk: x, bl: y}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar delta = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{bs: model.bs + delta}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $elm$random$Random$Generator = $elm$core$Basics$identity;\nvar $elm$random$Random$andThen = F2(\n\tfunction (callback, _v0) {\n\t\tvar genA = _v0;\n\t\treturn function (seed) {\n\t\t\tvar _v1 = genA(seed);\n\t\t\tvar result = _v1.a;\n\t\t\tvar newSeed = _v1.b;\n\t\t\tvar _v2 = callback(result);\n\t\t\tvar genB = _v2;\n\t\t\treturn genB(newSeed);\n\t\t};\n\t});\nvar $ianmackenzie$elm_geometry$Geometry$Types$Frame3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Frame3d$copy = function (_v0) {\n\tvar properties = _v0;\n\treturn properties;\n};\nvar $ianmackenzie$elm_geometry$Block3d$axes = function (_v0) {\n\tvar block = _v0;\n\treturn $ianmackenzie$elm_geometry$Frame3d$copy(block.ec);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$CullBackFaces = 1;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Facets = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 2, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Indexed = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 3, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormals = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 4, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormalsAndUvs = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 6, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithTangents = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 7, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithUvs = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 5, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Triangles = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 1, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$cullBackFaces = function (mesh) {\n\tswitch (mesh.$) {\n\t\tcase 0:\n\t\t\treturn mesh;\n\t\tcase 1:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar meshTriangles = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$Triangles, boundingBox, meshTriangles, webGLMesh, 1);\n\t\tcase 2:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar meshTriangles = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$Facets, boundingBox, meshTriangles, webGLMesh, 1);\n\t\tcase 3:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$Indexed, boundingBox, triangularMesh, webGLMesh, 1);\n\t\tcase 4:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormals, boundingBox, triangularMesh, webGLMesh, 1);\n\t\tcase 5:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithUvs, boundingBox, triangularMesh, webGLMesh, 1);\n\t\tcase 6:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithNormalsAndUvs, boundingBox, triangularMesh, webGLMesh, 1);\n\t\tcase 7:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\tvar webGLMesh = mesh.c;\n\t\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$MeshWithTangents, boundingBox, triangularMesh, webGLMesh, 1);\n\t\tcase 8:\n\t\t\treturn mesh;\n\t\tcase 9:\n\t\t\treturn mesh;\n\t\tdefault:\n\t\t\treturn mesh;\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyMesh = {$: 0};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$KeepBackFaces = 0;\nvar $ianmackenzie$elm_geometry$Geometry$Types$BoundingBox3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$BoundingBox3d$extrema = function (_v0) {\n\tvar boundingBoxExtrema = _v0;\n\treturn boundingBoxExtrema;\n};\nvar $ianmackenzie$elm_units$Quantity$Quantity = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_units$Quantity$max = F2(\n\tfunction (_v0, _v1) {\n\t\tvar x = _v0;\n\t\tvar y = _v1;\n\t\treturn A2($elm$core$Basics$max, x, y);\n\t});\nvar $elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar $ianmackenzie$elm_units$Quantity$min = F2(\n\tfunction (_v0, _v1) {\n\t\tvar x = _v0;\n\t\tvar y = _v1;\n\t\treturn A2($elm$core$Basics$min, x, y);\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$aggregateOfHelp = F8(\n\tfunction (currentMinX, currentMaxX, currentMinY, currentMaxY, currentMinZ, currentMaxZ, getBoundingBox, items) {\n\t\taggregateOfHelp:\n\t\twhile (true) {\n\t\t\tif (items.b) {\n\t\t\t\tvar next = items.a;\n\t\t\t\tvar rest = items.b;\n\t\t\t\tvar b = $ianmackenzie$elm_geometry$BoundingBox3d$extrema(\n\t\t\t\t\tgetBoundingBox(next));\n\t\t\t\tvar $temp$currentMinX = A2($ianmackenzie$elm_units$Quantity$min, b.dD, currentMinX),\n\t\t\t\t\t$temp$currentMaxX = A2($ianmackenzie$elm_units$Quantity$max, b.dA, currentMaxX),\n\t\t\t\t\t$temp$currentMinY = A2($ianmackenzie$elm_units$Quantity$min, b.dE, currentMinY),\n\t\t\t\t\t$temp$currentMaxY = A2($ianmackenzie$elm_units$Quantity$max, b.dB, currentMaxY),\n\t\t\t\t\t$temp$currentMinZ = A2($ianmackenzie$elm_units$Quantity$min, b.dF, currentMinZ),\n\t\t\t\t\t$temp$currentMaxZ = A2($ianmackenzie$elm_units$Quantity$max, b.dC, currentMaxZ),\n\t\t\t\t\t$temp$getBoundingBox = getBoundingBox,\n\t\t\t\t\t$temp$items = rest;\n\t\t\t\tcurrentMinX = $temp$currentMinX;\n\t\t\t\tcurrentMaxX = $temp$currentMaxX;\n\t\t\t\tcurrentMinY = $temp$currentMinY;\n\t\t\t\tcurrentMaxY = $temp$currentMaxY;\n\t\t\t\tcurrentMinZ = $temp$currentMinZ;\n\t\t\t\tcurrentMaxZ = $temp$currentMaxZ;\n\t\t\t\tgetBoundingBox = $temp$getBoundingBox;\n\t\t\t\titems = $temp$items;\n\t\t\t\tcontinue aggregateOfHelp;\n\t\t\t} else {\n\t\t\t\treturn {dA: currentMaxX, dB: currentMaxY, dC: currentMaxZ, dD: currentMinX, dE: currentMinY, dF: currentMinZ};\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$aggregateOf = F3(\n\tfunction (getBoundingBox, first, rest) {\n\t\tvar b1 = $ianmackenzie$elm_geometry$BoundingBox3d$extrema(\n\t\t\tgetBoundingBox(first));\n\t\treturn A8($ianmackenzie$elm_geometry$BoundingBox3d$aggregateOfHelp, b1.dD, b1.dA, b1.dE, b1.dB, b1.dF, b1.dC, getBoundingBox, rest);\n\t});\nvar $ianmackenzie$elm_units$Quantity$lessThanOrEqualTo = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn _Utils_cmp(x, y) < 1;\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$fromExtrema = function (given) {\n\treturn (A2($ianmackenzie$elm_units$Quantity$lessThanOrEqualTo, given.dA, given.dD) && (A2($ianmackenzie$elm_units$Quantity$lessThanOrEqualTo, given.dB, given.dE) && A2($ianmackenzie$elm_units$Quantity$lessThanOrEqualTo, given.dC, given.dF))) ? given : {\n\t\tdA: A2($ianmackenzie$elm_units$Quantity$max, given.dD, given.dA),\n\t\tdB: A2($ianmackenzie$elm_units$Quantity$max, given.dE, given.dB),\n\t\tdC: A2($ianmackenzie$elm_units$Quantity$max, given.dF, given.dC),\n\t\tdD: A2($ianmackenzie$elm_units$Quantity$min, given.dD, given.dA),\n\t\tdE: A2($ianmackenzie$elm_units$Quantity$min, given.dE, given.dB),\n\t\tdF: A2($ianmackenzie$elm_units$Quantity$min, given.dF, given.dC)\n\t};\n};\nvar $ianmackenzie$elm_geometry$Triangle3d$vertices = function (_v0) {\n\tvar triangleVertices = _v0;\n\treturn triangleVertices;\n};\nvar $ianmackenzie$elm_geometry$Point3d$xCoordinate = function (_v0) {\n\tvar p = _v0;\n\treturn p.d6;\n};\nvar $ianmackenzie$elm_geometry$Point3d$yCoordinate = function (_v0) {\n\tvar p = _v0;\n\treturn p.d7;\n};\nvar $ianmackenzie$elm_geometry$Point3d$zCoordinate = function (_v0) {\n\tvar p = _v0;\n\treturn p.b5;\n};\nvar $ianmackenzie$elm_geometry$Triangle3d$boundingBox = function (triangle) {\n\tvar _v0 = $ianmackenzie$elm_geometry$Triangle3d$vertices(triangle);\n\tvar p1 = _v0.a;\n\tvar p2 = _v0.b;\n\tvar p3 = _v0.c;\n\tvar x1 = $ianmackenzie$elm_geometry$Point3d$xCoordinate(p1);\n\tvar y1 = $ianmackenzie$elm_geometry$Point3d$yCoordinate(p1);\n\tvar z1 = $ianmackenzie$elm_geometry$Point3d$zCoordinate(p1);\n\tvar x2 = $ianmackenzie$elm_geometry$Point3d$xCoordinate(p2);\n\tvar y2 = $ianmackenzie$elm_geometry$Point3d$yCoordinate(p2);\n\tvar z2 = $ianmackenzie$elm_geometry$Point3d$zCoordinate(p2);\n\tvar x3 = $ianmackenzie$elm_geometry$Point3d$xCoordinate(p3);\n\tvar y3 = $ianmackenzie$elm_geometry$Point3d$yCoordinate(p3);\n\tvar z3 = $ianmackenzie$elm_geometry$Point3d$zCoordinate(p3);\n\treturn $ianmackenzie$elm_geometry$BoundingBox3d$fromExtrema(\n\t\t{\n\t\t\tdA: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$max,\n\t\t\t\tx1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$max, x2, x3)),\n\t\t\tdB: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$max,\n\t\t\t\ty1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$max, y2, y3)),\n\t\t\tdC: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$max,\n\t\t\t\tz1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$max, z2, z3)),\n\t\t\tdD: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$min,\n\t\t\t\tx1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$min, x2, x3)),\n\t\t\tdE: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$min,\n\t\t\t\ty1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$min, y2, y3)),\n\t\t\tdF: A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$min,\n\t\t\t\tz1,\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$min, z2, z3))\n\t\t});\n};\nvar $elm_explorations$linear_algebra$Math$Vector3$fromRecord = _MJS_v3fromRecord;\nvar $ianmackenzie$elm_geometry$Point3d$unwrap = function (_v0) {\n\tvar pointCoordinates = _v0;\n\treturn pointCoordinates;\n};\nvar $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3 = function (point) {\n\treturn $elm_explorations$linear_algebra$Math$Vector3$fromRecord(\n\t\t$ianmackenzie$elm_geometry$Point3d$unwrap(point));\n};\nvar $ianmackenzie$elm_geometry$Vector3d$unwrap = function (_v0) {\n\tvar givenComponents = _v0;\n\treturn givenComponents;\n};\nvar $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Vector3d$toVec3 = function (vector) {\n\treturn $elm_explorations$linear_algebra$Math$Vector3$fromRecord(\n\t\t$ianmackenzie$elm_geometry$Vector3d$unwrap(vector));\n};\nvar $ianmackenzie$elm_geometry$Geometry$Types$Vector3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Vector3d$cross = F2(\n\tfunction (_v0, _v1) {\n\t\tvar v2 = _v0;\n\t\tvar v1 = _v1;\n\t\treturn {d6: (v1.d7 * v2.b5) - (v1.b5 * v2.d7), d7: (v1.b5 * v2.d6) - (v1.d6 * v2.b5), b5: (v1.d6 * v2.d7) - (v1.d7 * v2.d6)};\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$from = F2(\n\tfunction (_v0, _v1) {\n\t\tvar p1 = _v0;\n\t\tvar p2 = _v1;\n\t\treturn {d6: p2.d6 - p1.d6, d7: p2.d7 - p1.d7, b5: p2.b5 - p1.b5};\n\t});\nvar $ianmackenzie$elm_units$Quantity$float = function (value) {\n\treturn value;\n};\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar $elm$core$Basics$sqrt = _Basics_sqrt;\nvar $ianmackenzie$elm_geometry$Vector3d$zero = {d6: 0, d7: 0, b5: 0};\nvar $ianmackenzie$elm_geometry$Vector3d$scaleTo = F2(\n\tfunction (_v0, _v1) {\n\t\tvar q = _v0;\n\t\tvar v = _v1;\n\t\tvar largestComponent = A2(\n\t\t\t$elm$core$Basics$max,\n\t\t\t$elm$core$Basics$abs(v.d6),\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t$elm$core$Basics$abs(v.d7),\n\t\t\t\t$elm$core$Basics$abs(v.b5)));\n\t\tif (!largestComponent) {\n\t\t\treturn $ianmackenzie$elm_geometry$Vector3d$zero;\n\t\t} else {\n\t\t\tvar scaledZ = v.b5 / largestComponent;\n\t\t\tvar scaledY = v.d7 / largestComponent;\n\t\t\tvar scaledX = v.d6 / largestComponent;\n\t\t\tvar scaledLength = $elm$core$Basics$sqrt(((scaledX * scaledX) + (scaledY * scaledY)) + (scaledZ * scaledZ));\n\t\t\treturn {d6: (q * scaledX) / scaledLength, d7: (q * scaledY) / scaledLength, b5: (q * scaledZ) / scaledLength};\n\t\t}\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$normalize = $ianmackenzie$elm_geometry$Vector3d$scaleTo(\n\t$ianmackenzie$elm_units$Quantity$float(1));\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$triangleNormal = F3(\n\tfunction (p1, p2, p3) {\n\t\tvar v2 = A2($ianmackenzie$elm_geometry$Vector3d$from, p2, p3);\n\t\tvar v1 = A2($ianmackenzie$elm_geometry$Vector3d$from, p1, p2);\n\t\treturn $ianmackenzie$elm_geometry$Vector3d$normalize(\n\t\t\tA2($ianmackenzie$elm_geometry$Vector3d$cross, v2, v1));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$facetAttributes = function (triangle) {\n\tvar _v0 = $ianmackenzie$elm_geometry$Triangle3d$vertices(triangle);\n\tvar p1 = _v0.a;\n\tvar p2 = _v0.b;\n\tvar p3 = _v0.c;\n\tvar normal = $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Vector3d$toVec3(\n\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Mesh$triangleNormal, p1, p2, p3));\n\treturn _Utils_Tuple3(\n\t\t{\n\t\t\tp: normal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p1)\n\t\t},\n\t\t{\n\t\t\tp: normal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p2)\n\t\t},\n\t\t{\n\t\t\tp: normal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p3)\n\t\t});\n};\nvar $elm_explorations$webgl$WebGL$Mesh3 = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar $elm_explorations$webgl$WebGL$triangles = $elm_explorations$webgl$WebGL$Mesh3(\n\t{c1: 3, c9: 0, dH: 4});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$facets = function (givenTriangles) {\n\tif (!givenTriangles.b) {\n\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyMesh;\n\t} else {\n\t\tvar first = givenTriangles.a;\n\t\tvar rest = givenTriangles.b;\n\t\tvar webGLMesh = $elm_explorations$webgl$WebGL$triangles(\n\t\t\tA2($elm$core$List$map, $ianmackenzie$elm_3d_scene$Scene3d$Mesh$facetAttributes, givenTriangles));\n\t\tvar bounds = A3($ianmackenzie$elm_geometry$BoundingBox3d$aggregateOf, $ianmackenzie$elm_geometry$Triangle3d$boundingBox, first, rest);\n\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Types$Facets, bounds, givenTriangles, webGLMesh, 0);\n\t}\n};\nvar $ianmackenzie$elm_geometry$Geometry$Types$Triangle3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Triangle3d$from = F3(\n\tfunction (p1, p2, p3) {\n\t\treturn _Utils_Tuple3(p1, p2, p3);\n\t});\nvar $ianmackenzie$elm_units$Length$meters = function (numMeters) {\n\treturn numMeters;\n};\nvar $ianmackenzie$elm_units$Quantity$multiplyBy = F2(\n\tfunction (scale, _v0) {\n\t\tvar value = _v0;\n\t\treturn scale * value;\n\t});\nvar $ianmackenzie$elm_geometry$Geometry$Types$Point3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Point3d$xyz = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\tvar x = _v0;\n\t\tvar y = _v1;\n\t\tvar z = _v2;\n\t\treturn {d6: x, d7: y, b5: z};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Primitives$block = function () {\n\tvar z = $ianmackenzie$elm_units$Length$meters(1);\n\tvar y = $ianmackenzie$elm_units$Length$meters(1);\n\tvar x = $ianmackenzie$elm_units$Length$meters(1);\n\tvar minZ = A2($ianmackenzie$elm_units$Quantity$multiplyBy, -0.5, z);\n\tvar minY = A2($ianmackenzie$elm_units$Quantity$multiplyBy, -0.5, y);\n\tvar minX = A2($ianmackenzie$elm_units$Quantity$multiplyBy, -0.5, x);\n\tvar p0 = A3($ianmackenzie$elm_geometry$Point3d$xyz, minX, minY, minZ);\n\tvar maxZ = A2($ianmackenzie$elm_units$Quantity$multiplyBy, 0.5, z);\n\tvar p4 = A3($ianmackenzie$elm_geometry$Point3d$xyz, minX, minY, maxZ);\n\tvar maxY = A2($ianmackenzie$elm_units$Quantity$multiplyBy, 0.5, y);\n\tvar p3 = A3($ianmackenzie$elm_geometry$Point3d$xyz, minX, maxY, minZ);\n\tvar p7 = A3($ianmackenzie$elm_geometry$Point3d$xyz, minX, maxY, maxZ);\n\tvar maxX = A2($ianmackenzie$elm_units$Quantity$multiplyBy, 0.5, x);\n\tvar p1 = A3($ianmackenzie$elm_geometry$Point3d$xyz, maxX, minY, minZ);\n\tvar p2 = A3($ianmackenzie$elm_geometry$Point3d$xyz, maxX, maxY, minZ);\n\tvar p5 = A3($ianmackenzie$elm_geometry$Point3d$xyz, maxX, minY, maxZ);\n\tvar p6 = A3($ianmackenzie$elm_geometry$Point3d$xyz, maxX, maxY, maxZ);\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$Mesh$cullBackFaces(\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$facets(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p2, p1),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p3, p2),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p4, p5, p6),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p4, p6, p7),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p1, p2, p6),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p1, p6, p5),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p7, p3),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p4, p7),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p1, p5),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p0, p5, p4),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p3, p6, p2),\n\t\t\t\t\tA3($ianmackenzie$elm_geometry$Triangle3d$from, p3, p7, p6)\n\t\t\t\t])));\n}();\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow = {$: 0};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Shadow = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 1, a: a, b: b, c: c};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$collectShadowVertices = F3(\n\tfunction (getPosition, _v0, accumulated) {\n\t\tvar mv1 = _v0.a;\n\t\tvar mv2 = _v0.b;\n\t\tvar mv3 = _v0.c;\n\t\tvar p3 = getPosition(mv3);\n\t\tvar p2 = getPosition(mv2);\n\t\tvar p1 = getPosition(mv1);\n\t\tvar faceNormal = $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Vector3d$toVec3(\n\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Mesh$triangleNormal, p1, p2, p3));\n\t\tvar sv1 = {\n\t\t\tp: faceNormal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p1)\n\t\t};\n\t\tvar sv2 = {\n\t\t\tp: faceNormal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p2)\n\t\t};\n\t\tvar sv3 = {\n\t\t\tp: faceNormal,\n\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p3)\n\t\t};\n\t\treturn A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tsv1,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tsv2,\n\t\t\t\tA2($elm$core$List$cons, sv3, accumulated)));\n\t});\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$faceIndices = function (_v0) {\n\tvar mesh = _v0;\n\treturn mesh.E;\n};\nvar $elm$core$Maybe$map3 = F4(\n\tfunction (func, ma, mb, mc) {\n\t\tif (ma.$ === 1) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar a = ma.a;\n\t\t\tif (mb.$ === 1) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar b = mb.a;\n\t\t\t\tif (mc.$ === 1) {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\tvar c = mc.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\tA3(func, a, b, c));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$vertices = function (_v0) {\n\tvar mesh = _v0;\n\treturn mesh.am;\n};\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$vertex = F2(\n\tfunction (index, mesh) {\n\t\treturn A2(\n\t\t\t$elm$core$Array$get,\n\t\t\tindex,\n\t\t\t$ianmackenzie$elm_triangular_mesh$TriangularMesh$vertices(mesh));\n\t});\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$faceVertices = function (mesh) {\n\tvar toFace = function (_v0) {\n\t\tvar i = _v0.a;\n\t\tvar j = _v0.b;\n\t\tvar k = _v0.c;\n\t\treturn A4(\n\t\t\t$elm$core$Maybe$map3,\n\t\t\tF3(\n\t\t\t\tfunction (firstVertex, secondVertex, thirdVertex) {\n\t\t\t\t\treturn _Utils_Tuple3(firstVertex, secondVertex, thirdVertex);\n\t\t\t\t}),\n\t\t\tA2($ianmackenzie$elm_triangular_mesh$TriangularMesh$vertex, i, mesh),\n\t\t\tA2($ianmackenzie$elm_triangular_mesh$TriangularMesh$vertex, j, mesh),\n\t\t\tA2($ianmackenzie$elm_triangular_mesh$TriangularMesh$vertex, k, mesh));\n\t};\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\ttoFace,\n\t\t$ianmackenzie$elm_triangular_mesh$TriangularMesh$faceIndices(mesh));\n};\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{A: nodeList, m: nodeListSize, q: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$TriangularMesh = $elm$core$Basics$identity;\nvar $elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$not = _Basics_not;\nvar $elm$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\t$elm$core$List$any,\n\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),\n\t\t\tlist);\n\t});\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $elm$core$Array$length = function (_v0) {\n\tvar len = _v0.a;\n\treturn len;\n};\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$indexed = F2(\n\tfunction (vertices_, faceIndices_) {\n\t\tvar numVertices = $elm$core$Array$length(vertices_);\n\t\tvar validIndices = function (_v0) {\n\t\t\tvar i = _v0.a;\n\t\t\tvar j = _v0.b;\n\t\t\tvar k = _v0.c;\n\t\t\treturn ((i >= 0) && (_Utils_cmp(i, numVertices) < 0)) && (((j >= 0) && (_Utils_cmp(j, numVertices) < 0)) && ((k >= 0) && (_Utils_cmp(k, numVertices) < 0)));\n\t\t};\n\t\treturn A2($elm$core$List$all, validIndices, faceIndices_) ? {E: faceIndices_, am: vertices_} : {\n\t\t\tE: A2($elm$core$List$filter, validIndices, faceIndices_),\n\t\t\tam: vertices_\n\t\t};\n\t});\nvar $elm_explorations$webgl$WebGL$MeshIndexed3 = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 3, a: a, b: b, c: c};\n\t});\nvar $elm_explorations$webgl$WebGL$indexedTriangles = $elm_explorations$webgl$WebGL$MeshIndexed3(\n\t{c1: 1, c9: 3, dH: 4});\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $ianmackenzie$elm_geometry$Point3d$toMeters = function (_v0) {\n\tvar pointCoordinates = _v0;\n\treturn pointCoordinates;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey = F2(\n\tfunction (firstPoint, secondPoint) {\n\t\tvar p2 = $ianmackenzie$elm_geometry$Point3d$toMeters(secondPoint);\n\t\tvar p1 = $ianmackenzie$elm_geometry$Point3d$toMeters(firstPoint);\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_Tuple3(p1.d6, p1.d7, p1.b5),\n\t\t\t_Utils_Tuple3(p2.d6, p2.d7, p2.b5));\n\t});\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm_explorations$linear_algebra$Math$Vector3$vec3 = _MJS_v3;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$zeroVec3 = A3($elm_explorations$linear_algebra$Math$Vector3$vec3, 0, 0, 0);\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdge = F6(\n\tfunction (p1, p2, start, end, neighborDict, _v0) {\n\t\tvar shadowFaceIndices = _v0.a;\n\t\tvar extraShadowVertices = _v0.b;\n\t\tvar nextShadowVertexIndex = _v0.c;\n\t\tvar _v1 = A2(\n\t\t\t$elm$core$Dict$get,\n\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey, p1, p2),\n\t\t\tneighborDict);\n\t\tif (!_v1.$) {\n\t\t\tvar opposite = _v1.a;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple3(start, opposite, end),\n\t\t\t\t\tshadowFaceIndices),\n\t\t\t\textraShadowVertices,\n\t\t\t\tnextShadowVertexIndex);\n\t\t} else {\n\t\t\tvar v2 = {\n\t\t\t\tp: $ianmackenzie$elm_3d_scene$Scene3d$Mesh$zeroVec3,\n\t\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p2)\n\t\t\t};\n\t\t\tvar v1 = {\n\t\t\t\tp: $ianmackenzie$elm_3d_scene$Scene3d$Mesh$zeroVec3,\n\t\t\t\tbZ: $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Point3d$toVec3(p1)\n\t\t\t};\n\t\t\tvar b = nextShadowVertexIndex + 1;\n\t\t\tvar a = nextShadowVertexIndex;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple3(start, a, b),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple3(start, b, end),\n\t\t\t\t\t\tshadowFaceIndices)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tv2,\n\t\t\t\t\tA2($elm$core$List$cons, v1, extraShadowVertices)),\n\t\t\t\tnextShadowVertexIndex + 2);\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdges = F5(\n\tfunction (getPosition, neighborDict, meshFaceVertices, nextShadowVertexIndex, state) {\n\t\tjoinEdges:\n\t\twhile (true) {\n\t\t\tif (meshFaceVertices.b) {\n\t\t\t\tvar _v1 = meshFaceVertices.a;\n\t\t\t\tvar mv1 = _v1.a;\n\t\t\t\tvar mv2 = _v1.b;\n\t\t\t\tvar mv3 = _v1.c;\n\t\t\t\tvar remainingMeshFaceVertices = meshFaceVertices.b;\n\t\t\t\tvar p3 = getPosition(mv3);\n\t\t\t\tvar p2 = getPosition(mv2);\n\t\t\t\tvar p1 = getPosition(mv1);\n\t\t\t\tvar c = nextShadowVertexIndex + 2;\n\t\t\t\tvar b = nextShadowVertexIndex + 1;\n\t\t\t\tvar a = nextShadowVertexIndex;\n\t\t\t\tvar $temp$getPosition = getPosition,\n\t\t\t\t\t$temp$neighborDict = neighborDict,\n\t\t\t\t\t$temp$meshFaceVertices = remainingMeshFaceVertices,\n\t\t\t\t\t$temp$nextShadowVertexIndex = nextShadowVertexIndex + 3,\n\t\t\t\t\t$temp$state = A6(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdge,\n\t\t\t\t\tp3,\n\t\t\t\t\tp1,\n\t\t\t\t\tc,\n\t\t\t\t\ta,\n\t\t\t\t\tneighborDict,\n\t\t\t\t\tA6(\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdge,\n\t\t\t\t\t\tp2,\n\t\t\t\t\t\tp3,\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tc,\n\t\t\t\t\t\tneighborDict,\n\t\t\t\t\t\tA6($ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdge, p1, p2, a, b, neighborDict, state)));\n\t\t\t\tgetPosition = $temp$getPosition;\n\t\t\t\tneighborDict = $temp$neighborDict;\n\t\t\t\tmeshFaceVertices = $temp$meshFaceVertices;\n\t\t\t\tnextShadowVertexIndex = $temp$nextShadowVertexIndex;\n\t\t\t\tstate = $temp$state;\n\t\t\t\tcontinue joinEdges;\n\t\t\t} else {\n\t\t\t\tvar _v2 = state;\n\t\t\t\tvar shadowFaceIndices = _v2.a;\n\t\t\t\tvar extraShadowVertices = _v2.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tshadowFaceIndices,\n\t\t\t\t\t$elm$core$List$reverse(extraShadowVertices));\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$visitFaces = F5(\n\tfunction (getPosition, meshFaceVertices, nextShadowVertexIndex, shadowFaceIndices, neighborDict) {\n\t\tvisitFaces:\n\t\twhile (true) {\n\t\t\tif (meshFaceVertices.b) {\n\t\t\t\tvar _v1 = meshFaceVertices.a;\n\t\t\t\tvar mv1 = _v1.a;\n\t\t\t\tvar mv2 = _v1.b;\n\t\t\t\tvar mv3 = _v1.c;\n\t\t\t\tvar remainingMeshFaceVertices = meshFaceVertices.b;\n\t\t\t\tvar p3 = getPosition(mv3);\n\t\t\t\tvar p2 = getPosition(mv2);\n\t\t\t\tvar p1 = getPosition(mv1);\n\t\t\t\tvar c = nextShadowVertexIndex + 2;\n\t\t\t\tvar b = nextShadowVertexIndex + 1;\n\t\t\t\tvar a = nextShadowVertexIndex;\n\t\t\t\tvar updatedNeighborDict = A3(\n\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey, p1, p3),\n\t\t\t\t\tc,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey, p3, p2),\n\t\t\t\t\t\tb,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Mesh$edgeKey, p2, p1),\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tneighborDict)));\n\t\t\t\tvar updatedShadowFaceIndices = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple3(a, b, c),\n\t\t\t\t\tshadowFaceIndices);\n\t\t\t\tvar $temp$getPosition = getPosition,\n\t\t\t\t\t$temp$meshFaceVertices = remainingMeshFaceVertices,\n\t\t\t\t\t$temp$nextShadowVertexIndex = nextShadowVertexIndex + 3,\n\t\t\t\t\t$temp$shadowFaceIndices = updatedShadowFaceIndices,\n\t\t\t\t\t$temp$neighborDict = updatedNeighborDict;\n\t\t\t\tgetPosition = $temp$getPosition;\n\t\t\t\tmeshFaceVertices = $temp$meshFaceVertices;\n\t\t\t\tnextShadowVertexIndex = $temp$nextShadowVertexIndex;\n\t\t\t\tshadowFaceIndices = $temp$shadowFaceIndices;\n\t\t\t\tneighborDict = $temp$neighborDict;\n\t\t\t\tcontinue visitFaces;\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple3(shadowFaceIndices, neighborDict, nextShadowVertexIndex);\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl = F3(\n\tfunction (meshBounds, getPosition, triangularMesh) {\n\t\tvar meshFaceVertices = $ianmackenzie$elm_triangular_mesh$TriangularMesh$faceVertices(triangularMesh);\n\t\tvar initialShadowVertices = A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$collectShadowVertices(getPosition),\n\t\t\t_List_Nil,\n\t\t\tmeshFaceVertices);\n\t\tvar _v0 = A5($ianmackenzie$elm_3d_scene$Scene3d$Mesh$visitFaces, getPosition, meshFaceVertices, 0, _List_Nil, $elm$core$Dict$empty);\n\t\tvar initialShadowFaceIndices = _v0.a;\n\t\tvar neighborDict = _v0.b;\n\t\tvar nextShadowVertexIndex = _v0.c;\n\t\tvar _v1 = A5(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$joinEdges,\n\t\t\tgetPosition,\n\t\t\tneighborDict,\n\t\t\tmeshFaceVertices,\n\t\t\t0,\n\t\t\t_Utils_Tuple3(initialShadowFaceIndices, _List_Nil, nextShadowVertexIndex));\n\t\tvar allShadowFaceIndices = _v1.a;\n\t\tvar extraShadowVertices = _v1.b;\n\t\tvar allShadowVertices = $elm$core$List$isEmpty(extraShadowVertices) ? initialShadowVertices : _Utils_ap(initialShadowVertices, extraShadowVertices);\n\t\treturn A3(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Shadow,\n\t\t\tmeshBounds,\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_triangular_mesh$TriangularMesh$indexed,\n\t\t\t\t$elm$core$Array$fromList(allShadowVertices),\n\t\t\t\tallShadowFaceIndices),\n\t\t\tA2($elm_explorations$webgl$WebGL$indexedTriangles, allShadowVertices, allShadowFaceIndices));\n\t});\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $ianmackenzie$elm_triangular_mesh$TriangularMesh$triangles = function (faceVertices_) {\n\treturn {\n\t\tE: A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (i) {\n\t\t\t\treturn _Utils_Tuple3(3 * i, (3 * i) + 1, (3 * i) + 2);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(faceVertices_) - 1)),\n\t\tam: $elm$core$Array$fromList(\n\t\t\t$elm$core$List$concat(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\tvar v1 = _v0.a;\n\t\t\t\t\t\tvar v2 = _v0.b;\n\t\t\t\t\t\tvar v3 = _v0.c;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[v1, v2, v3]);\n\t\t\t\t\t},\n\t\t\t\t\tfaceVertices_)))\n\t};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadow = function (mesh) {\n\tswitch (mesh.$) {\n\t\tcase 0:\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow;\n\t\tcase 1:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar meshTriangles = mesh.b;\n\t\t\tvar vertexTriples = A2($elm$core$List$map, $ianmackenzie$elm_geometry$Triangle3d$vertices, meshTriangles);\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t$ianmackenzie$elm_triangular_mesh$TriangularMesh$triangles(vertexTriples));\n\t\tcase 2:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar meshTriangles = mesh.b;\n\t\t\tvar vertexTriples = A2($elm$core$List$map, $ianmackenzie$elm_geometry$Triangle3d$vertices, meshTriangles);\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t$ianmackenzie$elm_triangular_mesh$TriangularMesh$triangles(vertexTriples));\n\t\tcase 3:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\treturn A3($ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl, boundingBox, $elm$core$Basics$identity, triangularMesh);\n\t\tcase 4:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.bZ;\n\t\t\t\t},\n\t\t\t\ttriangularMesh);\n\t\tcase 5:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.bZ;\n\t\t\t\t},\n\t\t\t\ttriangularMesh);\n\t\tcase 6:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.bZ;\n\t\t\t\t},\n\t\t\t\ttriangularMesh);\n\t\tcase 7:\n\t\t\tvar boundingBox = mesh.a;\n\t\t\tvar triangularMesh = mesh.b;\n\t\t\treturn A3(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadowImpl,\n\t\t\t\tboundingBox,\n\t\t\t\tfunction ($) {\n\t\t\t\t\treturn $.bZ;\n\t\t\t\t},\n\t\t\t\ttriangularMesh);\n\t\tcase 8:\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow;\n\t\tcase 9:\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow;\n\t\tdefault:\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyShadow;\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Primitives$blockShadow = $ianmackenzie$elm_3d_scene$Scene3d$Mesh$shadow($ianmackenzie$elm_3d_scene$Scene3d$Primitives$block);\nvar $ianmackenzie$elm_geometry$Block3d$dimensions = function (_v0) {\n\tvar block = _v0;\n\treturn block.en;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyNode = {$: 0};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Entity = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty = $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyNode;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Group = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$collectNodes = F2(\n\tfunction (drawables, accumulated) {\n\t\tcollectNodes:\n\t\twhile (true) {\n\t\t\tif (!drawables.b) {\n\t\t\t\treturn accumulated;\n\t\t\t} else {\n\t\t\t\tvar node = drawables.a;\n\t\t\t\tvar rest = drawables.b;\n\t\t\t\tvar $temp$drawables = rest,\n\t\t\t\t\t$temp$accumulated = A2($elm$core$List$cons, node, accumulated);\n\t\t\t\tdrawables = $temp$drawables;\n\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\tcontinue collectNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$group = function (drawables) {\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$Group(\n\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$collectNodes, drawables, _List_Nil));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$colorTextureFragment = {\n\tsrc: '\\n        precision mediump float;\\n        \\n        uniform mediump sampler2D colorTexture;\\n        \\n        varying mediump vec2 interpolatedUv;\\n        \\n        void main () {\\n            gl_FragColor = texture2D(colorTexture, interpolatedUv);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {colorTexture: 'bH'}\n};\nvar $elm_explorations$webgl$WebGL$Internal$enableOption = F2(\n\tfunction (ctx, option) {\n\t\tswitch (option.$) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(_WebGL_enableAlpha, ctx, option);\n\t\t\tcase 1:\n\t\t\t\treturn A2(_WebGL_enableDepth, ctx, option);\n\t\t\tcase 2:\n\t\t\t\treturn A2(_WebGL_enableStencil, ctx, option);\n\t\t\tcase 3:\n\t\t\t\treturn A2(_WebGL_enableAntialias, ctx, option);\n\t\t\tcase 4:\n\t\t\t\treturn A2(_WebGL_enableClearColor, ctx, option);\n\t\t\tdefault:\n\t\t\t\treturn A2(_WebGL_enablePreserveDrawingBuffer, ctx, option);\n\t\t}\n\t});\nvar $elm_explorations$webgl$WebGL$Internal$enableSetting = F2(\n\tfunction (cache, setting) {\n\t\tswitch (setting.$) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(_WebGL_enableBlend, cache, setting);\n\t\t\tcase 1:\n\t\t\t\treturn A2(_WebGL_enableDepthTest, cache, setting);\n\t\t\tcase 2:\n\t\t\t\treturn A2(_WebGL_enableStencilTest, cache, setting);\n\t\t\tcase 3:\n\t\t\t\treturn A2(_WebGL_enableScissor, cache, setting);\n\t\t\tcase 4:\n\t\t\t\treturn A2(_WebGL_enableColorMask, cache, setting);\n\t\t\tcase 5:\n\t\t\t\treturn A2(_WebGL_enableCullFace, cache, setting);\n\t\t\tcase 6:\n\t\t\t\treturn A2(_WebGL_enablePolygonOffset, cache, setting);\n\t\t\tcase 7:\n\t\t\t\treturn A2(_WebGL_enableSampleCoverage, cache, setting);\n\t\t\tdefault:\n\t\t\t\treturn _WebGL_enableSampleAlphaToCoverage(cache);\n\t\t}\n\t});\nvar $elm_explorations$webgl$WebGL$entityWith = _WebGL_entity;\nvar $elm_explorations$webgl$WebGL$Settings$FaceMode = $elm$core$Basics$identity;\nvar $elm_explorations$webgl$WebGL$Settings$back = 1029;\nvar $elm_explorations$webgl$WebGL$Internal$CullFace = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $elm_explorations$webgl$WebGL$Settings$cullFace = function (_v0) {\n\tvar faceMode = _v0;\n\treturn $elm_explorations$webgl$WebGL$Internal$CullFace(faceMode);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$cullBackFaceSetting = $elm_explorations$webgl$WebGL$Settings$cullFace($elm_explorations$webgl$WebGL$Settings$back);\nvar $elm_explorations$webgl$WebGL$Settings$front = 1028;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$cullFrontFaceSetting = $elm_explorations$webgl$WebGL$Settings$cullFace($elm_explorations$webgl$WebGL$Settings$front);\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings = F3(\n\tfunction (isRightHanded, backFaceSetting, settings) {\n\t\tif (backFaceSetting === 1) {\n\t\t\treturn isRightHanded ? A2($elm$core$List$cons, $ianmackenzie$elm_3d_scene$Scene3d$Entity$cullBackFaceSetting, settings) : A2($elm$core$List$cons, $ianmackenzie$elm_3d_scene$Scene3d$Entity$cullFrontFaceSetting, settings);\n\t\t} else {\n\t\t\treturn settings;\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$unlitVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        attribute mediump vec2 uv;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        varying mediump vec2 interpolatedUv;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        void main() {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n            interpolatedUv = uv;\\n        }\\n    ',\n\tattributes: {position: 'bZ', uv: 'M'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$colorTextureMesh = F4(\n\tfunction (data, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$unlitVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$colorTextureFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{bH: data, b: modelMatrix, c: modelScale, d: projectionMatrix, e: sceneProperties, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantFragment = {\n\tsrc: '\\n        precision lowp float;\\n        \\n        uniform lowp vec3 constantColor;\\n        \\n        void main () {\\n            gl_FragColor = vec4(constantColor, 1.0);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {constantColor: 'aD'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$plainVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        void main () {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n        }\\n    ',\n\tattributes: {position: 'bZ'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh = F4(\n\tfunction (color, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$plainVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{aD: color, b: modelMatrix, c: modelScale, d: projectionMatrix, e: sceneProperties, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$PointNode = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantPointFragment = {\n\tsrc: '\\n        precision lowp float;\\n        \\n        uniform lowp vec3 constantColor;\\n        uniform lowp float pointRadius;\\n        uniform highp mat4 sceneProperties;\\n        \\n        float pointAlpha(float pointRadius, vec2 pointCoord) {\\n            float pointSize = 2.0 * pointRadius;\\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\\n            float r = sqrt(x * x + y * y);\\n            float innerRadius = pointRadius;\\n            float outerRadius = pointRadius + 1.0;\\n            if (r > outerRadius) {\\n                return 0.0;\\n            } else if (r > innerRadius) {\\n                return outerRadius - r;\\n            } else {\\n                return 1.0;\\n            }\\n        }\\n        \\n        void main () {\\n            float supersampling = sceneProperties[3][0];\\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\\n            gl_FragColor = vec4(constantColor, alpha);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {constantColor: 'aD', pointRadius: 'bY', sceneProperties: 'e'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$pointVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform lowp float pointRadius;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        void main () {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n            float supersampling = sceneProperties[3][0];\\n            gl_PointSize = 2.0 * pointRadius * supersampling + 2.0;\\n        }\\n    ',\n\tattributes: {position: 'bZ'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', pointRadius: 'bY', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$constantPointMesh = F4(\n\tfunction (color, radius, bounds, webGLMesh) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$PointNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tsettings,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$pointVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$constantPointFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{aD: color, b: modelMatrix, c: modelScale, bY: radius, d: projectionMatrix, e: sceneProperties, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveFragment = {\n\tsrc: '\\n        precision mediump float;\\n        \\n        uniform mediump vec3 emissiveColor;\\n        uniform highp mat4 sceneProperties;\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main () {\\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {emissiveColor: 'aO', sceneProperties: 'e'}\n};\nvar $ianmackenzie$elm_units$Luminance$inNits = function (_v0) {\n\tvar numNits = _v0;\n\treturn numNits;\n};\nvar $elm_explorations$linear_algebra$Math$Vector3$scale = _MJS_v3scale;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh = F5(\n\tfunction (color, backlight, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$plainVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taO: A2(\n\t\t\t\t\t\t\t\t$elm_explorations$linear_algebra$Math$Vector3$scale,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_units$Luminance$inNits(backlight),\n\t\t\t\t\t\t\t\tcolor),\n\t\t\t\t\t\t\tb: modelMatrix,\n\t\t\t\t\t\t\tc: modelScale,\n\t\t\t\t\t\t\td: projectionMatrix,\n\t\t\t\t\t\t\te: sceneProperties,\n\t\t\t\t\t\t\tf: viewMatrix\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissivePointFragment = {\n\tsrc: '\\n        precision mediump float;\\n        \\n        uniform mediump vec3 emissiveColor;\\n        uniform lowp float pointRadius;\\n        uniform highp mat4 sceneProperties;\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        float pointAlpha(float pointRadius, vec2 pointCoord) {\\n            float pointSize = 2.0 * pointRadius;\\n            float x = (pointSize + 2.0) * (pointCoord.s - 0.5);\\n            float y = (pointSize + 2.0) * (pointCoord.t - 0.5);\\n            float r = sqrt(x * x + y * y);\\n            float innerRadius = pointRadius;\\n            float outerRadius = pointRadius + 1.0;\\n            if (r > outerRadius) {\\n                return 0.0;\\n            } else if (r > innerRadius) {\\n                return outerRadius - r;\\n            } else {\\n                return 1.0;\\n            }\\n        }\\n        \\n        void main () {\\n            vec4 color = toSrgb(emissiveColor, sceneProperties);\\n            float supersampling = sceneProperties[3][0];\\n            float alpha = pointAlpha(pointRadius * supersampling, gl_PointCoord);\\n            gl_FragColor = vec4(color.rgb, alpha);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {emissiveColor: 'aO', pointRadius: 'bY', sceneProperties: 'e'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$emissivePointMesh = F5(\n\tfunction (color, backlight, radius, bounds, webGLMesh) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$PointNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tsettings,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$pointVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissivePointFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taO: A2(\n\t\t\t\t\t\t\t\t$elm_explorations$linear_algebra$Math$Vector3$scale,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_units$Luminance$inNits(backlight),\n\t\t\t\t\t\t\t\tcolor),\n\t\t\t\t\t\t\tb: modelMatrix,\n\t\t\t\t\t\t\tc: modelScale,\n\t\t\t\t\t\t\tbY: radius,\n\t\t\t\t\t\t\td: projectionMatrix,\n\t\t\t\t\t\t\te: sceneProperties,\n\t\t\t\t\t\t\tf: viewMatrix\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianFragment = {\n\tsrc: '\\n        precision highp float;\\n        \\n        uniform highp mat4 sceneProperties;\\n        uniform highp mat4 lights12;\\n        uniform highp mat4 lights34;\\n        uniform highp mat4 lights56;\\n        uniform highp mat4 lights78;\\n        uniform lowp vec4 enabledLights;\\n        uniform lowp vec3 materialColor;\\n        uniform highp mat4 viewMatrix;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        \\n        const lowp float kPerspectiveProjection = 0.0;\\n        const lowp float kOrthographicProjection = 1.0;\\n        const lowp float kDirectionalLight = 1.0;\\n        const lowp float kPointLight = 2.0;\\n        const highp float kPi = 3.14159265359;\\n        const lowp float kDisabledLight = 0.0;\\n        const lowp float kSoftLighting = 3.0;\\n        \\n        float getNormalSign() {\\n            return 2.0 * float(gl_FrontFacing) - 1.0;\\n        }\\n        \\n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\\n            float projectionType = sceneProperties[1].w;\\n            if (projectionType == kPerspectiveProjection) {\\n                vec3 cameraPoint = sceneProperties[1].xyz;\\n                return normalize(cameraPoint - surfacePosition);\\n            } else if (projectionType == kOrthographicProjection) {\\n                return sceneProperties[1].xyz;\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        void getDirectionToLightAndNormalIlluminance(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            out vec3 directionToLight,\\n            out vec3 normalIlluminance\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDirectionalLight) {\\n                directionToLight = xyz_type.xyz;\\n                normalIlluminance = rgb_parameter.rgb;\\n            } else if (lightType == kPointLight) {\\n                vec3 lightPosition = xyz_type.xyz;\\n                vec3 displacement = lightPosition - surfacePosition;\\n                float distance = length(displacement);\\n                directionToLight = displacement / distance;\\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\\n            }\\n        }\\n        \\n        float positiveDotProduct(vec3 v1, vec3 v2) {\\n            return clamp(dot(v1, v2), 0.0, 1.0);\\n        }\\n        \\n        vec3 softLightingLuminance(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localLightDirection\\n        ) {\\n            float sinElevation = dot(localLightDirection, localUpDirection);\\n            float t = (sinElevation + 1.0) / 2.0;\\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\\n        }\\n        \\n        vec3 lambertianLight(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 materialColor,\\n            vec4 xyz_type,\\n            vec4 rgb_parameter\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDisabledLight) {\\n                return vec3(0.0, 0.0, 0.0);\\n            } else if (lightType == kSoftLighting) {\\n                vec3 upDirection = xyz_type.xyz;\\n                vec3 aboveLuminance = rgb_parameter.rgb;\\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\\n                return luminance * materialColor;\\n            }\\n        \\n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\\n            getDirectionToLightAndNormalIlluminance(\\n                xyz_type,\\n                rgb_parameter,\\n                surfacePosition,\\n                directionToLight,\\n                normalIlluminance\\n            );\\n        \\n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\\n        }\\n        \\n        vec3 lambertianLighting(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 materialColor,\\n            mat4 lights12,\\n            mat4 lights34,\\n            mat4 lights56,\\n            mat4 lights78,\\n            vec4 enabledLights\\n        ) {\\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\\n        }\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main() {\\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\\n        \\n            vec3 linearColor = lambertianLighting(\\n                interpolatedPosition,\\n                normalDirection,\\n                materialColor,\\n                lights12,\\n                lights34,\\n                lights56,\\n                lights78,\\n                enabledLights\\n            );\\n        \\n            gl_FragColor = toSrgb(linearColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {enabledLights: 'T', lights12: 'bd', lights34: 'bP', lights56: 'bQ', lights78: 'bR', materialColor: 'co', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$uniformVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        attribute highp vec3 normal;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        vec3 safeNormalize(vec3 vector) {\\n            if (vector == vec3(0.0, 0.0, 0.0)) {\\n                return vector;\\n            } else {\\n                return normalize(vector);\\n            }\\n        }\\n        \\n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\\n        }\\n        \\n        void main () {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n            interpolatedPosition = worldPosition.xyz;\\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\\n        }\\n    ',\n\tattributes: {normal: 'p', position: 'bZ'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh = F4(\n\tfunction (color, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$uniformVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, co: color, b: modelMatrix, c: modelScale, d: projectionMatrix, e: sceneProperties, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianTextureFragment = {\n\tsrc: '\\n        precision highp float;\\n        \\n        uniform highp mat4 sceneProperties;\\n        uniform highp mat4 lights12;\\n        uniform highp mat4 lights34;\\n        uniform highp mat4 lights56;\\n        uniform highp mat4 lights78;\\n        uniform lowp vec4 enabledLights;\\n        uniform mediump sampler2D materialColorTexture;\\n        uniform mediump sampler2D normalMapTexture;\\n        uniform lowp float useNormalMap;\\n        uniform highp mat4 viewMatrix;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        varying mediump vec2 interpolatedUv;\\n        varying highp vec3 interpolatedTangent;\\n        \\n        const lowp float kPerspectiveProjection = 0.0;\\n        const lowp float kOrthographicProjection = 1.0;\\n        const lowp float kDirectionalLight = 1.0;\\n        const lowp float kPointLight = 2.0;\\n        const highp float kPi = 3.14159265359;\\n        const lowp float kDisabledLight = 0.0;\\n        const lowp float kSoftLighting = 3.0;\\n        \\n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\\n            float x = 2.0 * (rgb.r - 0.5);\\n            float y = 2.0 * (rgb.g - 0.5);\\n            float z = 2.0 * (rgb.b - 0.5);\\n            return normalize(vec3(-x, -y, z));\\n        }\\n        \\n        float getNormalSign() {\\n            return 2.0 * float(gl_FrontFacing) - 1.0;\\n        }\\n        \\n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\\n            vec3 bitangent = cross(normal, tangent) * normalSign;\\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\\n        }\\n        \\n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\\n            float projectionType = sceneProperties[1].w;\\n            if (projectionType == kPerspectiveProjection) {\\n                vec3 cameraPoint = sceneProperties[1].xyz;\\n                return normalize(cameraPoint - surfacePosition);\\n            } else if (projectionType == kOrthographicProjection) {\\n                return sceneProperties[1].xyz;\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        void getDirectionToLightAndNormalIlluminance(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            out vec3 directionToLight,\\n            out vec3 normalIlluminance\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDirectionalLight) {\\n                directionToLight = xyz_type.xyz;\\n                normalIlluminance = rgb_parameter.rgb;\\n            } else if (lightType == kPointLight) {\\n                vec3 lightPosition = xyz_type.xyz;\\n                vec3 displacement = lightPosition - surfacePosition;\\n                float distance = length(displacement);\\n                directionToLight = displacement / distance;\\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\\n            }\\n        }\\n        \\n        float positiveDotProduct(vec3 v1, vec3 v2) {\\n            return clamp(dot(v1, v2), 0.0, 1.0);\\n        }\\n        \\n        vec3 softLightingLuminance(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localLightDirection\\n        ) {\\n            float sinElevation = dot(localLightDirection, localUpDirection);\\n            float t = (sinElevation + 1.0) / 2.0;\\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\\n        }\\n        \\n        vec3 lambertianLight(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 materialColor,\\n            vec4 xyz_type,\\n            vec4 rgb_parameter\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDisabledLight) {\\n                return vec3(0.0, 0.0, 0.0);\\n            } else if (lightType == kSoftLighting) {\\n                vec3 upDirection = xyz_type.xyz;\\n                vec3 aboveLuminance = rgb_parameter.rgb;\\n                vec3 belowLuminance = rgb_parameter.a * aboveLuminance;\\n                vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, upDirection, surfaceNormal);\\n                return luminance * materialColor;\\n            }\\n        \\n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\\n            getDirectionToLightAndNormalIlluminance(\\n                xyz_type,\\n                rgb_parameter,\\n                surfacePosition,\\n                directionToLight,\\n                normalIlluminance\\n            );\\n        \\n            float dotNL = positiveDotProduct(directionToLight, surfaceNormal);\\n            return (normalIlluminance * dotNL) * (materialColor / kPi);\\n        }\\n        \\n        vec3 lambertianLighting(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 materialColor,\\n            mat4 lights12,\\n            mat4 lights34,\\n            mat4 lights56,\\n            mat4 lights78,\\n            vec4 enabledLights\\n        ) {\\n            vec3 litColor1 = enabledLights[0] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[0], lights12[1]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor2 = enabledLights[1] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights12[2], lights12[3]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor3 = enabledLights[2] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[0], lights34[1]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor4 = enabledLights[3] == 1.0 ? lambertianLight(surfacePosition, surfaceNormal, materialColor, lights34[2], lights34[3]) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor5 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[0], lights56[1]);\\n            vec3 litColor6 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights56[2], lights56[3]);\\n            vec3 litColor7 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[0], lights78[1]);\\n            vec3 litColor8 = lambertianLight(surfacePosition, surfaceNormal, materialColor, lights78[2], lights78[3]);\\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\\n        }\\n        \\n        float inverseGamma(float u) {\\n            if (u <= 0.04045) {\\n                return clamp(u / 12.92, 0.0, 1.0);\\n            } else {\\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\\n            }\\n        }\\n        \\n        vec3 fromSrgb(vec3 srgbColor) {\\n            return vec3(\\n                inverseGamma(srgbColor.r),\\n                inverseGamma(srgbColor.g),\\n                inverseGamma(srgbColor.b)\\n            );\\n        }\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main() {\\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\\n            float normalSign = getNormalSign();\\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\\n            vec3 materialColor = fromSrgb(texture2D(materialColorTexture, interpolatedUv).rgb);\\n        \\n            vec3 linearColor = lambertianLighting(\\n                interpolatedPosition,\\n                normalDirection,\\n                materialColor,\\n                lights12,\\n                lights34,\\n                lights56,\\n                lights78,\\n                enabledLights\\n            );\\n        \\n            gl_FragColor = toSrgb(linearColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {enabledLights: 'T', lights12: 'bd', lights34: 'bP', lights56: 'bQ', lights78: 'bR', materialColorTexture: 'cp', normalMapTexture: 'aV', sceneProperties: 'e', useNormalMap: 'a_', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$normalMappedVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        attribute highp vec3 normal;\\n        attribute mediump vec2 uv;\\n        attribute highp vec3 tangent;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        varying mediump vec2 interpolatedUv;\\n        varying highp vec3 interpolatedTangent;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        vec3 safeNormalize(vec3 vector) {\\n            if (vector == vec3(0.0, 0.0, 0.0)) {\\n                return vector;\\n            } else {\\n                return normalize(vector);\\n            }\\n        }\\n        \\n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\\n        }\\n        \\n        vec3 getWorldTangent(vec3 modelTangent, vec4 modelScale, mat4 modelMatrix) {\\n            return (modelMatrix * vec4(safeNormalize(modelScale.xyz * modelTangent), 0.0)).xyz;\\n        }\\n        \\n        void main () {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n            interpolatedPosition = worldPosition.xyz;\\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\\n            interpolatedUv = uv;\\n            interpolatedTangent = getWorldTangent(tangent, modelScale, modelMatrix);\\n        }\\n    ',\n\tattributes: {normal: 'p', position: 'bZ', tangent: 'd1', uv: 'M'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedLambertianMesh = F6(\n\tfunction (materialColorData, normalMapData, useNormalMap, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$normalMappedVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianTextureFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, cp: materialColorData, b: modelMatrix, c: modelScale, aV: normalMapData, d: projectionMatrix, e: sceneProperties, a_: useNormalMap, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalTexturesFragment = {\n\tsrc: '\\n        precision highp float;\\n        \\n        uniform highp mat4 sceneProperties;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 lights12;\\n        uniform highp mat4 lights34;\\n        uniform highp mat4 lights56;\\n        uniform highp mat4 lights78;\\n        uniform lowp vec4 enabledLights;\\n        uniform mediump sampler2D baseColorTexture;\\n        uniform lowp vec4 constantBaseColor;\\n        uniform mediump sampler2D roughnessTexture;\\n        uniform lowp vec2 constantRoughness;\\n        uniform mediump sampler2D metallicTexture;\\n        uniform lowp vec2 constantMetallic;\\n        uniform mediump sampler2D normalMapTexture;\\n        uniform lowp float useNormalMap;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        varying mediump vec2 interpolatedUv;\\n        varying highp vec3 interpolatedTangent;\\n        \\n        const lowp float kPerspectiveProjection = 0.0;\\n        const lowp float kOrthographicProjection = 1.0;\\n        const lowp float kDirectionalLight = 1.0;\\n        const lowp float kPointLight = 2.0;\\n        const highp float kPi = 3.14159265359;\\n        const mediump float kMediumpFloatMax = 65504.0;\\n        const lowp float kDisabledLight = 0.0;\\n        const lowp float kSoftLighting = 3.0;\\n        \\n        float getFloatValue(sampler2D texture, vec2 uv, vec2 constantValue) {\\n            if (constantValue.y == 1.0) {\\n                return constantValue.x;\\n            } else {\\n                vec4 textureColor = texture2D(texture, uv);\\n                return dot(textureColor, vec4(0.2126, 0.7152, 0.0722, 0.0));\\n            }\\n        }\\n        \\n        vec3 getLocalNormal(sampler2D normalMap, float useNormalMap, vec2 uv) {\\n            vec3 rgb = useNormalMap * texture2D(normalMap, uv).rgb + (1.0 - useNormalMap) * vec3(0.5, 0.5, 1.0);\\n            float x = 2.0 * (rgb.r - 0.5);\\n            float y = 2.0 * (rgb.g - 0.5);\\n            float z = 2.0 * (rgb.b - 0.5);\\n            return normalize(vec3(-x, -y, z));\\n        }\\n        \\n        float getNormalSign() {\\n            return 2.0 * float(gl_FrontFacing) - 1.0;\\n        }\\n        \\n        vec3 getMappedNormal(vec3 normal, vec3 tangent, float normalSign, vec3 localNormal) {\\n            vec3 bitangent = cross(normal, tangent) * normalSign;\\n            return normalize(localNormal.x * tangent + localNormal.y * bitangent + localNormal.z * normal);\\n        }\\n        \\n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\\n            float projectionType = sceneProperties[1].w;\\n            if (projectionType == kPerspectiveProjection) {\\n                vec3 cameraPoint = sceneProperties[1].xyz;\\n                return normalize(cameraPoint - surfacePosition);\\n            } else if (projectionType == kOrthographicProjection) {\\n                return sceneProperties[1].xyz;\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        void getDirectionToLightAndNormalIlluminance(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            out vec3 directionToLight,\\n            out vec3 normalIlluminance\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDirectionalLight) {\\n                directionToLight = xyz_type.xyz;\\n                normalIlluminance = rgb_parameter.rgb;\\n            } else if (lightType == kPointLight) {\\n                vec3 lightPosition = xyz_type.xyz;\\n                vec3 displacement = lightPosition - surfacePosition;\\n                float distance = length(displacement);\\n                directionToLight = displacement / distance;\\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\\n            }\\n        }\\n        \\n        float positiveDotProduct(vec3 v1, vec3 v2) {\\n            return clamp(dot(v1, v2), 0.0, 1.0);\\n        }\\n        \\n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\\n            vec3 crossNH = cross(normalDirection, halfDirection);\\n            float a = dotNH * alpha;\\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\\n            float d = k * k * (1.0 / kPi);\\n            return min(d, kMediumpFloatMax);\\n        }\\n        \\n        float safeQuotient(float numerator, float denominator) {\\n            if (denominator == 0.0) {\\n                return 0.0;\\n            } else {\\n                return numerator / denominator;\\n            }\\n        }\\n        \\n        float g1(float dotNV, float alphaSquared) {\\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\\n        }\\n        \\n        float specularG(float dotNL, float dotNV, float alphaSquared) {\\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\\n        }\\n        \\n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\\n            vec3 one = vec3(1.0, 1.0, 1.0);\\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\\n            return specularBaseColor + (one - specularBaseColor) * scale;\\n        }\\n        \\n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\\n            float dotNHSquared = dotNH * dotNH;\\n        \\n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\\n            float g = specularG(dotNL, dotNV, alpha * alpha);\\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\\n        }\\n        \\n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\\n            float t2 = (1.0 - s);\\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\\n        }\\n        \\n        vec3 softLightingLuminance(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localLightDirection\\n        ) {\\n            float sinElevation = dot(localLightDirection, localUpDirection);\\n            float t = (sinElevation + 1.0) / 2.0;\\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\\n        }\\n        \\n        vec3 softLightingSpecularSample(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localViewDirection,\\n            vec3 localLightDirection,\\n            vec3 localHalfDirection,\\n            float alphaSquared,\\n            vec3 specularBaseColor\\n        ) {\\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\\n            float dotNL = localLightDirection.z;\\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\\n        }\\n        \\n        vec3 softLighting(\\n            vec3 normalDirection,\\n            vec3 diffuseBaseColor,\\n            vec3 specularBaseColor,\\n            float alpha,\\n            vec3 directionToCamera,\\n            vec3 viewY,\\n            vec4 xyz_type,\\n            vec4 rgb_parameter\\n        ) {\\n            float alphaSquared = alpha * alpha;\\n            vec3 upDirection = xyz_type.xyz;\\n            vec3 luminanceAbove = rgb_parameter.rgb;\\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\\n            float crossMagnitude = length(crossProduct);\\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\\n            if (crossMagnitude > 1.0e-6) {\\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\\n                xDirection = cross(yDirection, normalDirection);\\n            } else {\\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\\n                xDirection = normalize(cross(viewY, normalDirection));\\n                yDirection = cross(normalDirection, xDirection);\\n            }\\n            float localViewX = dot(directionToCamera, xDirection);\\n            float localViewZ = dot(directionToCamera, normalDirection);\\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\\n            float localUpX = dot(upDirection, xDirection);\\n            float localUpY = dot(upDirection, yDirection);\\n            float localUpZ = dot(upDirection, normalDirection);\\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\\n        \\n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\\n            vec3 vT2 = cross(vH, vT1);\\n            float s = 0.5 * (1.0 + vH.z);\\n            \\n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\\n            \\n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\\n            \\n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\\n            \\n            return specular + diffuse * diffuseBaseColor;\\n        }\\n        \\n        vec3 physicalLight(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            vec3 normalDirection,\\n            vec3 directionToCamera,\\n            vec3 viewY,\\n            float dotNV,\\n            vec3 diffuseBaseColor,\\n            vec3 specularBaseColor,\\n            float alpha\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDisabledLight) {\\n                return vec3(0.0, 0.0, 0.0);\\n            } else if (lightType == kSoftLighting) {\\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\\n            }\\n        \\n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\\n        \\n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\\n        }\\n        \\n        vec3 physicalLighting(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 baseColor,\\n            vec3 directionToCamera,\\n            mat4 viewMatrix,\\n            float roughness,\\n            float metallic,\\n            mat4 lights12,\\n            mat4 lights34,\\n            mat4 lights56,\\n            mat4 lights78,\\n            vec4 enabledLights\\n        ) {\\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\\n            float alpha = roughness * roughness;\\n            float nonmetallic = 1.0 - metallic;\\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\\n        \\n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\\n        }\\n        \\n        float inverseGamma(float u) {\\n            if (u <= 0.04045) {\\n                return clamp(u / 12.92, 0.0, 1.0);\\n            } else {\\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\\n            }\\n        }\\n        \\n        vec3 fromSrgb(vec3 srgbColor) {\\n            return vec3(\\n                inverseGamma(srgbColor.r),\\n                inverseGamma(srgbColor.g),\\n                inverseGamma(srgbColor.b)\\n            );\\n        }\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main() {\\n            vec3 baseColor = fromSrgb(texture2D(baseColorTexture, interpolatedUv).rgb) * (1.0 - constantBaseColor.w) + constantBaseColor.rgb * constantBaseColor.w;\\n            float roughness = getFloatValue(roughnessTexture, interpolatedUv, constantRoughness);\\n            float metallic = getFloatValue(metallicTexture, interpolatedUv, constantMetallic);\\n        \\n            vec3 localNormal = getLocalNormal(normalMapTexture, useNormalMap, interpolatedUv);\\n            float normalSign = getNormalSign();\\n            vec3 originalNormal = normalize(interpolatedNormal) * normalSign;\\n            vec3 normalDirection = getMappedNormal(originalNormal, interpolatedTangent, normalSign, localNormal);\\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\\n        \\n            vec3 linearColor = physicalLighting(\\n                interpolatedPosition,\\n                normalDirection,\\n                baseColor,\\n                directionToCamera,\\n                viewMatrix,\\n                roughness,\\n                metallic,\\n                lights12,\\n                lights34,\\n                lights56,\\n                lights78,\\n                enabledLights\\n            );\\n        \\n            gl_FragColor = toSrgb(linearColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {baseColorTexture: 'b8', constantBaseColor: 'ca', constantMetallic: 'cb', constantRoughness: 'cc', enabledLights: 'T', lights12: 'bd', lights34: 'bP', lights56: 'bQ', lights78: 'bR', metallicTexture: 'cs', normalMapTexture: 'aV', roughnessTexture: 'cM', sceneProperties: 'e', useNormalMap: 'a_', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedPhysicalMesh = function (baseColorData) {\n\treturn function (constantBaseColor) {\n\t\treturn function (roughnessData) {\n\t\t\treturn function (constantRoughness) {\n\t\t\t\treturn function (metallicData) {\n\t\t\t\t\treturn function (constantMetallic) {\n\t\t\t\t\t\treturn function (normalMapData) {\n\t\t\t\t\t\t\treturn function (useNormalMap) {\n\t\t\t\t\t\t\t\treturn function (bounds) {\n\t\t\t\t\t\t\t\t\treturn function (webGLMesh) {\n\t\t\t\t\t\t\t\t\t\treturn function (backFaceSetting) {\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\t\t\t\t\t\t\t\t\t\tbounds,\n\t\t\t\t\t\t\t\t\t\t\t\tF8(\n\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$normalMappedVertex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalTexturesFragment,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{b8: baseColorData, ca: constantBaseColor, cb: constantMetallic, cc: constantRoughness, T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, cs: metallicData, b: modelMatrix, c: modelScale, aV: normalMapData, d: projectionMatrix, cM: roughnessData, e: sceneProperties, a_: useNormalMap, f: viewMatrix});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalFragment = {\n\tsrc: '\\n        precision highp float;\\n        \\n        uniform highp mat4 sceneProperties;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 lights12;\\n        uniform highp mat4 lights34;\\n        uniform highp mat4 lights56;\\n        uniform highp mat4 lights78;\\n        uniform lowp vec4 enabledLights;\\n        uniform lowp vec3 baseColor;\\n        uniform lowp float roughness;\\n        uniform lowp float metallic;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        \\n        const lowp float kPerspectiveProjection = 0.0;\\n        const lowp float kOrthographicProjection = 1.0;\\n        const lowp float kDirectionalLight = 1.0;\\n        const lowp float kPointLight = 2.0;\\n        const highp float kPi = 3.14159265359;\\n        const mediump float kMediumpFloatMax = 65504.0;\\n        const lowp float kDisabledLight = 0.0;\\n        const lowp float kSoftLighting = 3.0;\\n        \\n        float getNormalSign() {\\n            return 2.0 * float(gl_FrontFacing) - 1.0;\\n        }\\n        \\n        vec3 getDirectionToCamera(vec3 surfacePosition, mat4 sceneProperties) {\\n            float projectionType = sceneProperties[1].w;\\n            if (projectionType == kPerspectiveProjection) {\\n                vec3 cameraPoint = sceneProperties[1].xyz;\\n                return normalize(cameraPoint - surfacePosition);\\n            } else if (projectionType == kOrthographicProjection) {\\n                return sceneProperties[1].xyz;\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        void getDirectionToLightAndNormalIlluminance(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            out vec3 directionToLight,\\n            out vec3 normalIlluminance\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDirectionalLight) {\\n                directionToLight = xyz_type.xyz;\\n                normalIlluminance = rgb_parameter.rgb;\\n            } else if (lightType == kPointLight) {\\n                vec3 lightPosition = xyz_type.xyz;\\n                vec3 displacement = lightPosition - surfacePosition;\\n                float distance = length(displacement);\\n                directionToLight = displacement / distance;\\n                normalIlluminance = rgb_parameter.rgb / (4.0 * kPi * distance * distance);\\n            }\\n        }\\n        \\n        float positiveDotProduct(vec3 v1, vec3 v2) {\\n            return clamp(dot(v1, v2), 0.0, 1.0);\\n        }\\n        \\n        // Adapted from https://google.github.io/filament/Filament.md.html#materialsystem/specularbrdf/normaldistributionfunction(speculard)\\n        float specularD(float alpha, float dotNH, vec3 normalDirection, vec3 halfDirection) {\\n            vec3 crossNH = cross(normalDirection, halfDirection);\\n            float a = dotNH * alpha;\\n            float k = alpha / (dot(crossNH, crossNH) + a * a);\\n            float d = k * k * (1.0 / kPi);\\n            return min(d, kMediumpFloatMax);\\n        }\\n        \\n        float safeQuotient(float numerator, float denominator) {\\n            if (denominator == 0.0) {\\n                return 0.0;\\n            } else {\\n                return numerator / denominator;\\n            }\\n        }\\n        \\n        float g1(float dotNV, float alphaSquared) {\\n            return safeQuotient(2.0 * dotNV, dotNV + sqrt(alphaSquared + (1.0 - alphaSquared) * dotNV * dotNV));\\n        }\\n        \\n        float specularG(float dotNL, float dotNV, float alphaSquared) {\\n            return g1(dotNV, alphaSquared) * g1(dotNL, alphaSquared);\\n        }\\n        \\n        vec3 fresnelColor(vec3 specularBaseColor, float dotVH) {\\n            vec3 one = vec3(1.0, 1.0, 1.0);\\n            float scale = exp2((-5.55473 * dotVH - 6.98316) * dotVH);\\n            return specularBaseColor + (one - specularBaseColor) * scale;\\n        }\\n        \\n        vec3 brdf(vec3 normalDirection, vec3 directionToCamera, vec3 directionToLight, float alpha, float dotNV, float dotNL, vec3 specularBaseColor, vec3 normalIlluminance) {\\n            vec3 halfDirection = normalize(directionToCamera + directionToLight);\\n            float dotVH = positiveDotProduct(directionToCamera, halfDirection);\\n            float dotNH = positiveDotProduct(normalDirection, halfDirection);\\n            float dotNHSquared = dotNH * dotNH;\\n        \\n            float d = specularD(alpha, dotNH, normalDirection, halfDirection);\\n            float g = specularG(dotNL, dotNV, alpha * alpha);\\n            vec3 f = fresnelColor(specularBaseColor, dotVH);\\n            return safeQuotient(d * g, 4.0 * dotNL * dotNV) * f;\\n        }\\n        \\n        vec3 sampleFacetNormal(vec3 vH, vec3 vT1, vec3 vT2, float s, float alpha) {\\n            float t2 = (1.0 - s);\\n            vec3 vNh = t2 * vT2 + sqrt(max(0.0, 1.0 - t2 * t2)) * vH;\\n            return normalize(vec3(alpha * vNh.x, alpha * vNh.y, max(0.0, vNh.z)));\\n        }\\n        \\n        vec3 softLightingLuminance(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localLightDirection\\n        ) {\\n            float sinElevation = dot(localLightDirection, localUpDirection);\\n            float t = (sinElevation + 1.0) / 2.0;\\n            return aboveLuminance * t + belowLuminance * (1.0 - t);\\n        }\\n        \\n        vec3 softLightingSpecularSample(\\n            vec3 aboveLuminance,\\n            vec3 belowLuminance,\\n            vec3 localUpDirection,\\n            vec3 localViewDirection,\\n            vec3 localLightDirection,\\n            vec3 localHalfDirection,\\n            float alphaSquared,\\n            vec3 specularBaseColor\\n        ) {\\n            vec3 luminance = softLightingLuminance(aboveLuminance, belowLuminance, localUpDirection, localLightDirection);\\n            float dotVH = positiveDotProduct(localViewDirection, localHalfDirection);\\n            float dotNL = localLightDirection.z;\\n            return luminance * (fresnelColor(specularBaseColor, dotVH) * g1(dotNL, alphaSquared));\\n        }\\n        \\n        vec3 softLighting(\\n            vec3 normalDirection,\\n            vec3 diffuseBaseColor,\\n            vec3 specularBaseColor,\\n            float alpha,\\n            vec3 directionToCamera,\\n            vec3 viewY,\\n            vec4 xyz_type,\\n            vec4 rgb_parameter\\n        ) {\\n            float alphaSquared = alpha * alpha;\\n            vec3 upDirection = xyz_type.xyz;\\n            vec3 luminanceAbove = rgb_parameter.rgb;\\n            vec3 luminanceBelow = rgb_parameter.a * luminanceAbove;\\n            vec3 crossProduct = cross(normalDirection, directionToCamera);\\n            float crossMagnitude = length(crossProduct);\\n            vec3 xDirection = vec3(0.0, 0.0, 0.0);\\n            vec3 yDirection = vec3(0.0, 0.0, 0.0);\\n            if (crossMagnitude > 1.0e-6) {\\n                yDirection = (1.0 / crossMagnitude) * crossProduct;\\n                xDirection = cross(yDirection, normalDirection);\\n            } else {\\n                vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\\n                xDirection = normalize(cross(viewY, normalDirection));\\n                yDirection = cross(normalDirection, xDirection);\\n            }\\n            float localViewX = dot(directionToCamera, xDirection);\\n            float localViewZ = dot(directionToCamera, normalDirection);\\n            vec3 localViewDirection = vec3(localViewX, 0, localViewZ);\\n            float localUpX = dot(upDirection, xDirection);\\n            float localUpY = dot(upDirection, yDirection);\\n            float localUpZ = dot(upDirection, normalDirection);\\n            vec3 localUpDirection = vec3(localUpX, localUpY, localUpZ);\\n        \\n            vec3 vH = normalize(vec3(alpha * localViewX, 0.0, localViewZ));\\n            vec3 vT1 = vec3(0.0, 1.0, 0.0);\\n            vec3 vT2 = cross(vH, vT1);\\n            float s = 0.5 * (1.0 + vH.z);\\n            \\n            vec3 localHalfDirection = sampleFacetNormal(vH, vT1, vT2, s, alpha);\\n            vec3 localLightDirection = vec3(0.0, 0.0, 0.0);\\n            \\n            localLightDirection = -reflect(localViewDirection, localHalfDirection);\\n            vec3 specular = softLightingSpecularSample(luminanceAbove, luminanceBelow, localUpDirection, localViewDirection, localLightDirection, localHalfDirection, alphaSquared, specularBaseColor);\\n            \\n            localLightDirection = vec3(0.000000, 0.000000, 1.000000);\\n            vec3 diffuse = softLightingLuminance(luminanceAbove, luminanceBelow, localUpDirection, localLightDirection) * localLightDirection.z;\\n            \\n            return specular + diffuse * diffuseBaseColor;\\n        }\\n        \\n        vec3 physicalLight(\\n            vec4 xyz_type,\\n            vec4 rgb_parameter,\\n            vec3 surfacePosition,\\n            vec3 normalDirection,\\n            vec3 directionToCamera,\\n            vec3 viewY,\\n            float dotNV,\\n            vec3 diffuseBaseColor,\\n            vec3 specularBaseColor,\\n            float alpha\\n        ) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDisabledLight) {\\n                return vec3(0.0, 0.0, 0.0);\\n            } else if (lightType == kSoftLighting) {\\n                return softLighting(normalDirection, diffuseBaseColor, specularBaseColor, alpha, directionToCamera, viewY, xyz_type, rgb_parameter);\\n            }\\n        \\n            vec3 directionToLight = vec3(0.0, 0.0, 0.0);\\n            vec3 normalIlluminance = vec3(0.0, 0.0, 0.0);\\n            getDirectionToLightAndNormalIlluminance(xyz_type, rgb_parameter, surfacePosition, directionToLight, normalIlluminance);\\n        \\n            float dotNL = positiveDotProduct(normalDirection, directionToLight);\\n            vec3 specularColor = brdf(normalDirection, directionToCamera, directionToLight, alpha, dotNV, dotNL, specularBaseColor, normalIlluminance);\\n            return (normalIlluminance * dotNL) * ((diffuseBaseColor / kPi) + specularColor);\\n        }\\n        \\n        vec3 physicalLighting(\\n            vec3 surfacePosition,\\n            vec3 surfaceNormal,\\n            vec3 baseColor,\\n            vec3 directionToCamera,\\n            mat4 viewMatrix,\\n            float roughness,\\n            float metallic,\\n            mat4 lights12,\\n            mat4 lights34,\\n            mat4 lights56,\\n            mat4 lights78,\\n            vec4 enabledLights\\n        ) {\\n            float dotNV = positiveDotProduct(surfaceNormal, directionToCamera);\\n            float alpha = roughness * roughness;\\n            float nonmetallic = 1.0 - metallic;\\n            vec3 diffuseBaseColor = nonmetallic * 0.96 * baseColor;\\n            vec3 specularBaseColor = nonmetallic * 0.04 * vec3(1.0, 1.0, 1.0) + metallic * baseColor;\\n            vec3 viewY = vec3(viewMatrix[0][1], viewMatrix[1][1], viewMatrix[2][1]);\\n        \\n            vec3 litColor1 = enabledLights[0] == 1.0 ? physicalLight(lights12[0], lights12[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor2 = enabledLights[1] == 1.0 ? physicalLight(lights12[2], lights12[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor3 = enabledLights[2] == 1.0 ? physicalLight(lights34[0], lights34[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor4 = enabledLights[3] == 1.0 ? physicalLight(lights34[2], lights34[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha) : vec3(0.0, 0.0, 0.0);\\n            vec3 litColor5 = physicalLight(lights56[0], lights56[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor6 = physicalLight(lights56[2], lights56[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor7 = physicalLight(lights78[0], lights78[1], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            vec3 litColor8 = physicalLight(lights78[2], lights78[3], surfacePosition, surfaceNormal, directionToCamera, viewY, dotNV, diffuseBaseColor, specularBaseColor, alpha);\\n            return litColor1 + litColor2 + litColor3 + litColor4 + litColor5 + litColor6 + litColor7 + litColor8;\\n        }\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main() {\\n            vec3 normalDirection = normalize(interpolatedNormal) * getNormalSign();\\n            vec3 directionToCamera = getDirectionToCamera(interpolatedPosition, sceneProperties);\\n        \\n            vec3 linearColor = physicalLighting(\\n                interpolatedPosition,\\n                normalDirection,\\n                baseColor,\\n                directionToCamera,\\n                viewMatrix,\\n                roughness,\\n                metallic,\\n                lights12,\\n                lights34,\\n                lights56,\\n                lights78,\\n                enabledLights\\n            );\\n        \\n            gl_FragColor = toSrgb(linearColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {baseColor: 'ee', enabledLights: 'T', lights12: 'bd', lights34: 'bP', lights56: 'bQ', lights78: 'bR', metallic: 'cr', roughness: 'eX', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh = F6(\n\tfunction (color, roughness, metallic, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$uniformVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{ee: color, T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, cr: metallic, b: modelMatrix, c: modelScale, d: projectionMatrix, eX: roughness, e: sceneProperties, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$ConstantLambertianMaterial = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedLambertianMaterial = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple = F2(\n\tfunction (fallbackData, channel) {\n\t\tif (!channel.$) {\n\t\t\tvar _v1 = channel.a;\n\t\t\treturn _Utils_Tuple2(fallbackData, 0.0);\n\t\t} else {\n\t\t\tvar data = channel.a.D;\n\t\t\treturn _Utils_Tuple2(data, 1.0);\n\t\t}\n\t});\nvar $elm_explorations$linear_algebra$Math$Vector3$getX = _MJS_v3getX;\nvar $elm_explorations$linear_algebra$Math$Vector3$getY = _MJS_v3getY;\nvar $elm_explorations$linear_algebra$Math$Vector3$getZ = _MJS_v3getZ;\nvar $elm_explorations$linear_algebra$Math$Vector4$vec4 = _MJS_v4;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$enabledVec3 = function (vector) {\n\treturn A4(\n\t\t$elm_explorations$linear_algebra$Math$Vector4$vec4,\n\t\t$elm_explorations$linear_algebra$Math$Vector3$getX(vector),\n\t\t$elm_explorations$linear_algebra$Math$Vector3$getY(vector),\n\t\t$elm_explorations$linear_algebra$Math$Vector3$getZ(vector),\n\t\t1);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec4 = A4($elm_explorations$linear_algebra$Math$Vector4$vec4, 0, 0, 0, 0);\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple = F2(\n\tfunction (fallbackData, texture) {\n\t\tif (!texture.$) {\n\t\t\tvar baseColor = texture.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfallbackData,\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$enabledVec3(baseColor));\n\t\t} else {\n\t\t\tvar data = texture.a.D;\n\t\t\treturn _Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec4);\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$resolveLambertian = F2(\n\tfunction (materialColorTexture, normalMapTexture) {\n\t\tvar _v0 = _Utils_Tuple2(materialColorTexture, normalMapTexture);\n\t\tif (!_v0.a.$) {\n\t\t\tif (!_v0.b.$) {\n\t\t\t\tvar materialColor = _v0.a.a;\n\t\t\t\tvar _v1 = _v0.b.a;\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$ConstantLambertianMaterial(materialColor);\n\t\t\t} else {\n\t\t\t\tvar data = _v0.b.a.D;\n\t\t\t\treturn A2(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedLambertianMaterial,\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple, data, materialColorTexture),\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple, data, normalMapTexture));\n\t\t\t}\n\t\t} else {\n\t\t\tvar data = _v0.a.a.D;\n\t\t\treturn A2(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedLambertianMaterial,\n\t\t\t\t_Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec4),\n\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple, data, normalMapTexture));\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$ConstantPbrMaterial = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 1, a: a, b: b, c: c, d: d};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$Tuple4 = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm_explorations$linear_algebra$Math$Vector2$vec2 = _MJS_v2;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$enabledFloat = function (value) {\n\treturn A2($elm_explorations$linear_algebra$Math$Vector2$vec2, value, 1);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec2 = A2($elm_explorations$linear_algebra$Math$Vector2$vec2, 0, 0);\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple = F2(\n\tfunction (fallbackData, texture) {\n\t\tif (!texture.$) {\n\t\t\tvar value = texture.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfallbackData,\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$enabledFloat(value));\n\t\t} else {\n\t\t\tvar data = texture.a.D;\n\t\t\treturn _Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec2);\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$resolvePbr = F4(\n\tfunction (baseColorTexture, roughnessTexture, metallicTexture, normalMapTexture) {\n\t\tvar _v0 = A4($ianmackenzie$elm_3d_scene$Scene3d$Entity$Tuple4, baseColorTexture, roughnessTexture, metallicTexture, normalMapTexture);\n\t\tif (!_v0.a.$) {\n\t\t\tif (!_v0.b.$) {\n\t\t\t\tif (!_v0.c.$) {\n\t\t\t\t\tif (!_v0.d.$) {\n\t\t\t\t\t\tvar baseColor = _v0.a.a;\n\t\t\t\t\t\tvar roughness = _v0.b.a;\n\t\t\t\t\t\tvar metallic = _v0.c.a;\n\t\t\t\t\t\tvar _v1 = _v0.d.a;\n\t\t\t\t\t\treturn A3($ianmackenzie$elm_3d_scene$Scene3d$Entity$ConstantPbrMaterial, baseColor, roughness, metallic);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar data = _v0.d.a.D;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial,\n\t\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple, data, baseColorTexture),\n\t\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, roughnessTexture),\n\t\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, metallicTexture),\n\t\t\t\t\t\t\t_Utils_Tuple2(data, 1.0));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar data = _v0.c.a.D;\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial,\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple, data, baseColorTexture),\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, roughnessTexture),\n\t\t\t\t\t\t_Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec2),\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple, data, normalMapTexture));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar data = _v0.b.a.D;\n\t\t\t\treturn A4(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial,\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$vec3Tuple, data, baseColorTexture),\n\t\t\t\t\t_Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec2),\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, metallicTexture),\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple, data, normalMapTexture));\n\t\t\t}\n\t\t} else {\n\t\t\tvar data = _v0.a.a.D;\n\t\t\treturn A4(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$TexturedPbrMaterial,\n\t\t\t\t_Utils_Tuple2(data, $ianmackenzie$elm_3d_scene$Scene3d$Entity$zeroVec4),\n\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, roughnessTexture),\n\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$floatTuple, data, metallicTexture),\n\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMapTuple, data, normalMapTexture));\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveTextureFragment = {\n\tsrc: '\\n        precision mediump float;\\n        \\n        uniform mediump sampler2D colorTexture;\\n        uniform mediump float backlight;\\n        uniform highp mat4 sceneProperties;\\n        \\n        varying mediump vec2 interpolatedUv;\\n        \\n        float inverseGamma(float u) {\\n            if (u <= 0.04045) {\\n                return clamp(u / 12.92, 0.0, 1.0);\\n            } else {\\n                return clamp(pow((u + 0.055) / 1.055, 2.4), 0.0, 1.0);\\n            }\\n        }\\n        \\n        vec3 fromSrgb(vec3 srgbColor) {\\n            return vec3(\\n                inverseGamma(srgbColor.r),\\n                inverseGamma(srgbColor.g),\\n                inverseGamma(srgbColor.b)\\n            );\\n        }\\n        \\n        float gammaCorrect(float u) {\\n            if (u <= 0.0031308) {\\n                return 12.92 * u;\\n            } else {\\n                return 1.055 * pow(u, 1.0 / 2.4) - 0.055;\\n            }\\n        }\\n        \\n        vec3 gammaCorrectedColor(vec3 color) {\\n            float red = gammaCorrect(color.r);\\n            float green = gammaCorrect(color.g);\\n            float blue = gammaCorrect(color.b);\\n            return vec3(red, green, blue);\\n        }\\n        \\n        vec3 reinhardLuminanceToneMap(vec3 color) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scale = 1.0 / (1.0 + luminance);\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 reinhardPerChannelToneMap(vec3 color) {\\n            return gammaCorrectedColor(color / (color + 1.0));\\n        }\\n        \\n        float extendedReinhardToneMap(float x, float xMax) {\\n            return x * (1.0 + (x / (xMax * xMax))) / (1.0 + x);\\n        }\\n        \\n        vec3 extendedReinhardLuminanceToneMap(vec3 color, float overexposureLimit) {\\n            float luminance = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;\\n            float scaledLuminance = extendedReinhardToneMap(luminance, overexposureLimit);\\n            float scale = scaledLuminance / luminance;\\n            return gammaCorrectedColor(color * scale);\\n        }\\n        \\n        vec3 extendedReinhardPerChannelToneMap(vec3 color, float overexposureLimit) {\\n            float red = extendedReinhardToneMap(color.r, overexposureLimit);\\n            float green = extendedReinhardToneMap(color.g, overexposureLimit);\\n            float blue = extendedReinhardToneMap(color.b, overexposureLimit);\\n            return gammaCorrectedColor(vec3(red, green, blue));\\n        }\\n        \\n        vec3 hableFilmicHelper(vec3 color) {\\n            float a = 0.15;\\n            float b = 0.5;\\n            float c = 0.1;\\n            float d = 0.2;\\n            float e = 0.02;\\n            float f = 0.3;\\n            return (color * (a * color + c * b) + d * e) / (color * (a * color + b) + d * f) - e / f;\\n        }\\n        \\n        vec3 hableFilmicToneMap(vec3 color) {\\n            float exposureBias = 2.0;\\n            vec3 unscaled = hableFilmicHelper(exposureBias * color);\\n            vec3 scale = 1.0 / hableFilmicHelper(vec3(11.2));\\n            return gammaCorrectedColor(scale * unscaled);\\n        }\\n        \\n        vec3 toneMap(vec3 color, float toneMapType, float toneMapParam) {\\n            if (toneMapType == 0.0) {\\n                return gammaCorrectedColor(color);\\n            } else if (toneMapType == 1.0) {\\n                return reinhardLuminanceToneMap(color);\\n            } else if (toneMapType == 2.0) {\\n                return reinhardPerChannelToneMap(color);\\n            } else if (toneMapType == 3.0) {\\n                return extendedReinhardLuminanceToneMap(color, toneMapParam);\\n            } else if (toneMapType == 4.0) {\\n                return extendedReinhardPerChannelToneMap(color, toneMapParam);\\n            } else if (toneMapType == 5.0) {\\n                return hableFilmicToneMap(color);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 toSrgb(vec3 linearColor, mat4 sceneProperties) {\\n            vec3 referenceWhite = sceneProperties[2].rgb;\\n            float unitR = linearColor.r / referenceWhite.r;\\n            float unitG = linearColor.g / referenceWhite.g;\\n            float unitB = linearColor.b / referenceWhite.b;\\n            float toneMapType = sceneProperties[3][2];\\n            float toneMapParam = sceneProperties[3][3];\\n            vec3 toneMapped = toneMap(vec3(unitR, unitG, unitB), toneMapType, toneMapParam);\\n            return vec4(toneMapped, 1.0);\\n        }\\n        \\n        void main () {\\n            vec3 emissiveColor = fromSrgb(texture2D(colorTexture, interpolatedUv).rgb) * backlight;\\n            gl_FragColor = toSrgb(emissiveColor, sceneProperties);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {backlight: 'b6', colorTexture: 'bH', sceneProperties: 'e'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedEmissiveMesh = F5(\n\tfunction (colorData, backlight, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$unlitVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$emissiveTextureFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tb6: $ianmackenzie$elm_units$Luminance$inNits(backlight),\n\t\t\t\t\t\t\tbH: colorData,\n\t\t\t\t\t\t\tb: modelMatrix,\n\t\t\t\t\t\t\tc: modelScale,\n\t\t\t\t\t\t\td: projectionMatrix,\n\t\t\t\t\t\t\te: sceneProperties,\n\t\t\t\t\t\t\tf: viewMatrix\n\t\t\t\t\t\t});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$texturedVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        attribute highp vec3 normal;\\n        attribute mediump vec2 uv;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        \\n        varying highp vec3 interpolatedPosition;\\n        varying highp vec3 interpolatedNormal;\\n        varying mediump vec2 interpolatedUv;\\n        varying highp vec3 interpolatedTangent;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        vec3 safeNormalize(vec3 vector) {\\n            if (vector == vec3(0.0, 0.0, 0.0)) {\\n                return vector;\\n            } else {\\n                return normalize(vector);\\n            }\\n        }\\n        \\n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\\n        }\\n        \\n        void main () {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            gl_Position = projectionMatrix * (viewMatrix * worldPosition);\\n            interpolatedPosition = worldPosition.xyz;\\n            interpolatedNormal = getWorldNormal(normal, modelScale, modelMatrix);\\n            interpolatedUv = uv;\\n            interpolatedTangent = vec3(0.0, 0.0, 0.0);\\n        }\\n    ',\n\tattributes: {normal: 'p', position: 'bZ', uv: 'M'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedLambertianMesh = F4(\n\tfunction (materialColorData, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$texturedVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$lambertianTextureFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, cp: materialColorData, b: modelMatrix, c: modelScale, aV: materialColorData, d: projectionMatrix, e: sceneProperties, a_: 0.0, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedPhysicalMesh = F9(\n\tfunction (baseColorData, constantBaseColor, roughnessData, constantRoughness, metallicData, constantMetallic, bounds, webGLMesh, backFaceSetting) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\tbounds,\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, _v0, settings) {\n\t\t\t\t\tvar lights = _v0.a;\n\t\t\t\t\tvar enabledLights = _v0.b;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$Entity$meshSettings, isRightHanded, backFaceSetting, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$texturedVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$physicalTexturesFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{b8: baseColorData, ca: constantBaseColor, cb: constantMetallic, cc: constantRoughness, T: enabledLights, bd: lights.bd, bP: lights.bP, bQ: lights.bQ, bR: lights.bR, cs: metallicData, b: modelMatrix, c: modelScale, aV: baseColorData, d: projectionMatrix, cM: roughnessData, e: sceneProperties, a_: 0.0, f: viewMatrix});\n\t\t\t\t}));\n\t});\nvar $ianmackenzie$elm_units$Quantity$interpolateFrom = F3(\n\tfunction (_v0, _v1, parameter) {\n\t\tvar start = _v0;\n\t\tvar end = _v1;\n\t\treturn (parameter <= 0.5) ? (start + (parameter * (end - start))) : (end + ((1 - parameter) * (start - end)));\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$midX = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn A3($ianmackenzie$elm_units$Quantity$interpolateFrom, boundingBox.dD, boundingBox.dA, 0.5);\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$midY = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn A3($ianmackenzie$elm_units$Quantity$interpolateFrom, boundingBox.dE, boundingBox.dB, 0.5);\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$midZ = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn A3($ianmackenzie$elm_units$Quantity$interpolateFrom, boundingBox.dF, boundingBox.dC, 0.5);\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$centerPoint = function (boundingBox) {\n\treturn A3(\n\t\t$ianmackenzie$elm_geometry$Point3d$xyz,\n\t\t$ianmackenzie$elm_geometry$BoundingBox3d$midX(boundingBox),\n\t\t$ianmackenzie$elm_geometry$BoundingBox3d$midY(boundingBox),\n\t\t$ianmackenzie$elm_geometry$BoundingBox3d$midZ(boundingBox));\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$maxX = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dA;\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$maxY = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dB;\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$maxZ = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dC;\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$minX = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dD;\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$minY = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dE;\n};\nvar $ianmackenzie$elm_geometry$BoundingBox3d$minZ = function (_v0) {\n\tvar boundingBox = _v0;\n\treturn boundingBox.dF;\n};\nvar $ianmackenzie$elm_units$Quantity$minus = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn x - y;\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$dimensions = function (boundingBox) {\n\treturn _Utils_Tuple3(\n\t\tA2(\n\t\t\t$ianmackenzie$elm_units$Quantity$minus,\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$minX(boundingBox),\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$maxX(boundingBox)),\n\t\tA2(\n\t\t\t$ianmackenzie$elm_units$Quantity$minus,\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$minY(boundingBox),\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$maxY(boundingBox)),\n\t\tA2(\n\t\t\t$ianmackenzie$elm_units$Quantity$minus,\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$minZ(boundingBox),\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$maxZ(boundingBox)));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds = function (boundingBox) {\n\tvar _v0 = $ianmackenzie$elm_geometry$BoundingBox3d$dimensions(boundingBox);\n\tvar xDimension = _v0.a;\n\tvar yDimension = _v0.b;\n\tvar zDimension = _v0.c;\n\treturn {\n\t\tei: $ianmackenzie$elm_geometry$Point3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$centerPoint(boundingBox)),\n\t\teB: xDimension / 2,\n\t\teC: yDimension / 2,\n\t\teD: zDimension / 2\n\t};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$mesh = F2(\n\tfunction (givenMaterial, givenMesh) {\n\t\tswitch (givenMaterial.$) {\n\t\t\tcase 0:\n\t\t\t\tif (!givenMaterial.b.$) {\n\t\t\t\t\tvar color = givenMaterial.b.a;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\t0);\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\t0);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar radius = givenMesh.b;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$constantPointMesh,\n\t\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\t\tradius,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v2 = givenMaterial.a;\n\t\t\t\t\tvar data = givenMaterial.b.a.D;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$colorTextureMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$colorTextureMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$colorTextureMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 1:\n\t\t\t\tif (!givenMaterial.b.$) {\n\t\t\t\t\tvar emissiveColor = givenMaterial.b.a;\n\t\t\t\t\tvar backlight = givenMaterial.c;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\t0);\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissiveMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\t0);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar radius = givenMesh.b;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$emissivePointMesh,\n\t\t\t\t\t\t\t\temissiveColor,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\tradius,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v5 = givenMaterial.a;\n\t\t\t\t\tvar data = givenMaterial.b.a.D;\n\t\t\t\t\tvar backlight = givenMaterial.c;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedEmissiveMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedEmissiveMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedEmissiveMesh,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tbacklight,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 2:\n\t\t\t\tvar _v7 = givenMaterial.a;\n\t\t\t\tvar materialColorTexture = givenMaterial.b;\n\t\t\t\tvar normalMapTexture = givenMaterial.c;\n\t\t\t\tvar _v8 = A2($ianmackenzie$elm_3d_scene$Scene3d$Entity$resolveLambertian, materialColorTexture, normalMapTexture);\n\t\t\t\tif (!_v8.$) {\n\t\t\t\t\tvar materialColor = _v8.a;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$lambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColor,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v10 = _v8.a;\n\t\t\t\t\tvar materialColorData = _v10.a;\n\t\t\t\t\tvar constantMaterialColor = _v10.b;\n\t\t\t\t\tvar _v11 = _v8.b;\n\t\t\t\t\tvar normalMapData = _v11.a;\n\t\t\t\t\tvar useNormalMap = _v11.b;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedLambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColorData,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar cullBackFaces = givenMesh.d;\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedLambertianMesh,\n\t\t\t\t\t\t\t\tmaterialColorData,\n\t\t\t\t\t\t\t\tnormalMapData,\n\t\t\t\t\t\t\t\tuseNormalMap,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tcullBackFaces);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar _v13 = givenMaterial.a;\n\t\t\t\tvar baseColorTexture = givenMaterial.b;\n\t\t\t\tvar roughnessTexture = givenMaterial.c;\n\t\t\t\tvar metallicTexture = givenMaterial.d;\n\t\t\t\tvar normalMapTexture = givenMaterial.e;\n\t\t\t\tvar _v14 = A4($ianmackenzie$elm_3d_scene$Scene3d$Entity$resolvePbr, baseColorTexture, roughnessTexture, metallicTexture, normalMapTexture);\n\t\t\t\tif (!_v14.$) {\n\t\t\t\t\tvar baseColor = _v14.a;\n\t\t\t\t\tvar roughness = _v14.b;\n\t\t\t\t\tvar metallic = _v14.c;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh,\n\t\t\t\t\t\t\t\tbaseColor,\n\t\t\t\t\t\t\t\troughness,\n\t\t\t\t\t\t\t\tmetallic,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh,\n\t\t\t\t\t\t\t\tbaseColor,\n\t\t\t\t\t\t\t\troughness,\n\t\t\t\t\t\t\t\tmetallic,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh,\n\t\t\t\t\t\t\t\tbaseColor,\n\t\t\t\t\t\t\t\troughness,\n\t\t\t\t\t\t\t\tmetallic,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$physicalMesh,\n\t\t\t\t\t\t\t\tbaseColor,\n\t\t\t\t\t\t\t\troughness,\n\t\t\t\t\t\t\t\tmetallic,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar _v16 = _v14.a;\n\t\t\t\t\tvar baseColorData = _v16.a;\n\t\t\t\t\tvar constantBaseColor = _v16.b;\n\t\t\t\t\tvar _v17 = _v14.b;\n\t\t\t\t\tvar roughnessData = _v17.a;\n\t\t\t\t\tvar constantRoughness = _v17.b;\n\t\t\t\t\tvar _v18 = _v14.c;\n\t\t\t\t\tvar metallicData = _v18.a;\n\t\t\t\t\tvar constantMetallic = _v18.b;\n\t\t\t\t\tvar _v19 = _v14.d;\n\t\t\t\t\tvar normalMapData = _v19.a;\n\t\t\t\t\tvar useNormalMap = _v19.b;\n\t\t\t\t\tswitch (givenMesh.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn A9(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$texturedPhysicalMesh,\n\t\t\t\t\t\t\t\tbaseColorData,\n\t\t\t\t\t\t\t\tconstantBaseColor,\n\t\t\t\t\t\t\t\troughnessData,\n\t\t\t\t\t\t\t\tconstantRoughness,\n\t\t\t\t\t\t\t\tmetallicData,\n\t\t\t\t\t\t\t\tconstantMetallic,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox),\n\t\t\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t\t\tbackFaceSetting);\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\tvar boundingBox = givenMesh.a;\n\t\t\t\t\t\t\tvar webGLMesh = givenMesh.c;\n\t\t\t\t\t\t\tvar backFaceSetting = givenMesh.d;\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$normalMappedPhysicalMesh(baseColorData)(constantBaseColor)(roughnessData)(constantRoughness)(metallicData)(constantMetallic)(normalMapData)(useNormalMap)(\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$toBounds(boundingBox))(webGLMesh)(backFaceSetting);\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tcase 9:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_geometry$Direction3d$xComponent = function (_v0) {\n\tvar d = _v0;\n\treturn d.d6;\n};\nvar $ianmackenzie$elm_geometry$Direction3d$yComponent = function (_v0) {\n\tvar d = _v0;\n\treturn d.d7;\n};\nvar $ianmackenzie$elm_geometry$Direction3d$zComponent = function (_v0) {\n\tvar d = _v0;\n\treturn d.b5;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$isRightHanded = function (_v0) {\n\tvar frame = _v0;\n\tvar i = $ianmackenzie$elm_geometry$Direction3d$zComponent(frame.cX);\n\tvar h = $ianmackenzie$elm_geometry$Direction3d$yComponent(frame.cX);\n\tvar g = $ianmackenzie$elm_geometry$Direction3d$xComponent(frame.cX);\n\tvar f = $ianmackenzie$elm_geometry$Direction3d$zComponent(frame.cW);\n\tvar e = $ianmackenzie$elm_geometry$Direction3d$yComponent(frame.cW);\n\tvar d = $ianmackenzie$elm_geometry$Direction3d$xComponent(frame.cW);\n\tvar c = $ianmackenzie$elm_geometry$Direction3d$zComponent(frame.cV);\n\tvar b = $ianmackenzie$elm_geometry$Direction3d$yComponent(frame.cV);\n\tvar a = $ianmackenzie$elm_geometry$Direction3d$xComponent(frame.cV);\n\treturn (((((((a * e) * i) + ((b * f) * g)) + ((c * d) * h)) - ((c * e) * g)) - ((b * d) * i)) - ((a * f) * h)) > 0;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$originPoint = function (_v0) {\n\tvar properties = _v0;\n\treturn properties.cw;\n};\nvar $ianmackenzie$elm_geometry$Direction3d$unwrap = function (_v0) {\n\tvar coordinates = _v0;\n\treturn coordinates;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$xDirection = function (_v0) {\n\tvar properties = _v0;\n\treturn properties.cV;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$yDirection = function (_v0) {\n\tvar properties = _v0;\n\treturn properties.cW;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$zDirection = function (_v0) {\n\tvar properties = _v0;\n\treturn properties.cX;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$placeIn = function (frame) {\n\tvar p0 = $ianmackenzie$elm_geometry$Point3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$originPoint(frame));\n\tvar k = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$zDirection(frame));\n\tvar j = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$yDirection(frame));\n\tvar i = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$xDirection(frame));\n\treturn {\n\t\tda: $ianmackenzie$elm_geometry$Frame3d$isRightHanded(frame),\n\t\tr: i.d6,\n\t\ts: i.d7,\n\t\tt: i.b5,\n\t\tu: j.d6,\n\t\tv: j.d7,\n\t\tw: j.b5,\n\t\tx: k.d6,\n\t\ty: k.d7,\n\t\tz: k.b5,\n\t\tI: p0.d6,\n\t\tJ: p0.d7,\n\t\tK: p0.b5,\n\t\tb2: 1\n\t};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 5, a: a, b: b};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$compose = F2(\n\tfunction (t1, t2) {\n\t\treturn {\n\t\t\tda: _Utils_eq(t1.da, t2.da),\n\t\t\tr: ((t1.r * t2.r) + (t1.s * t2.u)) + (t1.t * t2.x),\n\t\t\ts: ((t1.r * t2.s) + (t1.s * t2.v)) + (t1.t * t2.y),\n\t\t\tt: ((t1.r * t2.t) + (t1.s * t2.w)) + (t1.t * t2.z),\n\t\t\tu: ((t1.u * t2.r) + (t1.v * t2.u)) + (t1.w * t2.x),\n\t\t\tv: ((t1.u * t2.s) + (t1.v * t2.v)) + (t1.w * t2.y),\n\t\t\tw: ((t1.u * t2.t) + (t1.v * t2.w)) + (t1.w * t2.z),\n\t\t\tx: ((t1.x * t2.r) + (t1.y * t2.u)) + (t1.z * t2.x),\n\t\t\ty: ((t1.x * t2.s) + (t1.y * t2.v)) + (t1.z * t2.y),\n\t\t\tz: ((t1.x * t2.t) + (t1.y * t2.w)) + (t1.z * t2.z),\n\t\t\tI: t2.I + ((((t1.I * t2.r) + (t1.J * t2.u)) + (t1.K * t2.x)) * t2.b2),\n\t\t\tJ: t2.J + ((((t1.I * t2.s) + (t1.J * t2.v)) + (t1.K * t2.y)) * t2.b2),\n\t\t\tK: t2.K + ((((t1.I * t2.t) + (t1.J * t2.w)) + (t1.K * t2.z)) * t2.b2),\n\t\t\tb2: t1.b2 * t2.b2\n\t\t};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$transformBy = F2(\n\tfunction (transformation, _v0) {\n\t\tvar node = _v0;\n\t\tswitch (node.$) {\n\t\t\tcase 0:\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\tcase 5:\n\t\t\t\tvar existingTransformation = node.a;\n\t\t\t\tvar underlyingNode = node.b;\n\t\t\t\tvar compositeTransformation = A2($ianmackenzie$elm_3d_scene$Scene3d$Transformation$compose, existingTransformation, transformation);\n\t\t\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed, compositeTransformation, underlyingNode);\n\t\t\tcase 1:\n\t\t\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed, transformation, node);\n\t\t\tcase 3:\n\t\t\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed, transformation, node);\n\t\t\tcase 2:\n\t\t\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed, transformation, node);\n\t\t\tdefault:\n\t\t\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed, transformation, node);\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$placeIn = F2(\n\tfunction (frame, givenDrawable) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$transformBy,\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Transformation$placeIn(frame),\n\t\t\tgivenDrawable);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$ShadowNode = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleBounds = F2(\n\tfunction (_v0, bounds) {\n\t\tvar scaleX = _v0.a;\n\t\tvar scaleY = _v0.b;\n\t\tvar scaleZ = _v0.c;\n\t\tvar originalCenterPoint = bounds.ei;\n\t\treturn {\n\t\t\tei: {d6: scaleX * originalCenterPoint.d6, d7: scaleY * originalCenterPoint.d7, b5: scaleZ * originalCenterPoint.b5},\n\t\t\teB: scaleX * bounds.eB,\n\t\t\teC: scaleY * bounds.eC,\n\t\t\teD: scaleZ * bounds.eD\n\t\t};\n\t});\nvar $elm_explorations$linear_algebra$Math$Vector4$fromRecord = _MJS_v4fromRecord;\nvar $elm_explorations$linear_algebra$Math$Vector4$toRecord = _MJS_v4toRecord;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleDrawFunction = function (_v0) {\n\treturn function (originalDrawFunction) {\n\t\treturn function (sceneProperties) {\n\t\t\treturn function (modelScale) {\n\t\t\t\treturn function (modelMatrix) {\n\t\t\t\t\treturn function (isRightHanded) {\n\t\t\t\t\t\treturn function (viewMatrix) {\n\t\t\t\t\t\t\treturn function (projectionMatrix) {\n\t\t\t\t\t\t\t\treturn function (lights) {\n\t\t\t\t\t\t\t\t\treturn function (settings) {\n\t\t\t\t\t\t\t\t\t\tvar scaleX = _v0.a;\n\t\t\t\t\t\t\t\t\t\tvar scaleY = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar scaleZ = _v0.c;\n\t\t\t\t\t\t\t\t\t\tvar _v1 = $elm_explorations$linear_algebra$Math$Vector4$toRecord(modelScale);\n\t\t\t\t\t\t\t\t\t\tvar x = _v1.d6;\n\t\t\t\t\t\t\t\t\t\tvar y = _v1.d7;\n\t\t\t\t\t\t\t\t\t\tvar z = _v1.b5;\n\t\t\t\t\t\t\t\t\t\tvar w = _v1.d5;\n\t\t\t\t\t\t\t\t\t\tvar updatedModelScale = $elm_explorations$linear_algebra$Math$Vector4$fromRecord(\n\t\t\t\t\t\t\t\t\t\t\t{d5: w, d6: x * scaleX, d7: y * scaleY, b5: z * scaleZ});\n\t\t\t\t\t\t\t\t\t\treturn A8(originalDrawFunction, sceneProperties, updatedModelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, lights, settings);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleNode = F2(\n\tfunction (scalingFactors, node) {\n\t\tswitch (node.$) {\n\t\t\tcase 0:\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$EmptyNode;\n\t\t\tcase 5:\n\t\t\t\tvar transformation = node.a;\n\t\t\t\tvar underlyingNode = node.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Transformed,\n\t\t\t\t\ttransformation,\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleNode, scalingFactors, underlyingNode));\n\t\t\tcase 1:\n\t\t\t\tvar bounds = node.a;\n\t\t\t\tvar drawFunction = node.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$MeshNode,\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleBounds, scalingFactors, bounds),\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleDrawFunction, scalingFactors, drawFunction));\n\t\t\tcase 3:\n\t\t\t\treturn node;\n\t\t\tcase 2:\n\t\t\t\tvar drawFunction = node.a;\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$ShadowNode(\n\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleDrawFunction, scalingFactors, drawFunction));\n\t\t\tdefault:\n\t\t\t\tvar childNodes = node.a;\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$Group(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleNode(scalingFactors),\n\t\t\t\t\t\tchildNodes));\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$preScale = F2(\n\tfunction (scalingFactors, _v0) {\n\t\tvar node = _v0;\n\t\treturn A2($ianmackenzie$elm_3d_scene$Scene3d$Entity$preScaleNode, scalingFactors, node);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowFragment = {\n\tsrc: '\\n        precision lowp float;\\n        \\n        void main () {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {}\n};\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$Test = $elm$core$Basics$identity;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$always = 519;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$Operation = $elm$core$Basics$identity;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$decrement = 7683;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$increment = 7682;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$keep = 7680;\nvar $elm_explorations$webgl$WebGL$Internal$StencilTest = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn function (k) {\n\t\t\t\t\t\t\t\t\t\t\treturn {$: 2, a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, j: j, k: k};\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$testSeparate = F3(\n\tfunction (_v0, options1, options2) {\n\t\tvar ref = _v0.cJ;\n\t\tvar mask = _v0.cn;\n\t\tvar writeMask = _v0.cU;\n\t\tvar expandTest = F2(\n\t\t\tfunction (_v2, fn) {\n\t\t\t\tvar expandedTest = _v2;\n\t\t\t\treturn fn(expandedTest);\n\t\t\t});\n\t\tvar expandOp = F2(\n\t\t\tfunction (_v1, fn) {\n\t\t\t\tvar op = _v1;\n\t\t\t\treturn fn(op);\n\t\t\t});\n\t\tvar expand = function (options) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\texpandTest(options.bp),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\texpandOp(options.a8),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\t\t\texpandOp(options.by),\n\t\t\t\t\t\texpandOp(options.bz))));\n\t\t};\n\t\treturn A2(\n\t\t\texpand,\n\t\t\toptions2,\n\t\t\tA2(\n\t\t\t\texpand,\n\t\t\t\toptions1,\n\t\t\t\tA3($elm_explorations$webgl$WebGL$Internal$StencilTest, ref, mask, writeMask)));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$leftHandedStencilTest = A3(\n\t$elm_explorations$webgl$WebGL$Settings$StencilTest$testSeparate,\n\t{cn: 0, cJ: 0, cU: 15},\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$decrement},\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$increment});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$rightHandedStencilTest = A3(\n\t$elm_explorations$webgl$WebGL$Settings$StencilTest$testSeparate,\n\t{cn: 0, cJ: 0, cU: 15},\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$increment},\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$decrement});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowSettings = F2(\n\tfunction (isRightHanded, settings) {\n\t\treturn isRightHanded ? A2($elm$core$List$cons, $ianmackenzie$elm_3d_scene$Scene3d$Entity$rightHandedStencilTest, settings) : A2($elm$core$List$cons, $ianmackenzie$elm_3d_scene$Scene3d$Entity$leftHandedStencilTest, settings);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowVertex = {\n\tsrc: '\\n        precision highp float;\\n        \\n        attribute highp vec3 position;\\n        attribute highp vec3 normal;\\n        \\n        uniform highp vec4 modelScale;\\n        uniform highp mat4 modelMatrix;\\n        uniform highp mat4 viewMatrix;\\n        uniform highp mat4 projectionMatrix;\\n        uniform highp mat4 sceneProperties;\\n        uniform highp mat4 shadowLight;\\n        \\n        const lowp float kDirectionalLight = 1.0;\\n        const lowp float kPointLight = 2.0;\\n        \\n        vec4 getWorldPosition(vec3 modelPosition, vec4 modelScale, mat4 modelMatrix) {\\n            vec4 scaledPosition = vec4(modelScale.xyz * modelPosition, 1.0);\\n            return modelMatrix * scaledPosition;\\n        }\\n        \\n        vec3 safeNormalize(vec3 vector) {\\n            if (vector == vec3(0.0, 0.0, 0.0)) {\\n                return vector;\\n            } else {\\n                return normalize(vector);\\n            }\\n        }\\n        \\n        vec3 getWorldNormal(vec3 modelNormal, vec4 modelScale, mat4 modelMatrix) {\\n            vec3 normalScale = vec3(modelScale.w / modelScale.x, modelScale.w / modelScale.y, modelScale.w / modelScale.z);\\n            return (modelMatrix * vec4(safeNormalize(normalScale * modelNormal), 0.0)).xyz;\\n        }\\n        \\n        vec3 getDirectionToLight(vec3 surfacePosition, vec4 xyz_type, vec4 rgb_parameter) {\\n            float lightType = xyz_type.w;\\n            if (lightType == kDirectionalLight) {\\n                return xyz_type.xyz;\\n            } else if (lightType == kPointLight) {\\n                vec3 lightPosition = xyz_type.xyz;\\n                return normalize(lightPosition - surfacePosition);\\n            } else {\\n                return vec3(0.0, 0.0, 0.0);\\n            }\\n        }\\n        \\n        vec4 shadowVertexPosition(vec3 position, vec3 normal, mat4 shadowLight, vec4 modelScale, mat4 modelMatrix, mat4 viewMatrix, mat4 projectionMatrix, mat4 sceneProperties) {\\n            vec4 worldPosition = getWorldPosition(position, modelScale, modelMatrix);\\n            vec3 worldNormal = getWorldNormal(normal, vec4(modelScale.xyz, 1.0), modelMatrix);\\n            vec4 xyz_type = shadowLight[0];\\n            vec4 rgb_parameter = shadowLight[1];\\n            vec3 directionToLight = getDirectionToLight(worldPosition.xyz, xyz_type, rgb_parameter);\\n            vec3 offset = vec3(0.0, 0.0, 0.0);\\n            float sceneDiameter = sceneProperties[3][1];\\n            if (dot(directionToLight, worldNormal) <= 0.0) {\\n                offset = -sceneDiameter * directionToLight;\\n            } else {\\n                offset = -0.001 * sceneDiameter * directionToLight;\\n            }\\n            vec4 offsetPosition = worldPosition + vec4(offset, 0.0);\\n            return projectionMatrix * (viewMatrix * offsetPosition);\\n        }\\n        \\n        void main () {\\n            gl_Position = shadowVertexPosition(\\n                position,\\n                normal,\\n                shadowLight,\\n                modelScale,\\n                modelMatrix,\\n                viewMatrix,\\n                projectionMatrix,\\n                sceneProperties\\n            );\\n        }\\n    ',\n\tattributes: {normal: 'p', position: 'bZ'},\n\tuniforms: {modelMatrix: 'b', modelScale: 'c', projectionMatrix: 'd', sceneProperties: 'e', shadowLight: 'b3', viewMatrix: 'f'}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowDrawFunction = function (givenShadow) {\n\tif (!givenShadow.$) {\n\t\treturn $elm$core$Maybe$Nothing;\n\t} else {\n\t\tvar webGLMesh = givenShadow.c;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tF8(\n\t\t\t\tfunction (sceneProperties, modelScale, modelMatrix, isRightHanded, viewMatrix, projectionMatrix, shadowLight, settings) {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowSettings, isRightHanded, settings),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowVertex,\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$UnoptimizedShaders$shadowFragment,\n\t\t\t\t\t\twebGLMesh,\n\t\t\t\t\t\t{b: modelMatrix, c: modelScale, d: projectionMatrix, e: sceneProperties, b3: shadowLight, f: viewMatrix});\n\t\t\t\t}));\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$shadow = function (givenShadow) {\n\tvar _v0 = $ianmackenzie$elm_3d_scene$Scene3d$Entity$shadowDrawFunction(givenShadow);\n\tif (!_v0.$) {\n\t\tvar drawFunction = _v0.a;\n\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Types$ShadowNode(drawFunction);\n\t} else {\n\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$block = F4(\n\tfunction (renderObject, renderShadow, givenMaterial, givenBlock) {\n\t\tvar baseEntity = A2($ianmackenzie$elm_3d_scene$Scene3d$Entity$mesh, givenMaterial, $ianmackenzie$elm_3d_scene$Scene3d$Primitives$block);\n\t\tvar untransformedEntity = function () {\n\t\t\tvar _v1 = _Utils_Tuple2(renderObject, renderShadow);\n\t\t\tif (_v1.a) {\n\t\t\t\tif (_v1.b) {\n\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$group(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tbaseEntity,\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$shadow($ianmackenzie$elm_3d_scene$Scene3d$Primitives$blockShadow)\n\t\t\t\t\t\t\t]));\n\t\t\t\t} else {\n\t\t\t\t\treturn baseEntity;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (_v1.b) {\n\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$shadow($ianmackenzie$elm_3d_scene$Scene3d$Primitives$blockShadow);\n\t\t\t\t} else {\n\t\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Entity$empty;\n\t\t\t\t}\n\t\t\t}\n\t\t}();\n\t\tvar _v0 = $ianmackenzie$elm_geometry$Block3d$dimensions(givenBlock);\n\t\tvar scaleX = _v0.a;\n\t\tvar scaleY = _v0.b;\n\t\tvar scaleZ = _v0.c;\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$placeIn,\n\t\t\t$ianmackenzie$elm_geometry$Block3d$axes(givenBlock),\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$preScale,\n\t\t\t\t_Utils_Tuple3(scaleX, scaleY, scaleZ),\n\t\t\t\tuntransformedEntity));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$block = F2(\n\tfunction (givenMaterial, givenBlock) {\n\t\treturn A4($ianmackenzie$elm_3d_scene$Scene3d$Entity$block, true, false, givenMaterial, givenBlock);\n\t});\nvar $elm$core$Basics$pi = _Basics_pi;\nvar $ianmackenzie$elm_units$Angle$radians = function (numRadians) {\n\treturn numRadians;\n};\nvar $ianmackenzie$elm_units$Angle$degrees = function (numDegrees) {\n\treturn $ianmackenzie$elm_units$Angle$radians($elm$core$Basics$pi * (numDegrees / 180));\n};\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = $elm$random$Random$next(seed0);\n\t\t\tvar range = $elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = $elm$random$Random$peel(seed1);\n\t\t\tvar n0 = $elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 134217728.0) + lo) / 9007199254740992.0;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\t$elm$random$Random$next(seed1));\n\t\t};\n\t});\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Constant = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$PbrMaterial = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 3, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$UseMeshUvs = 0;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$VerticalNormal = 0;\nvar $elm$core$Basics$clamp = F3(\n\tfunction (low, high, number) {\n\t\treturn (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$LinearRgb = $elm$core$Basics$identity;\nvar $elm$core$Basics$pow = _Basics_pow;\nvar $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$inverseGamma = function (u) {\n\treturn A3(\n\t\t$elm$core$Basics$clamp,\n\t\t0,\n\t\t1,\n\t\t(u <= 0.04045) ? (u / 12.92) : A2($elm$core$Basics$pow, (u + 0.055) / 1.055, 2.4));\n};\nvar $avh4$elm_color$Color$toRgba = function (_v0) {\n\tvar r = _v0.a;\n\tvar g = _v0.b;\n\tvar b = _v0.c;\n\tvar a = _v0.d;\n\treturn {aL: a, b9: b, cd: g, cI: r};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$colorToLinearRgb = function (color) {\n\tvar _v0 = $avh4$elm_color$Color$toRgba(color);\n\tvar red = _v0.cI;\n\tvar green = _v0.cd;\n\tvar blue = _v0.b9;\n\treturn A3(\n\t\t$elm_explorations$linear_algebra$Math$Vector3$vec3,\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$inverseGamma(red),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$inverseGamma(green),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$inverseGamma(blue));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Material$pbr = function (_v0) {\n\tvar baseColor = _v0.ee;\n\tvar roughness = _v0.eX;\n\tvar metallic = _v0.cr;\n\treturn A5(\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$PbrMaterial,\n\t\t0,\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Constant(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$colorToLinearRgb(baseColor)),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Constant(\n\t\t\tA3($elm$core$Basics$clamp, 0, 1, roughness)),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Constant(\n\t\t\tA3($elm$core$Basics$clamp, 0, 1, metallic)),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Types$Constant(0));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Material$nonmetal = function (_v0) {\n\tvar baseColor = _v0.ee;\n\tvar roughness = _v0.eX;\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$Material$pbr(\n\t\t{ee: baseColor, cr: 0, eX: roughness});\n};\nvar $avh4$elm_color$Color$RgbaSpace = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $avh4$elm_color$Color$scaleFrom255 = function (c) {\n\treturn c / 255;\n};\nvar $avh4$elm_color$Color$rgb255 = F3(\n\tfunction (r, g, b) {\n\t\treturn A4(\n\t\t\t$avh4$elm_color$Color$RgbaSpace,\n\t\t\t$avh4$elm_color$Color$scaleFrom255(r),\n\t\t\t$avh4$elm_color$Color$scaleFrom255(g),\n\t\t\t$avh4$elm_color$Color$scaleFrom255(b),\n\t\t\t1.0);\n\t});\nvar $elm$core$Basics$cos = _Basics_cos;\nvar $ianmackenzie$elm_geometry$Axis3d$direction = function (_v0) {\n\tvar axis = _v0;\n\treturn axis.eo;\n};\nvar $ianmackenzie$elm_geometry$Axis3d$originPoint = function (_v0) {\n\tvar axis = _v0;\n\treturn axis.cw;\n};\nvar $elm$core$Basics$sin = _Basics_sin;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$rotateAround = F2(\n\tfunction (axis, _v0) {\n\t\tvar angle = _v0;\n\t\tvar p0 = $ianmackenzie$elm_geometry$Point3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Axis3d$originPoint(axis));\n\t\tvar halfAngle = 0.5 * angle;\n\t\tvar qw = $elm$core$Basics$cos(halfAngle);\n\t\tvar sinHalfAngle = $elm$core$Basics$sin(halfAngle);\n\t\tvar a = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Axis3d$direction(axis));\n\t\tvar qx = a.d6 * sinHalfAngle;\n\t\tvar wx = qw * qx;\n\t\tvar xx = qx * qx;\n\t\tvar qy = a.d7 * sinHalfAngle;\n\t\tvar wy = qw * qy;\n\t\tvar xy = qx * qy;\n\t\tvar yy = qy * qy;\n\t\tvar a22 = 1 - (2 * (xx + yy));\n\t\tvar qz = a.b5 * sinHalfAngle;\n\t\tvar wz = qw * qz;\n\t\tvar a01 = 2 * (xy - wz);\n\t\tvar a10 = 2 * (xy + wz);\n\t\tvar xz = qx * qz;\n\t\tvar a02 = 2 * (xz + wy);\n\t\tvar a20 = 2 * (xz - wy);\n\t\tvar yz = qy * qz;\n\t\tvar a12 = 2 * (yz - wx);\n\t\tvar a21 = 2 * (yz + wx);\n\t\tvar zz = qz * qz;\n\t\tvar a00 = 1 - (2 * (yy + zz));\n\t\tvar a11 = 1 - (2 * (xx + zz));\n\t\treturn {da: true, r: a00, s: a10, t: a20, u: a01, v: a11, w: a21, x: a02, y: a12, z: a22, I: ((p0.d6 - (a00 * p0.d6)) - (a01 * p0.d7)) - (a02 * p0.b5), J: ((p0.d7 - (a10 * p0.d6)) - (a11 * p0.d7)) - (a12 * p0.b5), K: ((p0.b5 - (a20 * p0.d6)) - (a21 * p0.d7)) - (a22 * p0.b5), b2: 1};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Entity$rotateAround = F3(\n\tfunction (axis, angle, givenDrawable) {\n\t\treturn A2(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Entity$transformBy,\n\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$Transformation$rotateAround, axis, angle),\n\t\t\tgivenDrawable);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$rotateAround = F3(\n\tfunction (axis, angle, entity) {\n\t\treturn A3($ianmackenzie$elm_3d_scene$Scene3d$Entity$rotateAround, axis, angle, entity);\n\t});\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0;\n\t\treturn generator(seed);\n\t});\nvar $ianmackenzie$elm_geometry$Geometry$Types$Axis3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Axis3d$through = F2(\n\tfunction (givenPoint, givenDirection) {\n\t\treturn {eo: givenDirection, cw: givenPoint};\n\t});\nvar $elm$random$Random$addOne = function (value) {\n\treturn _Utils_Tuple2(1, value);\n};\nvar $elm$random$Random$getByWeight = F3(\n\tfunction (_v0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _v0.a;\n\t\t\tvar value = _v0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\t$elm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_v0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - $elm$core$Basics$abs(weight);\n\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$random$Random$map = F2(\n\tfunction (func, _v0) {\n\t\tvar genA = _v0;\n\t\treturn function (seed0) {\n\t\t\tvar _v1 = genA(seed0);\n\t\t\tvar a = _v1.a;\n\t\t\tvar seed1 = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar $elm$core$List$sum = function (numbers) {\n\treturn A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);\n};\nvar $elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_v0) {\n\t\t\tvar weight = _v0.a;\n\t\t\treturn $elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + $elm$core$List$sum(\n\t\t\tA2($elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\t$elm$random$Random$map,\n\t\t\tA2($elm$random$Random$getByWeight, first, others),\n\t\t\tA2($elm$random$Random$float, 0, total));\n\t});\nvar $elm$random$Random$uniform = F2(\n\tfunction (value, valueList) {\n\t\treturn A2(\n\t\t\t$elm$random$Random$weighted,\n\t\t\t$elm$random$Random$addOne(value),\n\t\t\tA2($elm$core$List$map, $elm$random$Random$addOne, valueList));\n\t});\nvar $ianmackenzie$elm_geometry$Geometry$Types$Block3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_units$Quantity$abs = function (_v0) {\n\tvar value = _v0;\n\treturn $elm$core$Basics$abs(value);\n};\nvar $ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn _Utils_cmp(x, y) > -1;\n\t});\nvar $ianmackenzie$elm_units$Quantity$midpoint = F2(\n\tfunction (_v0, _v1) {\n\t\tvar x = _v0;\n\t\tvar y = _v1;\n\t\treturn x + (0.5 * (y - x));\n\t});\nvar $ianmackenzie$elm_geometry$Geometry$Types$Direction3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Direction3d$unsafe = function (givenComponents) {\n\treturn givenComponents;\n};\nvar $ianmackenzie$elm_geometry$Direction3d$negativeX = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: -1, d7: 0, b5: 0});\nvar $ianmackenzie$elm_geometry$Direction3d$negativeY = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: 0, d7: -1, b5: 0});\nvar $ianmackenzie$elm_geometry$Direction3d$negativeZ = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: 0, d7: 0, b5: -1});\nvar $ianmackenzie$elm_geometry$Direction3d$positiveX = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: 1, d7: 0, b5: 0});\nvar $ianmackenzie$elm_geometry$Direction3d$positiveY = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: 0, d7: 1, b5: 0});\nvar $ianmackenzie$elm_geometry$Direction3d$positiveZ = $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t{d6: 0, d7: 0, b5: 1});\nvar $ianmackenzie$elm_geometry$Frame3d$unsafe = function (properties) {\n\treturn properties;\n};\nvar $ianmackenzie$elm_geometry$Block3d$axisAligned = F6(\n\tfunction (x1, y1, z1, x2, y2, z2) {\n\t\tvar computedZDirection = A2($ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo, z1, z2) ? $ianmackenzie$elm_geometry$Direction3d$positiveZ : $ianmackenzie$elm_geometry$Direction3d$negativeZ;\n\t\tvar computedYDirection = A2($ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo, y1, y2) ? $ianmackenzie$elm_geometry$Direction3d$positiveY : $ianmackenzie$elm_geometry$Direction3d$negativeY;\n\t\tvar computedXDirection = A2($ianmackenzie$elm_units$Quantity$greaterThanOrEqualTo, x1, x2) ? $ianmackenzie$elm_geometry$Direction3d$positiveX : $ianmackenzie$elm_geometry$Direction3d$negativeX;\n\t\tvar computedDimensions = _Utils_Tuple3(\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$minus, x1, x2)),\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$minus, y1, y2)),\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(\n\t\t\t\tA2($ianmackenzie$elm_units$Quantity$minus, z1, z2)));\n\t\tvar computedCenterPoint = A3(\n\t\t\t$ianmackenzie$elm_geometry$Point3d$xyz,\n\t\t\tA2($ianmackenzie$elm_units$Quantity$midpoint, x1, x2),\n\t\t\tA2($ianmackenzie$elm_units$Quantity$midpoint, y1, y2),\n\t\t\tA2($ianmackenzie$elm_units$Quantity$midpoint, z1, z2));\n\t\tvar computedAxes = $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t\t{cw: computedCenterPoint, cV: computedXDirection, cW: computedYDirection, cX: computedZDirection});\n\t\treturn {ec: computedAxes, en: computedDimensions};\n\t});\nvar $ianmackenzie$elm_geometry$Block3d$with = function (_v0) {\n\tvar x1 = _v0.fc;\n\tvar y1 = _v0.ff;\n\tvar z1 = _v0.fi;\n\tvar x2 = _v0.fd;\n\tvar y2 = _v0.fg;\n\tvar z2 = _v0.fj;\n\treturn A6($ianmackenzie$elm_geometry$Block3d$axisAligned, x1, y1, z1, x2, y2, z2);\n};\nvar $ianmackenzie$elm_geometry$Direction3d$xy = function (_v0) {\n\tvar theta = _v0;\n\treturn {\n\t\td6: $elm$core$Basics$cos(theta),\n\t\td7: $elm$core$Basics$sin(theta),\n\t\tb5: 0\n\t};\n};\nvar $ianmackenzie$elm_geometry$Direction3d$yz = function (_v0) {\n\tvar theta = _v0;\n\treturn {\n\t\td6: 0,\n\t\td7: $elm$core$Basics$cos(theta),\n\t\tb5: $elm$core$Basics$sin(theta)\n\t};\n};\nvar $ianmackenzie$elm_geometry$Direction3d$zy = function (_v0) {\n\tvar theta = _v0;\n\treturn {\n\t\td6: 0,\n\t\td7: $elm$core$Basics$sin(theta),\n\t\tb5: $elm$core$Basics$cos(theta)\n\t};\n};\nvar $author$project$Main$blockAtIndex = F4(\n\tfunction (xyPositionOffset, angleOffset, xi, yi) {\n\t\tvar axisOffset = function (n) {\n\t\t\treturn $ianmackenzie$elm_units$Angle$degrees(n + (angleOffset / 500));\n\t\t};\n\t\tvar _v0 = A2(\n\t\t\t$elm$random$Random$step,\n\t\t\tA2(\n\t\t\t\t$elm$random$Random$andThen,\n\t\t\t\tfunction (a) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$random$Random$uniform,\n\t\t\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$xy(\n\t\t\t\t\t\t\taxisOffset(a)),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$yz(\n\t\t\t\t\t\t\t\taxisOffset(a)),\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$zy(\n\t\t\t\t\t\t\t\taxisOffset(a))\n\t\t\t\t\t\t\t]));\n\t\t\t\t},\n\t\t\t\tA2($elm$random$Random$float, 0, 10000)),\n\t\t\t$elm$random$Random$initialSeed(xi + (yi * 1000)));\n\t\tvar rotateDirection = _v0.a;\n\t\treturn A3(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$rotateAround,\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_geometry$Axis3d$through,\n\t\t\t\tA3(\n\t\t\t\t\t$ianmackenzie$elm_geometry$Point3d$xyz,\n\t\t\t\t\t$ianmackenzie$elm_units$Length$meters((xi + 0.3) + xyPositionOffset),\n\t\t\t\t\t$ianmackenzie$elm_units$Length$meters((yi + 0.3) + xyPositionOffset),\n\t\t\t\t\t$ianmackenzie$elm_units$Length$meters(0.3)),\n\t\t\t\trotateDirection),\n\t\t\t$ianmackenzie$elm_units$Angle$degrees(((angleOffset / 150) + (xi / 3)) + (yi / 3)),\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$block,\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Material$nonmetal(\n\t\t\t\t\t{\n\t\t\t\t\t\tee: A3($avh4$elm_color$Color$rgb255, 91, 192, 235),\n\t\t\t\t\t\teX: 0.6\n\t\t\t\t\t}),\n\t\t\t\t$ianmackenzie$elm_geometry$Block3d$with(\n\t\t\t\t\t{\n\t\t\t\t\t\tfc: $ianmackenzie$elm_units$Length$meters(xyPositionOffset + xi),\n\t\t\t\t\t\tfd: $ianmackenzie$elm_units$Length$meters((xyPositionOffset + xi) + 0.6),\n\t\t\t\t\t\tff: $ianmackenzie$elm_units$Length$meters(xyPositionOffset + yi),\n\t\t\t\t\t\tfg: $ianmackenzie$elm_units$Length$meters((xyPositionOffset + yi) + 0.6),\n\t\t\t\t\t\tfi: $ianmackenzie$elm_units$Length$meters(0),\n\t\t\t\t\t\tfj: $ianmackenzie$elm_units$Length$meters(0.6)\n\t\t\t\t\t})));\n\t});\nvar $elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2($elm$core$List$map, f, list));\n\t});\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $ianmackenzie$elm_units$Pixels$int = function (numPixels) {\n\treturn numPixels;\n};\nvar $ianmackenzie$elm_3d_camera$Camera3d$Types$Viewpoint3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_geometry$Vector3d$direction = function (_v0) {\n\tvar v = _v0;\n\tvar largestComponent = A2(\n\t\t$elm$core$Basics$max,\n\t\t$elm$core$Basics$abs(v.d6),\n\t\tA2(\n\t\t\t$elm$core$Basics$max,\n\t\t\t$elm$core$Basics$abs(v.d7),\n\t\t\t$elm$core$Basics$abs(v.b5)));\n\tif (!largestComponent) {\n\t\treturn $elm$core$Maybe$Nothing;\n\t} else {\n\t\tvar scaledZ = v.b5 / largestComponent;\n\t\tvar scaledY = v.d7 / largestComponent;\n\t\tvar scaledX = v.d6 / largestComponent;\n\t\tvar scaledLength = $elm$core$Basics$sqrt(((scaledX * scaledX) + (scaledY * scaledY)) + (scaledZ * scaledZ));\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t{d6: scaledX / scaledLength, d7: scaledY / scaledLength, b5: scaledZ / scaledLength});\n\t}\n};\nvar $elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (!maybeValue.$) {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$dot = F2(\n\tfunction (_v0, _v1) {\n\t\tvar v2 = _v0;\n\t\tvar v1 = _v1;\n\t\treturn ((v1.d6 * v2.d6) + (v1.d7 * v2.d7)) + (v1.b5 * v2.b5);\n\t});\nvar $ianmackenzie$elm_units$Quantity$greaterThan = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn _Utils_cmp(x, y) > 0;\n\t});\nvar $ianmackenzie$elm_units$Quantity$lessThan = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn _Utils_cmp(x, y) < 0;\n\t});\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$minus = F2(\n\tfunction (_v0, _v1) {\n\t\tvar v2 = _v0;\n\t\tvar v1 = _v1;\n\t\treturn {d6: v1.d6 - v2.d6, d7: v1.d7 - v2.d7, b5: v1.b5 - v2.b5};\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$projectionIn = F2(\n\tfunction (_v0, _v1) {\n\t\tvar d = _v0;\n\t\tvar v = _v1;\n\t\tvar projectedLength = ((v.d6 * d.d6) + (v.d7 * d.d7)) + (v.b5 * d.b5);\n\t\treturn {d6: d.d6 * projectedLength, d7: d.d7 * projectedLength, b5: d.b5 * projectedLength};\n\t});\nvar $ianmackenzie$elm_geometry$Vector3d$reverse = function (_v0) {\n\tvar v = _v0;\n\treturn {d6: -v.d6, d7: -v.d7, b5: -v.b5};\n};\nvar $ianmackenzie$elm_units$Quantity$zero = 0;\nvar $ianmackenzie$elm_geometry$Direction3d$orthonormalize = F3(\n\tfunction (xVector, xyVector, xyzVector) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$andThen,\n\t\t\tfunction (xDirection) {\n\t\t\t\tvar yVector = A2(\n\t\t\t\t\t$ianmackenzie$elm_geometry$Vector3d$minus,\n\t\t\t\t\tA2($ianmackenzie$elm_geometry$Vector3d$projectionIn, xDirection, xyVector),\n\t\t\t\t\txyVector);\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$andThen,\n\t\t\t\t\tfunction (yDirection) {\n\t\t\t\t\t\tvar rightHandedZVector = A2($ianmackenzie$elm_geometry$Vector3d$cross, xyVector, xVector);\n\t\t\t\t\t\tvar tripleProduct = A2($ianmackenzie$elm_geometry$Vector3d$dot, xyzVector, rightHandedZVector);\n\t\t\t\t\t\tvar zVector = A2($ianmackenzie$elm_units$Quantity$greaterThan, $ianmackenzie$elm_units$Quantity$zero, tripleProduct) ? rightHandedZVector : (A2($ianmackenzie$elm_units$Quantity$lessThan, $ianmackenzie$elm_units$Quantity$zero, tripleProduct) ? $ianmackenzie$elm_geometry$Vector3d$reverse(rightHandedZVector) : $ianmackenzie$elm_geometry$Vector3d$zero);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t\tfunction (zDirection) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple3(xDirection, yDirection, zDirection);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$ianmackenzie$elm_geometry$Vector3d$direction(zVector));\n\t\t\t\t\t},\n\t\t\t\t\t$ianmackenzie$elm_geometry$Vector3d$direction(yVector));\n\t\t\t},\n\t\t\t$ianmackenzie$elm_geometry$Vector3d$direction(xVector));\n\t});\nvar $ianmackenzie$elm_geometry$Direction3d$perpendicularTo = function (_v0) {\n\tvar d = _v0;\n\tvar absZ = $elm$core$Basics$abs(d.b5);\n\tvar absY = $elm$core$Basics$abs(d.d7);\n\tvar absX = $elm$core$Basics$abs(d.d6);\n\tif (_Utils_cmp(absX, absY) < 1) {\n\t\tif (_Utils_cmp(absX, absZ) < 1) {\n\t\t\tvar scale = $elm$core$Basics$sqrt((d.b5 * d.b5) + (d.d7 * d.d7));\n\t\t\treturn {d6: 0, d7: (-d.b5) / scale, b5: d.d7 / scale};\n\t\t} else {\n\t\t\tvar scale = $elm$core$Basics$sqrt((d.d7 * d.d7) + (d.d6 * d.d6));\n\t\t\treturn {d6: (-d.d7) / scale, d7: d.d6 / scale, b5: 0};\n\t\t}\n\t} else {\n\t\tif (_Utils_cmp(absY, absZ) < 1) {\n\t\t\tvar scale = $elm$core$Basics$sqrt((d.b5 * d.b5) + (d.d6 * d.d6));\n\t\t\treturn {d6: d.b5 / scale, d7: 0, b5: (-d.d6) / scale};\n\t\t} else {\n\t\t\tvar scale = $elm$core$Basics$sqrt((d.d6 * d.d6) + (d.d7 * d.d7));\n\t\t\treturn {d6: (-d.d7) / scale, d7: d.d6 / scale, b5: 0};\n\t\t}\n\t}\n};\nvar $ianmackenzie$elm_geometry$Direction3d$perpendicularBasis = function (direction) {\n\tvar xDirection = $ianmackenzie$elm_geometry$Direction3d$perpendicularTo(direction);\n\tvar _v0 = xDirection;\n\tvar dX = _v0;\n\tvar _v1 = direction;\n\tvar d = _v1;\n\tvar yDirection = {d6: (d.d7 * dX.b5) - (d.b5 * dX.d7), d7: (d.b5 * dX.d6) - (d.d6 * dX.b5), b5: (d.d6 * dX.d7) - (d.d7 * dX.d6)};\n\treturn _Utils_Tuple2(xDirection, yDirection);\n};\nvar $ianmackenzie$elm_geometry$Direction3d$toVector = function (_v0) {\n\tvar directionComponents = _v0;\n\treturn directionComponents;\n};\nvar $ianmackenzie$elm_geometry$Frame3d$withZDirection = F2(\n\tfunction (givenZDirection, givenOrigin) {\n\t\tvar _v0 = $ianmackenzie$elm_geometry$Direction3d$perpendicularBasis(givenZDirection);\n\t\tvar computedXDirection = _v0.a;\n\t\tvar computedYDirection = _v0.b;\n\t\treturn $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t\t{cw: givenOrigin, cV: computedXDirection, cW: computedYDirection, cX: givenZDirection});\n\t});\nvar $ianmackenzie$elm_3d_camera$Viewpoint3d$lookAt = function (_arguments) {\n\tvar zVector = A2($ianmackenzie$elm_geometry$Vector3d$from, _arguments.eA, _arguments.ex);\n\tvar yVector = $ianmackenzie$elm_geometry$Direction3d$toVector(_arguments.d4);\n\tvar xVector = A2($ianmackenzie$elm_geometry$Vector3d$cross, zVector, yVector);\n\tvar _v0 = A3($ianmackenzie$elm_geometry$Direction3d$orthonormalize, zVector, yVector, xVector);\n\tif (!_v0.$) {\n\t\tvar _v1 = _v0.a;\n\t\tvar normalizedZDirection = _v1.a;\n\t\tvar normalizedYDirection = _v1.b;\n\t\tvar normalizedXDirection = _v1.c;\n\t\treturn $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t\t{cw: _arguments.ex, cV: normalizedXDirection, cW: normalizedYDirection, cX: normalizedZDirection});\n\t} else {\n\t\tvar _v2 = $ianmackenzie$elm_geometry$Vector3d$direction(zVector);\n\t\tif (!_v2.$) {\n\t\t\tvar zDirection = _v2.a;\n\t\t\treturn A2($ianmackenzie$elm_geometry$Frame3d$withZDirection, zDirection, _arguments.ex);\n\t\t} else {\n\t\t\tvar _v3 = $ianmackenzie$elm_geometry$Direction3d$perpendicularBasis(_arguments.d4);\n\t\t\tvar arbitraryZDirection = _v3.a;\n\t\t\tvar arbitraryXDirection = _v3.b;\n\t\t\treturn $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t\t\t{cw: _arguments.ex, cV: arbitraryXDirection, cW: _arguments.d4, cX: arbitraryZDirection});\n\t\t}\n\t}\n};\nvar $ianmackenzie$elm_geometry$Point3d$meters = F3(\n\tfunction (x, y, z) {\n\t\treturn {d6: x, d7: y, b5: z};\n\t});\nvar $ianmackenzie$elm_3d_camera$Camera3d$Types$Camera3d = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_camera$Camera3d$Types$Perspective = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $ianmackenzie$elm_units$Quantity$half = function (_v0) {\n\tvar value = _v0;\n\treturn 0.5 * value;\n};\nvar $elm$core$Basics$tan = _Basics_tan;\nvar $ianmackenzie$elm_units$Angle$tan = function (_v0) {\n\tvar angle = _v0;\n\treturn $elm$core$Basics$tan(angle);\n};\nvar $ianmackenzie$elm_3d_camera$Camera3d$perspective = function (_arguments) {\n\tvar halfFieldOfView = $ianmackenzie$elm_units$Quantity$half(\n\t\t$ianmackenzie$elm_units$Quantity$abs(_arguments.e5));\n\tvar frustumSlope = $ianmackenzie$elm_units$Angle$tan(halfFieldOfView);\n\treturn {\n\t\tcH: $ianmackenzie$elm_3d_camera$Camera3d$Types$Perspective(frustumSlope),\n\t\te7: _arguments.e7\n\t};\n};\nvar $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$CastsShadows = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$castsShadows = function (flag) {\n\treturn flag;\n};\nvar $elm_explorations$webgl$WebGL$Internal$Alpha = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm_explorations$webgl$WebGL$alpha = $elm_explorations$webgl$WebGL$Internal$Alpha;\nvar $elm_explorations$webgl$WebGL$Internal$Antialias = {$: 3};\nvar $elm_explorations$webgl$WebGL$antialias = $elm_explorations$webgl$WebGL$Internal$Antialias;\nvar $elm_explorations$webgl$WebGL$Internal$ClearColor = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 4, a: a, b: b, c: c, d: d};\n\t});\nvar $elm_explorations$webgl$WebGL$clearColor = $elm_explorations$webgl$WebGL$Internal$ClearColor;\nvar $elm_explorations$webgl$WebGL$Internal$Depth = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm_explorations$webgl$WebGL$depth = $elm_explorations$webgl$WebGL$Internal$Depth;\nvar $elm$html$Html$Attributes$height = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'height',\n\t\t$elm$core$String$fromInt(n));\n};\nvar $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$html$Html$Keyed$node = $elm$virtual_dom$VirtualDom$keyedNode;\nvar $elm_explorations$webgl$WebGL$Internal$Stencil = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm_explorations$webgl$WebGL$stencil = $elm_explorations$webgl$WebGL$Internal$Stencil;\nvar $elm$core$String$concat = function (strings) {\n\treturn A2($elm$core$String$join, '', strings);\n};\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $avh4$elm_color$Color$toCssString = function (_v0) {\n\tvar r = _v0.a;\n\tvar g = _v0.b;\n\tvar b = _v0.c;\n\tvar a = _v0.d;\n\tvar roundTo = function (x) {\n\t\treturn $elm$core$Basics$round(x * 1000) / 1000;\n\t};\n\tvar pct = function (x) {\n\t\treturn $elm$core$Basics$round(x * 10000) / 100;\n\t};\n\treturn $elm$core$String$concat(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t'rgba(',\n\t\t\t\t$elm$core$String$fromFloat(\n\t\t\t\tpct(r)),\n\t\t\t\t'%,',\n\t\t\t\t$elm$core$String$fromFloat(\n\t\t\t\tpct(g)),\n\t\t\t\t'%,',\n\t\t\t\t$elm$core$String$fromFloat(\n\t\t\t\tpct(b)),\n\t\t\t\t'%,',\n\t\t\t\t$elm$core$String$fromFloat(\n\t\t\t\troundTo(a)),\n\t\t\t\t')'\n\t\t\t]));\n};\nvar $elm_explorations$webgl$WebGL$toHtmlWith = F3(\n\tfunction (options, attributes, entities) {\n\t\treturn A3(_WebGL_toHtml, options, attributes, entities);\n\t});\nvar $ianmackenzie$elm_units$Pixels$toInt = function (_v0) {\n\tvar numPixels = _v0;\n\treturn numPixels;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$allLightsEnabled = A4($elm_explorations$linear_algebra$Math$Vector4$vec4, 1, 1, 1, 1);\nvar $ianmackenzie$elm_3d_scene$Scene3d$call = F3(\n\tfunction (renderPasses, lights, settings) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (renderPass) {\n\t\t\t\treturn A2(renderPass, lights, settings);\n\t\t\t},\n\t\t\trenderPasses);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$CieXyz = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToCieXyz = F2(\n\tfunction (_v0, _v1) {\n\t\tvar intensity = _v0;\n\t\tvar x = _v1.d6;\n\t\tvar y = _v1.d7;\n\t\treturn A3($ianmackenzie$elm_3d_scene$Scene3d$Types$CieXyz, (intensity * x) / y, intensity, (intensity * ((1 - x) - y)) / y);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$cieXyzToLinearRgb = function (_v0) {\n\tvar bigX = _v0.a;\n\tvar bigY = _v0.b;\n\tvar bigZ = _v0.c;\n\treturn A3($elm_explorations$linear_algebra$Math$Vector3$vec3, ((3.2406 * bigX) - (1.5372 * bigY)) - (0.4986 * bigZ), (((-0.9689) * bigX) + (1.8758 * bigY)) + (0.0415 * bigZ), ((0.0557 * bigX) - (0.204 * bigY)) + (1.057 * bigZ));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToLinearRgb = F2(\n\tfunction (intensity, chromaticity) {\n\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$cieXyzToLinearRgb(\n\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToCieXyz, intensity, chromaticity));\n\t});\nvar $elm_explorations$linear_algebra$Math$Matrix4$fromRecord = _MJS_m4x4fromRecord;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$modelMatrix = function (transformation) {\n\treturn $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t{dj: transformation.r, dk: transformation.u, dl: transformation.x, dm: transformation.I, dn: transformation.s, $7: transformation.v, dp: transformation.y, dq: transformation.J, dr: transformation.t, ds: transformation.w, dt: transformation.z, du: transformation.K, dv: 0, dw: 0, dx: 0, dy: 1});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$createRenderPass = F5(\n\tfunction (sceneProperties, viewMatrix, projectionMatrix, transformation, drawFunction) {\n\t\tvar normalSign = transformation.da ? 1 : (-1);\n\t\tvar modelScale = A4($elm_explorations$linear_algebra$Math$Vector4$vec4, transformation.b2, transformation.b2, transformation.b2, normalSign);\n\t\treturn A6(\n\t\t\tdrawFunction,\n\t\t\tsceneProperties,\n\t\t\tmodelScale,\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Transformation$modelMatrix(transformation),\n\t\t\ttransformation.da,\n\t\t\tviewMatrix,\n\t\t\tprojectionMatrix);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$collectRenderPasses = F6(\n\tfunction (sceneProperties, viewMatrix, projectionMatrix, currentTransformation, node, accumulated) {\n\t\tcollectRenderPasses:\n\t\twhile (true) {\n\t\t\tswitch (node.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn accumulated;\n\t\t\t\tcase 5:\n\t\t\t\t\tvar transformation = node.a;\n\t\t\t\t\tvar childNode = node.b;\n\t\t\t\t\tvar $temp$sceneProperties = sceneProperties,\n\t\t\t\t\t\t$temp$viewMatrix = viewMatrix,\n\t\t\t\t\t\t$temp$projectionMatrix = projectionMatrix,\n\t\t\t\t\t\t$temp$currentTransformation = A2($ianmackenzie$elm_3d_scene$Scene3d$Transformation$compose, transformation, currentTransformation),\n\t\t\t\t\t\t$temp$node = childNode,\n\t\t\t\t\t\t$temp$accumulated = accumulated;\n\t\t\t\t\tsceneProperties = $temp$sceneProperties;\n\t\t\t\t\tviewMatrix = $temp$viewMatrix;\n\t\t\t\t\tprojectionMatrix = $temp$projectionMatrix;\n\t\t\t\t\tcurrentTransformation = $temp$currentTransformation;\n\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\taccumulated = $temp$accumulated;\n\t\t\t\t\tcontinue collectRenderPasses;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar meshDrawFunction = node.b;\n\t\t\t\t\tvar updatedMeshes = A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA5($ianmackenzie$elm_3d_scene$Scene3d$createRenderPass, sceneProperties, viewMatrix, projectionMatrix, currentTransformation, meshDrawFunction),\n\t\t\t\t\t\taccumulated.O);\n\t\t\t\t\treturn {O: updatedMeshes, Z: accumulated.Z, eY: accumulated.eY};\n\t\t\t\tcase 3:\n\t\t\t\t\tvar pointDrawFunction = node.b;\n\t\t\t\t\tvar updatedPoints = A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA5($ianmackenzie$elm_3d_scene$Scene3d$createRenderPass, sceneProperties, viewMatrix, projectionMatrix, currentTransformation, pointDrawFunction),\n\t\t\t\t\t\taccumulated.Z);\n\t\t\t\t\treturn {O: accumulated.O, Z: updatedPoints, eY: accumulated.eY};\n\t\t\t\tcase 2:\n\t\t\t\t\tvar shadowDrawFunction = node.a;\n\t\t\t\t\tvar updatedShadows = A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA5($ianmackenzie$elm_3d_scene$Scene3d$createRenderPass, sceneProperties, viewMatrix, projectionMatrix, currentTransformation, shadowDrawFunction),\n\t\t\t\t\t\taccumulated.eY);\n\t\t\t\t\treturn {O: accumulated.O, Z: accumulated.Z, eY: updatedShadows};\n\t\t\t\tdefault:\n\t\t\t\t\tvar childNodes = node.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\tA4($ianmackenzie$elm_3d_scene$Scene3d$collectRenderPasses, sceneProperties, viewMatrix, projectionMatrix, currentTransformation),\n\t\t\t\t\t\taccumulated,\n\t\t\t\t\t\tchildNodes);\n\t\t\t}\n\t\t}\n\t});\nvar $elm_explorations$webgl$WebGL$Internal$ColorMask = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 4, a: a, b: b, c: c, d: d};\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$colorMask = $elm_explorations$webgl$WebGL$Internal$ColorMask;\nvar $elm_explorations$webgl$WebGL$Internal$DepthTest = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 1, a: a, b: b, c: c, d: d};\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$DepthTest$greaterOrEqual = function (_v0) {\n\tvar write = _v0.ad;\n\tvar near = _v0.aa;\n\tvar far = _v0._;\n\treturn A4($elm_explorations$webgl$WebGL$Internal$DepthTest, 518, write, near, far);\n};\nvar $elm_explorations$webgl$WebGL$Internal$PolygonOffset = F2(\n\tfunction (a, b) {\n\t\treturn {$: 6, a: a, b: b};\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$polygonOffset = $elm_explorations$webgl$WebGL$Internal$PolygonOffset;\nvar $ianmackenzie$elm_3d_scene$Scene3d$createShadowStencil = _List_fromArray(\n\t[\n\t\t$elm_explorations$webgl$WebGL$Settings$DepthTest$greaterOrEqual(\n\t\t{_: 1, aa: 0, ad: false}),\n\t\tA4($elm_explorations$webgl$WebGL$Settings$colorMask, false, false, false, false),\n\t\tA2($elm_explorations$webgl$WebGL$Settings$polygonOffset, 0.0, 1.0)\n\t]);\nvar $ianmackenzie$elm_3d_scene$Scene3d$initialStencilCount = 8;\nvar $ianmackenzie$elm_3d_scene$Scene3d$lowerFourBits = 15;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$replace = 7681;\nvar $ianmackenzie$elm_3d_scene$Scene3d$dummyFragmentShader = {\n\tsrc: '\\n        precision lowp float;\\n\\n        void main() {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n        }\\n    ',\n\tattributes: {},\n\tuniforms: {}\n};\nvar $elm_explorations$webgl$WebGL$Mesh1 = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm_explorations$webgl$WebGL$triangleStrip = $elm_explorations$webgl$WebGL$Mesh1(\n\t{c1: 1, c9: 0, dH: 5});\nvar $ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadMesh = $elm_explorations$webgl$WebGL$triangleStrip(\n\t_List_fromArray(\n\t\t[\n\t\t\t{\n\t\t\tbZ: A2($elm_explorations$linear_algebra$Math$Vector2$vec2, -1, -1)\n\t\t},\n\t\t\t{\n\t\t\tbZ: A2($elm_explorations$linear_algebra$Math$Vector2$vec2, 1, -1)\n\t\t},\n\t\t\t{\n\t\t\tbZ: A2($elm_explorations$linear_algebra$Math$Vector2$vec2, -1, 1)\n\t\t},\n\t\t\t{\n\t\t\tbZ: A2($elm_explorations$linear_algebra$Math$Vector2$vec2, 1, 1)\n\t\t}\n\t\t]));\nvar $ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadVertexShader = {\n\tsrc: '\\n        precision lowp float;\\n\\n        attribute vec2 position;\\n\\n        void main() {\\n            gl_Position = vec4(position, 0.0, 1.0);\\n        }\\n    ',\n\tattributes: {position: 'bZ'},\n\tuniforms: {}\n};\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$test = function (stencilTest) {\n\treturn A3(\n\t\t$elm_explorations$webgl$WebGL$Settings$StencilTest$testSeparate,\n\t\t{cn: stencilTest.cn, cJ: stencilTest.cJ, cU: stencilTest.cU},\n\t\t{a8: stencilTest.a8, bp: stencilTest.bp, by: stencilTest.by, bz: stencilTest.bz},\n\t\t{a8: stencilTest.a8, bp: stencilTest.bp, by: stencilTest.by, bz: stencilTest.bz});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$updateStencil = function (test) {\n\treturn A5(\n\t\t$elm_explorations$webgl$WebGL$entityWith,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm_explorations$webgl$WebGL$Settings$StencilTest$test(test),\n\t\t\t\tA4($elm_explorations$webgl$WebGL$Settings$colorMask, false, false, false, false)\n\t\t\t]),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadVertexShader,\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$dummyFragmentShader,\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$fullScreenQuadMesh,\n\t\t{});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$resetStencil = $ianmackenzie$elm_3d_scene$Scene3d$updateStencil(\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace, cn: 0, cJ: $ianmackenzie$elm_3d_scene$Scene3d$initialStencilCount, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, cU: $ianmackenzie$elm_3d_scene$Scene3d$lowerFourBits, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace});\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$greater = 516;\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$invert = 5386;\nvar $ianmackenzie$elm_3d_scene$Scene3d$singleLightMask = function (index) {\n\treturn A2($elm$core$Basics$pow, 2, index + 4);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$storeStencilValue = function (lightIndex) {\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$updateStencil(\n\t\t{\n\t\t\ta8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep,\n\t\t\tcn: $ianmackenzie$elm_3d_scene$Scene3d$lowerFourBits,\n\t\t\tcJ: $ianmackenzie$elm_3d_scene$Scene3d$initialStencilCount,\n\t\t\tbp: $elm_explorations$webgl$WebGL$Settings$StencilTest$greater,\n\t\t\tcU: $ianmackenzie$elm_3d_scene$Scene3d$singleLightMask(lightIndex),\n\t\t\tby: $elm_explorations$webgl$WebGL$Settings$StencilTest$invert,\n\t\t\tbz: $elm_explorations$webgl$WebGL$Settings$StencilTest$invert\n\t\t});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$createShadow = F3(\n\tfunction (shadowRenderPasses, lightIndex, lightMatrix) {\n\t\treturn $elm$core$List$concat(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, shadowRenderPasses, lightMatrix, $ianmackenzie$elm_3d_scene$Scene3d$createShadowStencil),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$storeStencilValue(lightIndex),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$resetStencil\n\t\t\t\t\t])\n\t\t\t\t]));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$createShadows = F2(\n\tfunction (shadowRenderPasses, shadowCasters) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$createShadow(shadowRenderPasses),\n\t\t\t\tshadowCasters));\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$DepthTest$less = function (_v0) {\n\tvar write = _v0.ad;\n\tvar near = _v0.aa;\n\tvar far = _v0._;\n\treturn A4($elm_explorations$webgl$WebGL$Internal$DepthTest, 513, write, near, far);\n};\nvar $elm_explorations$webgl$WebGL$Settings$DepthTest$default = $elm_explorations$webgl$WebGL$Settings$DepthTest$less(\n\t{_: 1, aa: 0, ad: true});\nvar $elm_explorations$webgl$WebGL$Internal$Blend = function (a) {\n\treturn function (b) {\n\t\treturn function (c) {\n\t\t\treturn function (d) {\n\t\t\t\treturn function (e) {\n\t\t\t\t\treturn function (f) {\n\t\t\t\t\t\treturn function (g) {\n\t\t\t\t\t\t\treturn function (h) {\n\t\t\t\t\t\t\t\treturn function (i) {\n\t\t\t\t\t\t\t\t\treturn function (j) {\n\t\t\t\t\t\t\t\t\t\treturn {$: 0, a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, j: j};\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\nvar $elm_explorations$webgl$WebGL$Settings$Blend$custom = function (_v0) {\n\tvar r = _v0.b$;\n\tvar g = _v0.bK;\n\tvar b = _v0.bD;\n\tvar a = _v0.bA;\n\tvar color = _v0.bG;\n\tvar alpha = _v0.aL;\n\tvar expand = F2(\n\t\tfunction (_v1, _v2) {\n\t\t\tvar eq1 = _v1.a;\n\t\t\tvar f11 = _v1.b;\n\t\t\tvar f12 = _v1.c;\n\t\t\tvar eq2 = _v2.a;\n\t\t\tvar f21 = _v2.b;\n\t\t\tvar f22 = _v2.c;\n\t\t\treturn $elm_explorations$webgl$WebGL$Internal$Blend(eq1)(f11)(f12)(eq2)(f21)(f22)(r)(g)(b)(a);\n\t\t});\n\treturn A2(expand, color, alpha);\n};\nvar $elm_explorations$webgl$WebGL$Settings$Blend$Blender = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$Blend$customAdd = F2(\n\tfunction (_v0, _v1) {\n\t\tvar factor1 = _v0;\n\t\tvar factor2 = _v1;\n\t\treturn A3($elm_explorations$webgl$WebGL$Settings$Blend$Blender, 32774, factor1, factor2);\n\t});\nvar $elm_explorations$webgl$WebGL$Settings$Blend$Factor = $elm$core$Basics$identity;\nvar $elm_explorations$webgl$WebGL$Settings$Blend$one = 1;\nvar $elm_explorations$webgl$WebGL$Settings$Blend$oneMinusSrcAlpha = 771;\nvar $elm_explorations$webgl$WebGL$Settings$Blend$srcAlpha = 770;\nvar $ianmackenzie$elm_3d_scene$Scene3d$defaultBlend = $elm_explorations$webgl$WebGL$Settings$Blend$custom(\n\t{\n\t\tbA: 0,\n\t\taL: A2($elm_explorations$webgl$WebGL$Settings$Blend$customAdd, $elm_explorations$webgl$WebGL$Settings$Blend$one, $elm_explorations$webgl$WebGL$Settings$Blend$oneMinusSrcAlpha),\n\t\tbD: 0,\n\t\tbG: A2($elm_explorations$webgl$WebGL$Settings$Blend$customAdd, $elm_explorations$webgl$WebGL$Settings$Blend$srcAlpha, $elm_explorations$webgl$WebGL$Settings$Blend$oneMinusSrcAlpha),\n\t\tbK: 0,\n\t\tb$: 0\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault = _List_fromArray(\n\t[$elm_explorations$webgl$WebGL$Settings$DepthTest$default, $ianmackenzie$elm_3d_scene$Scene3d$defaultBlend]);\nvar $ianmackenzie$elm_3d_camera$Viewpoint3d$eyePoint = function (_v0) {\n\tvar frame = _v0;\n\treturn $ianmackenzie$elm_geometry$Frame3d$originPoint(frame);\n};\nvar $ianmackenzie$elm_geometry$Point3d$unsafe = function (givenCoordinates) {\n\treturn givenCoordinates;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$placementFrame = function (transformation) {\n\treturn $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t{\n\t\t\tcw: $ianmackenzie$elm_geometry$Point3d$unsafe(\n\t\t\t\t{d6: transformation.I, d7: transformation.J, b5: transformation.K}),\n\t\t\tcV: $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t\t\t\t{d6: transformation.r, d7: transformation.s, b5: transformation.t}),\n\t\t\tcW: $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t\t\t\t{d6: transformation.u, d7: transformation.v, b5: transformation.w}),\n\t\t\tcX: $ianmackenzie$elm_geometry$Direction3d$unsafe(\n\t\t\t\t{d6: transformation.x, d7: transformation.y, b5: transformation.z})\n\t\t});\n};\nvar $ianmackenzie$elm_geometry$Direction3d$relativeTo = F2(\n\tfunction (_v0, _v1) {\n\t\tvar frame = _v0;\n\t\tvar d = _v1;\n\t\tvar _v2 = frame.cX;\n\t\tvar k = _v2;\n\t\tvar _v3 = frame.cW;\n\t\tvar j = _v3;\n\t\tvar _v4 = frame.cV;\n\t\tvar i = _v4;\n\t\treturn {d6: ((d.d6 * i.d6) + (d.d7 * i.d7)) + (d.b5 * i.b5), d7: ((d.d6 * j.d6) + (d.d7 * j.d7)) + (d.b5 * j.b5), b5: ((d.d6 * k.d6) + (d.d7 * k.d7)) + (d.b5 * k.b5)};\n\t});\nvar $ianmackenzie$elm_geometry$Point3d$relativeTo = F2(\n\tfunction (_v0, _v1) {\n\t\tvar frame = _v0;\n\t\tvar p = _v1;\n\t\tvar _v2 = frame.cw;\n\t\tvar p0 = _v2;\n\t\tvar deltaX = p.d6 - p0.d6;\n\t\tvar deltaY = p.d7 - p0.d7;\n\t\tvar deltaZ = p.b5 - p0.b5;\n\t\tvar _v3 = frame.cX;\n\t\tvar k = _v3;\n\t\tvar _v4 = frame.cW;\n\t\tvar j = _v4;\n\t\tvar _v5 = frame.cV;\n\t\tvar i = _v5;\n\t\treturn {d6: ((deltaX * i.d6) + (deltaY * i.d7)) + (deltaZ * i.b5), d7: ((deltaX * j.d6) + (deltaY * j.d7)) + (deltaZ * j.b5), b5: ((deltaX * k.d6) + (deltaY * k.d7)) + (deltaZ * k.b5)};\n\t});\nvar $ianmackenzie$elm_geometry$Frame3d$relativeTo = F2(\n\tfunction (otherFrame, frame) {\n\t\treturn {\n\t\t\tcw: A2(\n\t\t\t\t$ianmackenzie$elm_geometry$Point3d$relativeTo,\n\t\t\t\totherFrame,\n\t\t\t\t$ianmackenzie$elm_geometry$Frame3d$originPoint(frame)),\n\t\t\tcV: A2(\n\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$relativeTo,\n\t\t\t\totherFrame,\n\t\t\t\t$ianmackenzie$elm_geometry$Frame3d$xDirection(frame)),\n\t\t\tcW: A2(\n\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$relativeTo,\n\t\t\t\totherFrame,\n\t\t\t\t$ianmackenzie$elm_geometry$Frame3d$yDirection(frame)),\n\t\t\tcX: A2(\n\t\t\t\t$ianmackenzie$elm_geometry$Direction3d$relativeTo,\n\t\t\t\totherFrame,\n\t\t\t\t$ianmackenzie$elm_geometry$Frame3d$zDirection(frame))\n\t\t};\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$union = F2(\n\tfunction (firstBox, secondBox) {\n\t\tvar b2 = $ianmackenzie$elm_geometry$BoundingBox3d$extrema(secondBox);\n\t\tvar b1 = $ianmackenzie$elm_geometry$BoundingBox3d$extrema(firstBox);\n\t\treturn {\n\t\t\tdA: A2($ianmackenzie$elm_units$Quantity$max, b1.dA, b2.dA),\n\t\t\tdB: A2($ianmackenzie$elm_units$Quantity$max, b1.dB, b2.dB),\n\t\t\tdC: A2($ianmackenzie$elm_units$Quantity$max, b1.dC, b2.dC),\n\t\t\tdD: A2($ianmackenzie$elm_units$Quantity$min, b1.dD, b2.dD),\n\t\t\tdE: A2($ianmackenzie$elm_units$Quantity$min, b1.dE, b2.dE),\n\t\t\tdF: A2($ianmackenzie$elm_units$Quantity$min, b1.dF, b2.dF)\n\t\t};\n\t});\nvar $ianmackenzie$elm_geometry$Point3d$coordinates = function (_v0) {\n\tvar p = _v0;\n\treturn _Utils_Tuple3(p.d6, p.d7, p.b5);\n};\nvar $ianmackenzie$elm_units$Quantity$plus = F2(\n\tfunction (_v0, _v1) {\n\t\tvar y = _v0;\n\t\tvar x = _v1;\n\t\treturn x + y;\n\t});\nvar $ianmackenzie$elm_geometry$BoundingBox3d$withDimensions = F2(\n\tfunction (_v0, givenCenterPoint) {\n\t\tvar givenLength = _v0.a;\n\t\tvar givenWidth = _v0.b;\n\t\tvar givenHeight = _v0.c;\n\t\tvar halfWidth = $ianmackenzie$elm_units$Quantity$half(\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(givenWidth));\n\t\tvar halfLength = $ianmackenzie$elm_units$Quantity$half(\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(givenLength));\n\t\tvar halfHeight = $ianmackenzie$elm_units$Quantity$half(\n\t\t\t$ianmackenzie$elm_units$Quantity$abs(givenHeight));\n\t\tvar _v1 = $ianmackenzie$elm_geometry$Point3d$coordinates(givenCenterPoint);\n\t\tvar x0 = _v1.a;\n\t\tvar y0 = _v1.b;\n\t\tvar z0 = _v1.c;\n\t\treturn {\n\t\t\tdA: A2($ianmackenzie$elm_units$Quantity$plus, halfLength, x0),\n\t\t\tdB: A2($ianmackenzie$elm_units$Quantity$plus, halfWidth, y0),\n\t\t\tdC: A2($ianmackenzie$elm_units$Quantity$plus, halfHeight, z0),\n\t\t\tdD: A2($ianmackenzie$elm_units$Quantity$minus, halfLength, x0),\n\t\t\tdE: A2($ianmackenzie$elm_units$Quantity$minus, halfWidth, y0),\n\t\t\tdF: A2($ianmackenzie$elm_units$Quantity$minus, halfHeight, z0)\n\t\t};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$updateViewBounds = F4(\n\tfunction (viewFrame, scale, modelBounds, current) {\n\t\tvar originalCenter = modelBounds.ei;\n\t\tvar modelZDimension = (2 * modelBounds.eD) * scale;\n\t\tvar modelYDimension = (2 * modelBounds.eC) * scale;\n\t\tvar modelXDimension = (2 * modelBounds.eB) * scale;\n\t\tvar modelCenterZ = originalCenter.b5 * scale;\n\t\tvar modelCenterY = originalCenter.d7 * scale;\n\t\tvar modelCenterX = originalCenter.d6 * scale;\n\t\tvar k = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Frame3d$zDirection(viewFrame));\n\t\tvar zDimension = ($elm$core$Basics$abs(modelXDimension * k.d6) + $elm$core$Basics$abs(modelYDimension * k.d7)) + $elm$core$Basics$abs(modelZDimension * k.b5);\n\t\tvar j = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Frame3d$yDirection(viewFrame));\n\t\tvar yDimension = ($elm$core$Basics$abs(modelXDimension * j.d6) + $elm$core$Basics$abs(modelYDimension * j.d7)) + $elm$core$Basics$abs(modelZDimension * j.b5);\n\t\tvar i = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Frame3d$xDirection(viewFrame));\n\t\tvar xDimension = ($elm$core$Basics$abs(modelXDimension * i.d6) + $elm$core$Basics$abs(modelYDimension * i.d7)) + $elm$core$Basics$abs(modelZDimension * i.b5);\n\t\tvar nodeBounds = A2(\n\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$withDimensions,\n\t\t\t_Utils_Tuple3(xDimension, yDimension, zDimension),\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_geometry$Point3d$relativeTo,\n\t\t\t\tviewFrame,\n\t\t\t\tA3($ianmackenzie$elm_geometry$Point3d$meters, modelCenterX, modelCenterY, modelCenterZ)));\n\t\tif (!current.$) {\n\t\t\tvar currentBounds = current.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tA2($ianmackenzie$elm_geometry$BoundingBox3d$union, currentBounds, nodeBounds));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Just(nodeBounds);\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$getViewBounds = F4(\n\tfunction (viewFrame, scale, current, nodes) {\n\t\tgetViewBounds:\n\t\twhile (true) {\n\t\t\tif (nodes.b) {\n\t\t\t\tvar first = nodes.a;\n\t\t\t\tvar rest = nodes.b;\n\t\t\t\tswitch (first.$) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = current,\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvar modelBounds = first.a;\n\t\t\t\t\t\tvar updated = A4($ianmackenzie$elm_3d_scene$Scene3d$updateViewBounds, viewFrame, scale, modelBounds, current);\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = updated,\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = current,\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tvar modelBounds = first.a;\n\t\t\t\t\t\tvar updated = A4($ianmackenzie$elm_3d_scene$Scene3d$updateViewBounds, viewFrame, scale, modelBounds, current);\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = updated,\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tvar childNodes = first.a;\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = A4($ianmackenzie$elm_3d_scene$Scene3d$getViewBounds, viewFrame, scale, current, childNodes),\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar transformation = first.a;\n\t\t\t\t\t\tvar childNode = first.b;\n\t\t\t\t\t\tvar localViewFrame = A2(\n\t\t\t\t\t\t\t$ianmackenzie$elm_geometry$Frame3d$relativeTo,\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Transformation$placementFrame(transformation),\n\t\t\t\t\t\t\tviewFrame);\n\t\t\t\t\t\tvar localScale = scale * transformation.b2;\n\t\t\t\t\t\tvar $temp$viewFrame = viewFrame,\n\t\t\t\t\t\t\t$temp$scale = scale,\n\t\t\t\t\t\t\t$temp$current = A4(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$getViewBounds,\n\t\t\t\t\t\t\tlocalViewFrame,\n\t\t\t\t\t\t\tlocalScale,\n\t\t\t\t\t\t\tcurrent,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[childNode])),\n\t\t\t\t\t\t\t$temp$nodes = rest;\n\t\t\t\t\t\tviewFrame = $temp$viewFrame;\n\t\t\t\t\t\tscale = $temp$scale;\n\t\t\t\t\t\tcurrent = $temp$current;\n\t\t\t\t\t\tnodes = $temp$nodes;\n\t\t\t\t\t\tcontinue getViewBounds;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn current;\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Transformation$identity = {da: true, r: 1, s: 0, t: 0, u: 0, v: 1, w: 0, x: 0, y: 0, z: 1, I: 0, J: 0, K: 0, b2: 1};\nvar $ianmackenzie$elm_units$Length$inMeters = function (_v0) {\n\tvar numMeters = _v0;\n\treturn numMeters;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$initStencil = $ianmackenzie$elm_3d_scene$Scene3d$updateStencil(\n\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace, cn: 0, cJ: $ianmackenzie$elm_3d_scene$Scene3d$initialStencilCount, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$always, cU: 255, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$replace});\nvar $ianmackenzie$elm_geometry$Vector3d$length = function (_v0) {\n\tvar v = _v0;\n\tvar largestComponent = A2(\n\t\t$elm$core$Basics$max,\n\t\t$elm$core$Basics$abs(v.d6),\n\t\tA2(\n\t\t\t$elm$core$Basics$max,\n\t\t\t$elm$core$Basics$abs(v.d7),\n\t\t\t$elm$core$Basics$abs(v.b5)));\n\tif (!largestComponent) {\n\t\treturn $ianmackenzie$elm_units$Quantity$zero;\n\t} else {\n\t\tvar scaledZ = v.b5 / largestComponent;\n\t\tvar scaledY = v.d7 / largestComponent;\n\t\tvar scaledX = v.d6 / largestComponent;\n\t\tvar scaledLength = $elm$core$Basics$sqrt(((scaledX * scaledX) + (scaledY * scaledY)) + (scaledZ * scaledZ));\n\t\treturn scaledLength * largestComponent;\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Light = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled = {bD: 0, eh: false, bK: 0, cF: 0, b$: 0, cR: 0, d6: 0, d7: 0, b5: 0};\nvar $ianmackenzie$elm_3d_scene$Scene3d$lightPair = F2(\n\tfunction (_v0, _v1) {\n\t\tvar first = _v0;\n\t\tvar second = _v1;\n\t\treturn $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t{dj: first.d6, dk: first.b$, dl: second.d6, dm: second.b$, dn: first.d7, $7: first.bK, dp: second.d7, dq: second.bK, dr: first.b5, ds: first.bD, dt: second.b5, du: second.bD, dv: first.cR, dw: first.cF, dx: second.cR, dy: second.cF});\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled = _Utils_Tuple2(\n\t{\n\t\tbd: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled),\n\t\tbP: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled),\n\t\tbQ: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled),\n\t\tbR: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled)\n\t},\n\tA4($elm_explorations$linear_algebra$Math$Vector4$vec4, 0, 0, 0, 0));\nvar $ianmackenzie$elm_units$Quantity$negate = function (_v0) {\n\tvar value = _v0;\n\treturn -value;\n};\nvar $elm_explorations$webgl$WebGL$Settings$StencilTest$equal = 514;\nvar $elm_explorations$webgl$WebGL$Settings$DepthTest$lessOrEqual = function (_v0) {\n\tvar write = _v0.ad;\n\tvar near = _v0.aa;\n\tvar far = _v0._;\n\treturn A4($elm_explorations$webgl$WebGL$Internal$DepthTest, 515, write, near, far);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$upperFourBits = 240;\nvar $ianmackenzie$elm_3d_scene$Scene3d$outsideStencil = _List_fromArray(\n\t[\n\t\t$elm_explorations$webgl$WebGL$Settings$DepthTest$lessOrEqual(\n\t\t{_: 1, aa: 0, ad: true}),\n\t\t$elm_explorations$webgl$WebGL$Settings$StencilTest$test(\n\t\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, cn: $ianmackenzie$elm_3d_scene$Scene3d$upperFourBits, cJ: 0, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$equal, cU: 0, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep}),\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$defaultBlend\n\t]);\nvar $elm$core$Basics$isInfinite = _Basics_isInfinite;\nvar $ianmackenzie$elm_3d_camera$WebGL$Matrices$projectionMatrix = F2(\n\tfunction (_v0, _v1) {\n\t\tvar camera = _v0;\n\t\tvar nearClipDepth = _v1.eP;\n\t\tvar farClipDepth = _v1.ez;\n\t\tvar aspectRatio = _v1.eb;\n\t\tvar _v2 = $ianmackenzie$elm_units$Quantity$abs(nearClipDepth);\n\t\tvar n = _v2;\n\t\tvar _v3 = $ianmackenzie$elm_units$Quantity$abs(farClipDepth);\n\t\tvar f = _v3;\n\t\tvar _v4 = camera.cH;\n\t\tif (!_v4.$) {\n\t\t\tvar frustumSlope = _v4.a;\n\t\t\treturn $elm$core$Basics$isInfinite(f) ? $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t\t{dj: 1 / (aspectRatio * frustumSlope), dk: 0, dl: 0, dm: 0, dn: 0, $7: 1 / frustumSlope, dp: 0, dq: 0, dr: 0, ds: 0, dt: -1, du: (-2) * n, dv: 0, dw: 0, dx: -1, dy: 0}) : $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t\t{dj: 1 / (aspectRatio * frustumSlope), dk: 0, dl: 0, dm: 0, dn: 0, $7: 1 / frustumSlope, dp: 0, dq: 0, dr: 0, ds: 0, dt: (-(f + n)) / (f - n), du: (((-2) * f) * n) / (f - n), dv: 0, dw: 0, dx: -1, dy: 0});\n\t\t} else {\n\t\t\tvar viewportHeight = _v4.a;\n\t\t\treturn $elm$core$Basics$isInfinite(f) ? $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t\t{dj: 2 / (aspectRatio * viewportHeight), dk: 0, dl: 0, dm: 0, dn: 0, $7: 2 / viewportHeight, dp: 0, dq: 0, dr: 0, ds: 0, dt: 0, du: -1, dv: 0, dw: 0, dx: 0, dy: 1}) : $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t\t{dj: 2 / (aspectRatio * viewportHeight), dk: 0, dl: 0, dm: 0, dn: 0, $7: 2 / viewportHeight, dp: 0, dq: 0, dr: 0, ds: 0, dt: (-2) / (f - n), du: (-(f + n)) / (f - n), dv: 0, dw: 0, dx: 0, dy: 1});\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar $ianmackenzie$elm_3d_scene$Scene3d$enabledFlag = F2(\n\tfunction (lightMask, lightIndex) {\n\t\treturn ((1 & (lightMask >> lightIndex)) === 1) ? 0 : 1;\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$insideStencil = function (lightMask) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\t$elm_explorations$webgl$WebGL$Settings$DepthTest$lessOrEqual(\n\t\t\t{_: 1, aa: 0, ad: true}),\n\t\t\t$elm_explorations$webgl$WebGL$Settings$StencilTest$test(\n\t\t\t{a8: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, cn: $ianmackenzie$elm_3d_scene$Scene3d$upperFourBits, cJ: lightMask, bp: $elm_explorations$webgl$WebGL$Settings$StencilTest$equal, cU: 0, by: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep, bz: $elm_explorations$webgl$WebGL$Settings$StencilTest$keep}),\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$defaultBlend\n\t\t]);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$renderWithinShadows = F3(\n\tfunction (meshRenderPasses, lightMatrices, numShadowingLights) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (lightMask) {\n\t\t\t\t\tvar stencilMask = lightMask << 4;\n\t\t\t\t\tvar enabledLights = A4(\n\t\t\t\t\t\t$elm_explorations$linear_algebra$Math$Vector4$vec4,\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$enabledFlag, lightMask, 0),\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$enabledFlag, lightMask, 1),\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$enabledFlag, lightMask, 2),\n\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$enabledFlag, lightMask, 3));\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$call,\n\t\t\t\t\t\tmeshRenderPasses,\n\t\t\t\t\t\t_Utils_Tuple2(lightMatrices, enabledLights),\n\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$insideStencil(stencilMask));\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$range,\n\t\t\t\t\t1,\n\t\t\t\t\tA2($elm$core$Basics$pow, 2, numShadowingLights) - 1)));\n\t});\nvar $ianmackenzie$elm_geometry$Direction3d$reverse = function (_v0) {\n\tvar d = _v0;\n\treturn {d6: -d.d6, d7: -d.d7, b5: -d.b5};\n};\nvar $elm_explorations$linear_algebra$Math$Matrix4$toRecord = _MJS_m4x4toRecord;\nvar $ianmackenzie$elm_3d_camera$Viewpoint3d$viewDirection = function (_v0) {\n\tvar frame = _v0;\n\treturn $ianmackenzie$elm_geometry$Direction3d$reverse(\n\t\t$ianmackenzie$elm_geometry$Frame3d$zDirection(frame));\n};\nvar $ianmackenzie$elm_geometry$Point3d$origin = {d6: 0, d7: 0, b5: 0};\nvar $ianmackenzie$elm_geometry$Direction3d$x = $ianmackenzie$elm_geometry$Direction3d$positiveX;\nvar $ianmackenzie$elm_geometry$Direction3d$y = $ianmackenzie$elm_geometry$Direction3d$positiveY;\nvar $ianmackenzie$elm_geometry$Direction3d$z = $ianmackenzie$elm_geometry$Direction3d$positiveZ;\nvar $ianmackenzie$elm_geometry$Frame3d$atOrigin = {cw: $ianmackenzie$elm_geometry$Point3d$origin, cV: $ianmackenzie$elm_geometry$Direction3d$x, cW: $ianmackenzie$elm_geometry$Direction3d$y, cX: $ianmackenzie$elm_geometry$Direction3d$z};\nvar $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Frame3d$toMat4 = function (frame) {\n\tvar p = $ianmackenzie$elm_geometry$Point3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$originPoint(frame));\n\tvar k = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$zDirection(frame));\n\tvar j = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$yDirection(frame));\n\tvar i = $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t$ianmackenzie$elm_geometry$Frame3d$xDirection(frame));\n\treturn $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t{dj: i.d6, dk: j.d6, dl: k.d6, dm: p.d6, dn: i.d7, $7: j.d7, dp: k.d7, dq: p.d7, dr: i.b5, ds: j.b5, dt: k.b5, du: p.b5, dv: 0, dw: 0, dx: 0, dy: 1});\n};\nvar $ianmackenzie$elm_3d_camera$WebGL$Matrices$modelViewMatrix = F2(\n\tfunction (modelFrame, _v0) {\n\t\tvar viewpointFrame = _v0;\n\t\treturn $ianmackenzie$elm_geometry_linear_algebra_interop$Geometry$Interop$LinearAlgebra$Frame3d$toMat4(\n\t\t\tA2($ianmackenzie$elm_geometry$Frame3d$relativeTo, viewpointFrame, modelFrame));\n\t});\nvar $ianmackenzie$elm_3d_camera$WebGL$Matrices$viewMatrix = function (camera) {\n\treturn A2($ianmackenzie$elm_3d_camera$WebGL$Matrices$modelViewMatrix, $ianmackenzie$elm_geometry$Frame3d$atOrigin, camera);\n};\nvar $ianmackenzie$elm_3d_camera$Camera3d$viewpoint = function (_v0) {\n\tvar camera = _v0;\n\treturn camera.e7;\n};\nvar $ianmackenzie$elm_3d_camera$Viewpoint3d$xDirection = function (_v0) {\n\tvar frame = _v0;\n\treturn $ianmackenzie$elm_geometry$Frame3d$xDirection(frame);\n};\nvar $ianmackenzie$elm_geometry$Vector3d$xyz = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\tvar x = _v0;\n\t\tvar y = _v1;\n\t\tvar z = _v2;\n\t\treturn {d6: x, d7: y, b5: z};\n\t});\nvar $ianmackenzie$elm_3d_camera$Viewpoint3d$yDirection = function (_v0) {\n\tvar frame = _v0;\n\treturn $ianmackenzie$elm_geometry$Frame3d$yDirection(frame);\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$toWebGLEntities = function (_arguments) {\n\tvar viewpoint = $ianmackenzie$elm_3d_camera$Camera3d$viewpoint(_arguments.eg);\n\tvar viewFrame = $ianmackenzie$elm_geometry$Frame3d$unsafe(\n\t\t{\n\t\t\tcw: $ianmackenzie$elm_3d_camera$Viewpoint3d$eyePoint(viewpoint),\n\t\t\tcV: $ianmackenzie$elm_3d_camera$Viewpoint3d$xDirection(viewpoint),\n\t\t\tcW: $ianmackenzie$elm_3d_camera$Viewpoint3d$yDirection(viewpoint),\n\t\t\tcX: $ianmackenzie$elm_geometry$Direction3d$reverse(\n\t\t\t\t$ianmackenzie$elm_3d_camera$Viewpoint3d$viewDirection(viewpoint))\n\t\t});\n\tvar _v0 = $ianmackenzie$elm_3d_scene$Scene3d$Entity$group(_arguments.et);\n\tvar rootNode = _v0;\n\tvar _v1 = A4(\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$getViewBounds,\n\t\tviewFrame,\n\t\t1,\n\t\t$elm$core$Maybe$Nothing,\n\t\t_List_fromArray(\n\t\t\t[rootNode]));\n\tif (_v1.$ === 1) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tvar viewBounds = _v1.a;\n\t\tvar viewMatrix = $ianmackenzie$elm_3d_camera$WebGL$Matrices$viewMatrix(viewpoint);\n\t\tvar nearClipDepth = A2(\n\t\t\t$ianmackenzie$elm_units$Quantity$multiplyBy,\n\t\t\t0.99,\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$max,\n\t\t\t\t$ianmackenzie$elm_units$Quantity$abs(_arguments.ek),\n\t\t\t\t$ianmackenzie$elm_units$Quantity$negate(\n\t\t\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$maxZ(viewBounds))));\n\t\tvar _v2 = $ianmackenzie$elm_geometry$BoundingBox3d$dimensions(viewBounds);\n\t\tvar xDimension = _v2.a;\n\t\tvar yDimension = _v2.b;\n\t\tvar zDimension = _v2.c;\n\t\tvar sceneDiameter = $ianmackenzie$elm_geometry$Vector3d$length(\n\t\t\tA3($ianmackenzie$elm_geometry$Vector3d$xyz, xDimension, yDimension, zDimension));\n\t\tvar farClipDepth = A2(\n\t\t\t$ianmackenzie$elm_units$Quantity$multiplyBy,\n\t\t\t1.01,\n\t\t\tA2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$plus,\n\t\t\t\tsceneDiameter,\n\t\t\t\t$ianmackenzie$elm_units$Quantity$negate(\n\t\t\t\t\t$ianmackenzie$elm_geometry$BoundingBox3d$minZ(viewBounds))));\n\t\tvar projectionMatrix = A2(\n\t\t\t$ianmackenzie$elm_3d_camera$WebGL$Matrices$projectionMatrix,\n\t\t\t_arguments.eg,\n\t\t\t{eb: _arguments.eb, ez: farClipDepth, eP: nearClipDepth});\n\t\tvar projectionType = $elm_explorations$linear_algebra$Math$Matrix4$toRecord(projectionMatrix).dy;\n\t\tvar eyePointOrDirectionToCamera = (!projectionType) ? $ianmackenzie$elm_geometry$Point3d$toMeters(\n\t\t\t$ianmackenzie$elm_3d_camera$Viewpoint3d$eyePoint(viewpoint)) : $ianmackenzie$elm_geometry$Direction3d$unwrap(\n\t\t\t$ianmackenzie$elm_geometry$Direction3d$reverse(\n\t\t\t\t$ianmackenzie$elm_3d_camera$Viewpoint3d$viewDirection(viewpoint)));\n\t\tvar _v3 = function () {\n\t\t\tvar _v4 = _arguments.aw;\n\t\t\tswitch (_v4.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn _Utils_Tuple2(0, 0);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn _Utils_Tuple2(1, 0);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn _Utils_Tuple2(2, 0);\n\t\t\t\tcase 3:\n\t\t\t\t\tvar overexposureLimit = _v4.a;\n\t\t\t\t\treturn _Utils_Tuple2(3, overexposureLimit);\n\t\t\t\tcase 4:\n\t\t\t\t\tvar overexposureLimit = _v4.a;\n\t\t\t\t\treturn _Utils_Tuple2(4, overexposureLimit);\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(5, 0);\n\t\t\t}\n\t\t}();\n\t\tvar toneMapType = _v3.a;\n\t\tvar toneMapParam = _v3.b;\n\t\tvar _v5 = _arguments.ap;\n\t\tvar exposureLuminance = _v5;\n\t\tvar _v6 = A2($ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToLinearRgb, exposureLuminance, _arguments.az);\n\t\tvar referenceWhite = _v6;\n\t\tvar sceneProperties = $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t\t{\n\t\t\t\tdj: 0,\n\t\t\t\tdk: eyePointOrDirectionToCamera.d6,\n\t\t\t\tdl: $elm_explorations$linear_algebra$Math$Vector3$getX(referenceWhite),\n\t\t\t\tdm: _arguments.d$,\n\t\t\t\tdn: 0,\n\t\t\t\t$7: eyePointOrDirectionToCamera.d7,\n\t\t\t\tdp: $elm_explorations$linear_algebra$Math$Vector3$getY(referenceWhite),\n\t\t\t\tdq: $ianmackenzie$elm_units$Length$inMeters(sceneDiameter),\n\t\t\t\tdr: 0,\n\t\t\t\tds: eyePointOrDirectionToCamera.b5,\n\t\t\t\tdt: $elm_explorations$linear_algebra$Math$Vector3$getZ(referenceWhite),\n\t\t\t\tdu: toneMapType,\n\t\t\t\tdv: 0,\n\t\t\t\tdw: projectionType,\n\t\t\t\tdx: 0,\n\t\t\t\tdy: toneMapParam\n\t\t\t});\n\t\tvar renderPasses = A6(\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$collectRenderPasses,\n\t\t\tsceneProperties,\n\t\t\tviewMatrix,\n\t\t\tprojectionMatrix,\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$Transformation$identity,\n\t\t\trootNode,\n\t\t\t{O: _List_Nil, Z: _List_Nil, eY: _List_Nil});\n\t\tvar _v7 = _arguments.ar;\n\t\tswitch (_v7.$) {\n\t\t\tcase 0:\n\t\t\t\tvar lightMatrices = _v7.a;\n\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$call,\n\t\t\t\t\t\t\trenderPasses.O,\n\t\t\t\t\t\t\t_Utils_Tuple2(lightMatrices, $ianmackenzie$elm_3d_scene$Scene3d$allLightsEnabled),\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault),\n\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, renderPasses.Z, $ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled, $ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault)\n\t\t\t\t\t\t]));\n\t\t\tcase 1:\n\t\t\t\tvar lightMatrices = _v7.a;\n\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, renderPasses.O, $ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled, $ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$ianmackenzie$elm_3d_scene$Scene3d$initStencil]),\n\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, renderPasses.eY, lightMatrices.bd, $ianmackenzie$elm_3d_scene$Scene3d$createShadowStencil),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$storeStencilValue(0)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$call,\n\t\t\t\t\t\t\trenderPasses.O,\n\t\t\t\t\t\t\t_Utils_Tuple2(lightMatrices, $ianmackenzie$elm_3d_scene$Scene3d$allLightsEnabled),\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$outsideStencil),\n\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, renderPasses.Z, $ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled, $ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault)\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\tvar shadowCasters = _v7.a;\n\t\t\t\tvar allLightMatrices = _v7.b;\n\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$call,\n\t\t\t\t\t\t\trenderPasses.O,\n\t\t\t\t\t\t\t_Utils_Tuple2(allLightMatrices, $ianmackenzie$elm_3d_scene$Scene3d$allLightsEnabled),\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$ianmackenzie$elm_3d_scene$Scene3d$initStencil]),\n\t\t\t\t\t\t\tA2($ianmackenzie$elm_3d_scene$Scene3d$createShadows, renderPasses.eY, shadowCasters),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$renderWithinShadows,\n\t\t\t\t\t\t\trenderPasses.O,\n\t\t\t\t\t\t\tallLightMatrices,\n\t\t\t\t\t\t\t$elm$core$List$length(shadowCasters)),\n\t\t\t\t\t\t\tA3($ianmackenzie$elm_3d_scene$Scene3d$call, renderPasses.Z, $ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled, $ianmackenzie$elm_3d_scene$Scene3d$depthTestDefault)\n\t\t\t\t\t\t]));\n\t\t}\n\t}\n};\nvar $elm$html$Html$Attributes$width = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'width',\n\t\t$elm$core$String$fromInt(n));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$composite = F2(\n\tfunction (_arguments, scenes) {\n\t\tvar commonWebGLOptions = _List_fromArray(\n\t\t\t[\n\t\t\t\t$elm_explorations$webgl$WebGL$depth(1),\n\t\t\t\t$elm_explorations$webgl$WebGL$stencil(0),\n\t\t\t\t$elm_explorations$webgl$WebGL$alpha(true),\n\t\t\t\tA4($elm_explorations$webgl$WebGL$clearColor, 0, 0, 0, 0)\n\t\t\t]);\n\t\tvar _v0 = function () {\n\t\t\tvar _v1 = _arguments.aM;\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn _Utils_Tuple3(commonWebGLOptions, '0', 1);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\tA2($elm$core$List$cons, $elm_explorations$webgl$WebGL$antialias, commonWebGLOptions),\n\t\t\t\t\t\t'1',\n\t\t\t\t\t\t1);\n\t\t\t\tdefault:\n\t\t\t\t\tvar value = _v1.a;\n\t\t\t\t\treturn _Utils_Tuple3(commonWebGLOptions, '0', value);\n\t\t\t}\n\t\t}();\n\t\tvar webGLOptions = _v0.a;\n\t\tvar key = _v0.b;\n\t\tvar scalingFactor = _v0.c;\n\t\tvar _v2 = _arguments.en;\n\t\tvar width = _v2.a;\n\t\tvar height = _v2.b;\n\t\tvar heightInPixels = $ianmackenzie$elm_units$Pixels$toInt(height);\n\t\tvar heightCss = A2(\n\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t'height',\n\t\t\t$elm$core$String$fromInt(heightInPixels) + 'px');\n\t\tvar widthInPixels = $ianmackenzie$elm_units$Pixels$toInt(width);\n\t\tvar aspectRatio = widthInPixels / heightInPixels;\n\t\tvar webGLEntities = A2(\n\t\t\t$elm$core$List$concatMap,\n\t\t\tfunction (scene) {\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$toWebGLEntities(\n\t\t\t\t\t{eb: aspectRatio, eg: _arguments.eg, ek: _arguments.ek, et: scene.et, ap: scene.ap, ar: scene.ar, d$: scalingFactor, aw: scene.aw, az: scene.az});\n\t\t\t},\n\t\t\tscenes);\n\t\tvar widthCss = A2(\n\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t'width',\n\t\t\t$elm$core$String$fromInt(widthInPixels) + 'px');\n\t\tvar _v3 = _arguments.ed;\n\t\tvar givenBackgroundColor = _v3;\n\t\tvar backgroundColorString = $avh4$elm_color$Color$toCssString(givenBackgroundColor);\n\t\treturn A3(\n\t\t\t$elm$html$Html$Keyed$node,\n\t\t\t'div',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'padding', '0px'),\n\t\t\t\t\twidthCss,\n\t\t\t\t\theightCss\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\tkey,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm_explorations$webgl$WebGL$toHtmlWith,\n\t\t\t\t\t\twebGLOptions,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$width(\n\t\t\t\t\t\t\t\t$elm$core$Basics$round(widthInPixels * scalingFactor)),\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$height(\n\t\t\t\t\t\t\t\t$elm$core$Basics$round(heightInPixels * scalingFactor)),\n\t\t\t\t\t\t\t\twidthCss,\n\t\t\t\t\t\t\t\theightCss,\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'display', 'block'),\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'background-color', backgroundColorString)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\twebGLEntities))\n\t\t\t\t]));\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$custom = function (_arguments) {\n\treturn A2(\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$composite,\n\t\t{aM: _arguments.aM, ed: _arguments.ed, eg: _arguments.eg, ek: _arguments.ek, en: _arguments.en},\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t{et: _arguments.et, ap: _arguments.ap, ar: _arguments.ar, aw: _arguments.aw, az: _arguments.az}\n\t\t\t]));\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Types$Chromaticity = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$chromaticity = function (xy) {\n\treturn xy;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$daylight = $ianmackenzie$elm_3d_scene$Scene3d$Light$chromaticity(\n\t{d6: 0.31271, d7: 0.32902});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$directional = F2(\n\tfunction (_v0, light) {\n\t\tvar shadowFlag = _v0;\n\t\tvar _v1 = $ianmackenzie$elm_geometry$Direction3d$unwrap(light.eo);\n\t\tvar x = _v1.d6;\n\t\tvar y = _v1.d7;\n\t\tvar z = _v1.b5;\n\t\tvar _v2 = A2($ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToLinearRgb, light.ce, light.bF);\n\t\tvar rgb = _v2;\n\t\treturn {\n\t\t\tbD: $elm_explorations$linear_algebra$Math$Vector3$getZ(rgb),\n\t\t\teh: shadowFlag,\n\t\t\tbK: $elm_explorations$linear_algebra$Math$Vector3$getY(rgb),\n\t\t\tcF: 0,\n\t\t\tb$: $elm_explorations$linear_algebra$Math$Vector3$getX(rgb),\n\t\t\tcR: 1,\n\t\t\td6: -x,\n\t\t\td7: -y,\n\t\t\tb5: -z\n\t\t};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$Exposure = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_units$Luminance$nits = function (numNits) {\n\treturn numNits;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$exposureValue = function (ev100) {\n\treturn $ianmackenzie$elm_units$Luminance$nits(\n\t\t1.2 * A2($elm$core$Basics$pow, 2, ev100));\n};\nvar $ianmackenzie$elm_units$Illuminance$lux = function (numLux) {\n\treturn numLux;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Multisampling = {$: 1};\nvar $ianmackenzie$elm_3d_scene$Scene3d$multisampling = $ianmackenzie$elm_3d_scene$Scene3d$Multisampling;\nvar $ianmackenzie$elm_3d_scene$Scene3d$NoToneMapping = {$: 0};\nvar $ianmackenzie$elm_3d_scene$Scene3d$noToneMapping = $ianmackenzie$elm_3d_scene$Scene3d$NoToneMapping;\nvar $ianmackenzie$elm_units$Illuminance$inLux = function (_v0) {\n\tvar numLux = _v0;\n\treturn numLux;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$soft = function (light) {\n\tsoft:\n\twhile (true) {\n\t\tif (_Utils_eq(light.eJ, $ianmackenzie$elm_units$Quantity$zero) && _Utils_eq(light.eK, $ianmackenzie$elm_units$Quantity$zero)) {\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled;\n\t\t} else {\n\t\t\tif (A2(\n\t\t\t\t$ianmackenzie$elm_units$Quantity$greaterThan,\n\t\t\t\t$ianmackenzie$elm_units$Quantity$abs(light.eJ),\n\t\t\t\t$ianmackenzie$elm_units$Quantity$abs(light.eK))) {\n\t\t\t\tvar $temp$light = {\n\t\t\t\t\tbF: light.bF,\n\t\t\t\t\teJ: light.eK,\n\t\t\t\t\teK: light.eJ,\n\t\t\t\t\td4: $ianmackenzie$elm_geometry$Direction3d$reverse(light.d4)\n\t\t\t\t};\n\t\t\t\tlight = $temp$light;\n\t\t\t\tcontinue soft;\n\t\t\t} else {\n\t\t\t\tvar nitsBelow = $elm$core$Basics$abs(\n\t\t\t\t\t$ianmackenzie$elm_units$Illuminance$inLux(light.eK) / $elm$core$Basics$pi);\n\t\t\t\tvar nitsAbove = $elm$core$Basics$abs(\n\t\t\t\t\t$ianmackenzie$elm_units$Illuminance$inLux(light.eJ) / $elm$core$Basics$pi);\n\t\t\t\tvar _v0 = $ianmackenzie$elm_geometry$Direction3d$unwrap(light.d4);\n\t\t\t\tvar x = _v0.d6;\n\t\t\t\tvar y = _v0.d7;\n\t\t\t\tvar z = _v0.b5;\n\t\t\t\tvar _v1 = A2(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$ColorConversions$chromaticityToLinearRgb,\n\t\t\t\t\t$ianmackenzie$elm_units$Quantity$float(1),\n\t\t\t\t\tlight.bF);\n\t\t\t\tvar rgb = _v1;\n\t\t\t\treturn {\n\t\t\t\t\tbD: nitsAbove * $elm_explorations$linear_algebra$Math$Vector3$getZ(rgb),\n\t\t\t\t\teh: false,\n\t\t\t\t\tbK: nitsAbove * $elm_explorations$linear_algebra$Math$Vector3$getY(rgb),\n\t\t\t\t\tcF: nitsBelow / nitsAbove,\n\t\t\t\t\tb$: nitsAbove * $elm_explorations$linear_algebra$Math$Vector3$getX(rgb),\n\t\t\t\t\tcR: 3,\n\t\t\t\t\td6: x,\n\t\t\t\t\td7: y,\n\t\t\t\t\tb5: z\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$overhead = function (_arguments) {\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$Light$soft(\n\t\t{bF: _arguments.bF, eJ: _arguments.ce, eK: $ianmackenzie$elm_units$Quantity$zero, d4: _arguments.d4});\n};\nvar $ianmackenzie$elm_units$Temperature$inKelvins = function (_v0) {\n\tvar numKelvins = _v0;\n\treturn numKelvins;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$colorTemperature = function (temperature) {\n\tvar t = A3(\n\t\t$elm$core$Basics$clamp,\n\t\t1667,\n\t\t25000,\n\t\t$ianmackenzie$elm_units$Temperature$inKelvins(temperature));\n\tvar x = (t <= 4000) ? ((((((-0.2661239) * 1.0e9) / ((t * t) * t)) - ((0.2343589 * 1.0e6) / (t * t))) + ((0.8776956 * 1.0e3) / t)) + 0.17991) : ((((((-3.0258469) * 1.0e9) / ((t * t) * t)) + ((2.1070379 * 1.0e6) / (t * t))) + ((0.2226347 * 1.0e3) / t)) + 0.24039);\n\tvar y = (t <= 2222) ? (((((-1.1063814) * ((x * x) * x)) - (1.3481102 * (x * x))) + (2.18555832 * x)) - 0.20219683) : ((t <= 4000) ? (((((-0.9549476) * ((x * x) * x)) - (1.37418593 * (x * x))) + (2.09137015 * x)) - 0.16748867) : ((((3.081758 * ((x * x) * x)) - (5.8733867 * (x * x))) + (3.75112997 * x)) - 0.37001483));\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$Light$chromaticity(\n\t\t{d6: x, d7: y});\n};\nvar $ianmackenzie$elm_units$Temperature$Temperature = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_units$Temperature$kelvins = function (numKelvins) {\n\treturn numKelvins;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$skylight = $ianmackenzie$elm_3d_scene$Scene3d$Light$colorTemperature(\n\t$ianmackenzie$elm_units$Temperature$kelvins(12000));\nvar $ianmackenzie$elm_3d_scene$Scene3d$Light$sunlight = $ianmackenzie$elm_3d_scene$Scene3d$Light$colorTemperature(\n\t$ianmackenzie$elm_units$Temperature$kelvins(5600));\nvar $ianmackenzie$elm_3d_scene$Scene3d$MultiplePasses = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$SingleUnshadowedPass = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$eraseLight = function (_v0) {\n\tvar light = _v0;\n\treturn light;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$lightCastsShadows = function (_v0) {\n\tvar properties = _v0;\n\treturn properties.eh;\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$noLights = $ianmackenzie$elm_3d_scene$Scene3d$SingleUnshadowedPass($ianmackenzie$elm_3d_scene$Scene3d$lightingDisabled.a);\nvar $elm$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _v0) {\n\t\t\t\tvar trues = _v0.a;\n\t\t\t\tvar falses = _v0.b;\n\t\t\t\treturn pred(x) ? _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, x, trues),\n\t\t\t\t\tfalses) : _Utils_Tuple2(\n\t\t\t\t\ttrues,\n\t\t\t\t\tA2($elm$core$List$cons, x, falses));\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tstep,\n\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\tlist);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$singleLight = function (_v0) {\n\tvar light = _v0;\n\treturn $elm_explorations$linear_algebra$Math$Matrix4$fromRecord(\n\t\t{dj: light.d6, dk: light.b$, dl: 0, dm: 0, dn: light.d7, $7: light.bK, dp: 0, dq: 0, dr: light.b5, ds: light.bD, dt: 0, du: 0, dv: light.cR, dw: light.cF, dx: 0, dy: 0});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$eightLights = F8(\n\tfunction (first, second, third, fourth, fifth, sixth, seventh, eigth) {\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$List$partition,\n\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$lightCastsShadows,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$eraseLight(first),\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$eraseLight(second),\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$eraseLight(third),\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$eraseLight(fourth)\n\t\t\t\t]));\n\t\tvar enabledShadowCasters = _v0.a;\n\t\tvar disabledShadowCasters = _v0.b;\n\t\tif (!enabledShadowCasters.b) {\n\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$SingleUnshadowedPass(\n\t\t\t\t{\n\t\t\t\t\tbd: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, first, second),\n\t\t\t\t\tbP: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, third, fourth),\n\t\t\t\t\tbQ: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, fifth, sixth),\n\t\t\t\t\tbR: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, seventh, eigth)\n\t\t\t\t});\n\t\t} else {\n\t\t\tvar sortedLights = _Utils_ap(enabledShadowCasters, disabledShadowCasters);\n\t\t\tif ((((sortedLights.b && sortedLights.b.b) && sortedLights.b.b.b) && sortedLights.b.b.b.b) && (!sortedLights.b.b.b.b.b)) {\n\t\t\t\tvar light0 = sortedLights.a;\n\t\t\t\tvar _v3 = sortedLights.b;\n\t\t\t\tvar light1 = _v3.a;\n\t\t\t\tvar _v4 = _v3.b;\n\t\t\t\tvar light2 = _v4.a;\n\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\tvar light3 = _v5.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$MultiplePasses,\n\t\t\t\t\tA2($elm$core$List$map, $ianmackenzie$elm_3d_scene$Scene3d$singleLight, enabledShadowCasters),\n\t\t\t\t\t{\n\t\t\t\t\t\tbd: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, light0, light1),\n\t\t\t\t\t\tbP: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, light2, light3),\n\t\t\t\t\t\tbQ: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, fifth, sixth),\n\t\t\t\t\t\tbR: A2($ianmackenzie$elm_3d_scene$Scene3d$lightPair, seventh, eigth)\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn $ianmackenzie$elm_3d_scene$Scene3d$noLights;\n\t\t\t}\n\t\t}\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$threeLights = F3(\n\tfunction (first, second, third) {\n\t\treturn A8($ianmackenzie$elm_3d_scene$Scene3d$eightLights, first, second, third, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled, $ianmackenzie$elm_3d_scene$Scene3d$Light$disabled);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$sunny = function (_arguments) {\n\tvar sun = A2(\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Light$directional,\n\t\t$ianmackenzie$elm_3d_scene$Scene3d$Light$castsShadows(_arguments.eY),\n\t\t{\n\t\t\tbF: $ianmackenzie$elm_3d_scene$Scene3d$Light$sunlight,\n\t\t\teo: _arguments.e1,\n\t\t\tce: $ianmackenzie$elm_units$Illuminance$lux(80000)\n\t\t});\n\tvar sky = $ianmackenzie$elm_3d_scene$Scene3d$Light$overhead(\n\t\t{\n\t\t\tbF: $ianmackenzie$elm_3d_scene$Scene3d$Light$skylight,\n\t\t\tce: $ianmackenzie$elm_units$Illuminance$lux(20000),\n\t\t\td4: _arguments.d4\n\t\t});\n\tvar environment = $ianmackenzie$elm_3d_scene$Scene3d$Light$overhead(\n\t\t{\n\t\t\tbF: $ianmackenzie$elm_3d_scene$Scene3d$Light$daylight,\n\t\t\tce: $ianmackenzie$elm_units$Illuminance$lux(15000),\n\t\t\td4: $ianmackenzie$elm_geometry$Direction3d$reverse(_arguments.d4)\n\t\t});\n\tvar lights = A3($ianmackenzie$elm_3d_scene$Scene3d$threeLights, sun, sky, environment);\n\treturn $ianmackenzie$elm_3d_scene$Scene3d$custom(\n\t\t{\n\t\t\taM: $ianmackenzie$elm_3d_scene$Scene3d$multisampling,\n\t\t\ted: _arguments.ed,\n\t\t\teg: _arguments.eg,\n\t\t\tek: _arguments.ek,\n\t\t\ten: _arguments.en,\n\t\t\tet: _arguments.et,\n\t\t\tap: $ianmackenzie$elm_3d_scene$Scene3d$exposureValue(15),\n\t\t\tar: lights,\n\t\t\taw: $ianmackenzie$elm_3d_scene$Scene3d$noToneMapping,\n\t\t\taz: $ianmackenzie$elm_3d_scene$Scene3d$Light$daylight\n\t\t});\n};\nvar $ianmackenzie$elm_3d_scene$Scene3d$BackgroundColor = $elm$core$Basics$identity;\nvar $ianmackenzie$elm_3d_scene$Scene3d$backgroundColor = function (color) {\n\treturn color;\n};\nvar $avh4$elm_color$Color$rgba = F4(\n\tfunction (r, g, b, a) {\n\t\treturn A4($avh4$elm_color$Color$RgbaSpace, r, g, b, a);\n\t});\nvar $ianmackenzie$elm_3d_scene$Scene3d$transparentBackground = $ianmackenzie$elm_3d_scene$Scene3d$backgroundColor(\n\tA4($avh4$elm_color$Color$rgba, 0, 0, 0, 0));\nvar $author$project$Main$view = function (model) {\n\tvar camera = $ianmackenzie$elm_3d_camera$Camera3d$perspective(\n\t\t{\n\t\t\te5: $ianmackenzie$elm_units$Angle$degrees(35),\n\t\t\te7: $ianmackenzie$elm_3d_camera$Viewpoint3d$lookAt(\n\t\t\t\t{\n\t\t\t\t\tex: A3($ianmackenzie$elm_geometry$Point3d$meters, 0, 0, 85),\n\t\t\t\t\teA: A3($ianmackenzie$elm_geometry$Point3d$meters, 0, 0, 0),\n\t\t\t\t\td4: $ianmackenzie$elm_geometry$Direction3d$positiveZ\n\t\t\t\t})\n\t\t});\n\tvar axisCount = 50;\n\tvar offset = (-0.5) + (((-1) * axisCount) / 2);\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t'width',\n\t\t\t\t$elm$core$String$fromInt(model.bk) + 'px'),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t'height',\n\t\t\t\t$elm$core$String$fromInt(model.bl) + 'px'),\n\t\t\t\tA2($elm$html$Html$Attributes$style, 'background-color', 'rgb(33, 26, 64)')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$ianmackenzie$elm_3d_scene$Scene3d$sunny(\n\t\t\t\t{\n\t\t\t\t\ted: $ianmackenzie$elm_3d_scene$Scene3d$transparentBackground,\n\t\t\t\t\teg: camera,\n\t\t\t\t\tek: $ianmackenzie$elm_units$Length$meters(0.1),\n\t\t\t\t\ten: _Utils_Tuple2(\n\t\t\t\t\t\t$ianmackenzie$elm_units$Pixels$int(model.bk),\n\t\t\t\t\t\t$ianmackenzie$elm_units$Pixels$int(model.bl)),\n\t\t\t\t\tet: A2(\n\t\t\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\t\t\tfunction (xi) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (yi) {\n\t\t\t\t\t\t\t\t\treturn A4($author$project$Main$blockAtIndex, offset, model.bs, xi, yi);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2($elm$core$List$range, 1, axisCount));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$core$List$range, 1, axisCount)),\n\t\t\t\t\teY: true,\n\t\t\t\t\te1: $ianmackenzie$elm_geometry$Direction3d$negativeZ,\n\t\t\t\t\td4: $ianmackenzie$elm_geometry$Direction3d$positiveZ\n\t\t\t\t})\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\teI: function (_v0) {\n\t\t\treturn $author$project$Main$init;\n\t\t},\n\t\te0: $elm$core$Basics$always(\n\t\t\t$elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$Resize),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onAnimationFrameDelta($author$project$Main$Tick)\n\t\t\t\t\t]))),\n\t\te3: $author$project$Main$update,\n\t\te6: $author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}